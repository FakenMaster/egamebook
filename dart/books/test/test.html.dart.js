// Generated by dart2js, the Dart to JavaScript compiler.
// The code supports the following hooks:
// dartPrint(message)   - if this function is defined it is called
//                        instead of the Dart [print] method.
// dartMainRunner(main) - if this function is defined, the Dart [main]
//                        method will not be invoked directly.
//                        Instead, a closure that will invoke [main] is
//                        passed to [dartMainRunner].
function Isolate() {}
init();

var $$ = {};
var $ = Isolate.$isolateProperties;
$$.JSInvocationMirror = {"": "Object;memberName,_internalName,_kind,_liblib1$_arguments,_namedArgumentNames,_namedIndices",
  get$isGetter: function() {
    return $.$$eq(this._kind, 1);
  },
  get$isSetter: function() {
    return $.$$eq(this._kind, 2);
  },
  get$isAccessor: function() {
    return $.$$eq(this._kind, 0) !== true;
  },
  get$positionalArguments: function() {
    var list, t1, t3, t4, index;
    if (this.get$isGetter() === true)
      return;
    list = [];
    t1 = this._liblib1$_arguments;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.get$positionalArguments$bailout(1, t1, list);
    t3 = t1.length;
    t4 = $.length(this._namedArgumentNames);
    if (typeof t4 !== "number")
      throw $.iae(t4);
    t4 = t3 - t4;
    for (index = 0; index < t4; ++index) {
      if (index >= t1.length)
        throw $.ioore(index);
      list.push(t1[index]);
    }
    return list;
  },
  get$positionalArguments$bailout: function(state0, t1, list, t3, t4) {
    switch (state0) {
      case 0:
        if (this.get$isGetter() === true)
          return;
        list = [];
        t1 = this._liblib1$_arguments;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        t4 = $.$$sub(t3.get$length(t1), $.length(this._namedArgumentNames));
      case 2:
        var index;
        state0 = 0;
        for (index = 0; $.CONSTANT2.$lt(index, t4); ++index)
          list.push(t3.$index(t1, index));
        return list;
    }
  },
  get$namedArguments: function() {
    var map, t2, t4, namedArgumentCount, t5, t7, t8, t1, i, t3;
    if (this.get$isAccessor() === true)
      return;
    map = $.makeLiteralMap([]);
    if (typeof map !== "object" || map === null || (map.constructor !== Array || !!map.immutable$list) && !map.$isJavaScriptIndexingBehavior())
      return this.get$namedArguments$bailout(1, map);
    t2 = this._namedArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.get$namedArguments$bailout(2, map, t2);
    t4 = $.getInterceptor$JSStringJSArray(t2);
    namedArgumentCount = t2.length;
    t5 = this._liblib1$_arguments;
    if (typeof t5 !== "string" && (typeof t5 !== "object" || t5 === null || t5.constructor !== Array && !t5.$isJavaScriptIndexingBehavior()))
      return this.get$namedArguments$bailout(4, map, t2, t4, namedArgumentCount, t5);
    t7 = t5.length;
    t8 = t7 - namedArgumentCount;
    for (t1 = map.length, i = 0; i < namedArgumentCount; ++i) {
      t3 = t2[i];
      t4 = t8 + i;
      if (t4 < 0 || t4 >= t7)
        throw $.ioore(t4);
      t4 = t5[t4];
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1)
        throw $.ioore(t3);
      map[t3] = t4;
    }
    return map;
  },
  get$namedArguments$bailout: function(state0, map, t2, t4, namedArgumentCount, t6, t8, t9) {
    switch (state0) {
      case 0:
        if (this.get$isAccessor() === true)
          return;
        map = $.makeLiteralMap([]);
      case 1:
        state0 = 0;
        t2 = this._namedArgumentNames;
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSStringJSArray(t2);
        namedArgumentCount = t4.get$length(t2);
      case 3:
        state0 = 0;
        t6 = this._liblib1$_arguments;
      case 4:
        state0 = 0;
        t8 = $.getInterceptor$JSStringJSArray(t6);
        t9 = $.$$sub(t8.get$length(t6), namedArgumentCount);
      case 5:
        var t1, t3, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSNumber(t9), t3 = $.getInterceptor$JSArray(map), i = 0; $.CONSTANT2.$lt(i, namedArgumentCount); ++i)
          t3.$indexSet(map, t4.$index(t2, i), t8.$index(t6, t1.$add(t9, i)));
        return map;
    }
  }
};

$$.DartError = {"": "Object;",
  get$stack: function() {
    return this.stack;
  },
  toString$0: function() {
    var dartException = this.dartException;
    if (!!Error.captureStackTrace || this.get$stack() == null)
      return $.toString(dartException);
    else
      return $.S(dartException) + "\n" + $.S(this.get$stack());
  },
  DartError$1: function(dartException) {
    this.dartException = dartException;
    this.toString = $.DartError_toStringWrapper.call$0;
  }
};

$$.StackTrace = {"": "Object;stack",
  toString$0: function() {
    var t1 = this.stack;
    return !(t1 == null) ? t1 : "";
  }
};

$$.Closure = {"": "Object;",
  toString$0: function() {
    return "Closure";
  },
  $isFunction: true
};

$$.Null = {"": "Object;"};

$$.CastErrorImplementation = {"": "Object;actualType,expectedType",
  toString$0: function() {
    return "CastError: Casting value of type " + $.S(this.actualType) + " to" + " incompatible type " + $.S(this.expectedType);
  }
};

$$.MetaInfo = {"": "Object;_tag>,_tags,_set>"};

$$.JSSyntaxRegExp = {"": "Object;_liblib1$_pattern,_isMultiLine,_isCaseSensitive",
  firstMatch$1: function(str) {
    var m, matchStart, t1;
    m = $.regExpExec(this, $.checkString(str));
    if (m == null)
      return;
    matchStart = m.index;
    t1 = $.length($.$$index(m, 0));
    if (typeof t1 !== "number")
      throw $.iae(t1);
    return $._MatchImplementation$(this.get$pattern(), str, matchStart, matchStart + t1, m);
  },
  hasMatch$1: function(str) {
    return $.regExpTest(this, $.checkString(str));
  },
  allMatches$1: function(str) {
    $.checkString(str);
    return $._AllMatchesIterable$(this, str);
  },
  get$pattern: function() {
    return this._liblib1$_pattern;
  },
  get$isMultiLine: function() {
    return this._isMultiLine;
  },
  get$isCaseSensitive: function() {
    return this._isCaseSensitive;
  },
  $isJSSyntaxRegExp: true
};

$$._MatchImplementation = {"": "Object;pattern>,str,start,end,_groups",
  $index: function(index) {
    var t1 = this._groups;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout1(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout1: function(state0, index, t1) {
    return $.$$index(t1, index);
  }
};

$$._AllMatchesIterable = {"": "Iterable;_re,_str",
  get$iterator: function() {
    return $._AllMatchesIterator$(this._re, this._str);
  }
};

$$._AllMatchesIterator = {"": "Object;_re,_str,_liblib1$_current",
  get$current: function() {
    return this._liblib1$_current;
  },
  moveNext$0: function() {
    this._liblib1$_current = this._re.firstMatch$1(this._str);
    return !(this._liblib1$_current == null);
  }
};

$$.StringMatch = {"": "Object;start,str,pattern>",
  $index: function(g) {
    return this.group$1(g);
  },
  group$1: function(group_) {
    if ($.$$eq(group_, 0) !== true)
      throw $.$$throw($.RangeError$value(group_));
    return this.pattern;
  }
};

$$.JsStringBuffer = {"": "Object;_contents",
  get$length: function() {
    return $.length(this._contents);
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout5(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout5: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(obj) {
    var t1, t2;
    if (typeof obj !== "string")
      return this.add$1$bailout(1, obj);
    t1 = this._contents;
    t2 = obj;
    this._contents = t1 + t2;
  },
  add$1$bailout: function(state0, obj) {
    var t1, t2;
    t1 = this._contents;
    t2 = typeof obj === "string" ? obj : $.S(obj);
    this._contents = t1 + t2;
  },
  addAll$1: function(objects) {
    var t1, t2, t3;
    for (t1 = $.iterator(objects); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      t3 = this._contents;
      t2 = typeof t2 === "string" ? t2 : $.S(t2);
      this._contents = t3 + t2;
    }
  },
  clear$0: function() {
    this._contents = "";
  },
  toString$0: function() {
    return this._contents;
  }
};

$$.Collection = {"": "Iterable;",
  addAll$1: function(elements) {
    var t1;
    for (t1 = $.iterator(elements); t1.moveNext$0() === true;)
      this.add$1(t1.get$current());
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    $.IterableMixinWorkaround_removeMatching(this, new $.Collection_clear_anon());
  },
  $isCollection: function() {
    return true;
  }
};

$$.DateTime = {"": "Object;millisecondsSinceEpoch>,isUtc",
  $eq: function(other) {
    if (other == null)
      return false;
    if (!(typeof other === "object" && other !== null && !!other.$isDateTime))
      return false;
    return $.$$eq(this.millisecondsSinceEpoch, other.millisecondsSinceEpoch);
  },
  $lt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$lt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$lt$bailout(2, null, t1, t3);
    return t1 < t3;
  },
  $$lt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$lt(t1, t3);
    }
  },
  $le: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$le$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$le$bailout(2, null, t1, t3);
    return t1 <= t3;
  },
  $$le$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$le(t1, t3);
    }
  },
  $gt: function(other) {
    var t1, t3;
    t1 = this.millisecondsSinceEpoch;
    t3 = other.get$millisecondsSinceEpoch();
    if (typeof t1 !== "number")
      return this.$$gt$bailout(1, other, t1);
    if (typeof t3 !== "number")
      return this.$$gt$bailout(2, null, t1, t3);
    return t1 > t3;
  },
  $$gt$bailout: function(state0, other, t1, t3) {
    switch (state0) {
      case 0:
        t1 = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t3 = other.get$millisecondsSinceEpoch();
      case 2:
        state0 = 0;
        return $.$$gt(t1, t3);
    }
  },
  $ge: function(other) {
    return $.$$ge(this.millisecondsSinceEpoch, other.get$millisecondsSinceEpoch());
  },
  get$hashCode: function() {
    return this.millisecondsSinceEpoch;
  },
  toString$0: function() {
    var t1, t2, t3, y, m, d, h, min, sec, ms;
    t1 = new $.DateTime_toString_fourDigits();
    t2 = new $.DateTime_toString_threeDigits();
    t3 = new $.DateTime_toString_twoDigits();
    y = t1.call$1(this.get$year());
    m = t3.call$1(this.get$month());
    d = t3.call$1(this.get$day());
    h = t3.call$1(this.get$hour());
    min = t3.call$1(this.get$minute());
    sec = t3.call$1(this.get$second());
    ms = t2.call$1(this.get$millisecond());
    if (this.isUtc === true)
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms) + "Z";
    else
      return $.S(y) + "-" + $.S(m) + "-" + $.S(d) + " " + $.S(h) + ":" + $.S(min) + ":" + $.S(sec) + "." + $.S(ms);
  },
  add$1: function(duration) {
    var ms, t2;
    ms = this.millisecondsSinceEpoch;
    t2 = duration.get$inMilliseconds();
    if (typeof ms !== "number")
      return this.add$1$bailout1(1, duration, ms);
    if (typeof t2 !== "number")
      return this.add$1$bailout1(2, null, ms, t2);
    return $.DateTime$fromMillisecondsSinceEpoch(ms + t2, this.isUtc);
  },
  add$1$bailout1: function(state0, duration, ms, t2) {
    switch (state0) {
      case 0:
        ms = this.millisecondsSinceEpoch;
      case 1:
        state0 = 0;
        t2 = duration.get$inMilliseconds();
      case 2:
        state0 = 0;
        return $.DateTime$fromMillisecondsSinceEpoch($.$$add(ms, t2), this.isUtc);
    }
  },
  get$year: function() {
    return $.Primitives_getYear(this);
  },
  get$month: function() {
    return $.Primitives_getMonth(this);
  },
  get$day: function() {
    return $.Primitives_getDay(this);
  },
  get$hour: function() {
    return $.Primitives_getHours(this);
  },
  get$minute: function() {
    return $.Primitives_getMinutes(this);
  },
  get$second: function() {
    return $.Primitives_getSeconds(this);
  },
  get$millisecond: function() {
    return $.Primitives_getMilliseconds(this);
  },
  DateTime$_now$0: function() {
    $.Primitives_lazyAsJsDate(this);
  },
  DateTime$fromMillisecondsSinceEpoch$2$isUtc: function(millisecondsSinceEpoch, isUtc) {
    if ($.$$gt($.abs(millisecondsSinceEpoch), 8640000000000000) === true)
      throw $.$$throw($.ArgumentError$(millisecondsSinceEpoch));
    if (isUtc == null)
      throw $.$$throw($.ArgumentError$(isUtc));
  },
  $isDateTime: true
};

$$.NullThrownError = {"": "Object;",
  toString$0: function() {
    return "Throw of null.";
  }
};

$$.ArgumentError = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (!(t1 == null))
      return "Illegal argument(s): " + $.S(t1);
    return "Illegal argument(s)";
  }
};

$$.RangeError = {"": "ArgumentError;message",
  toString$0: function() {
    return "RangeError: " + $.S(this.message);
  }
};

$$.NoSuchMethodError = {"": "Object;_receiver,_memberName,_arguments,_namedArguments,_existingArgumentNames",
  toString$0: function() {
    var t1, t2, t3, t4, i;
    t1 = {};
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    t1.i_1 = 0;
    t2 = this._arguments;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(1, t1, t2);
    for (; $.$$lt(t1.i_1, t2.length) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
      if ($.$$gt(t1.i_1, 0) === true)
        $.add(t1.sb_0, ", ");
      t3 = t1.sb_0;
      t4 = t1.i_1;
      if (t4 !== (t4 | 0))
        throw $.iae(t4);
      if (t4 < 0 || t4 >= t2.length)
        throw $.ioore(t4);
      $.add(t3, $.Error_safeToString(t2[t4]));
    }
    t2 = this._namedArguments;
    if (!(t2 == null))
      $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
    t2 = this._existingArgumentNames;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.toString$0$bailout(2, t1, t2);
    t3 = $.toString(t1.sb_0);
    t1.sb_0 = $.StringBuffer_StringBuffer("");
    for (i = 0; i < t2.length; ++i) {
      if (i > 0)
        $.add(t1.sb_0, ", ");
      t4 = t1.sb_0;
      if (i >= t2.length)
        throw $.ioore(i);
      $.add(t4, t2[i]);
    }
    t2 = $.toString(t1.sb_0);
    t4 = this._memberName;
    return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
  },
  toString$0$bailout: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = {};
        t1.sb_0 = $.StringBuffer_StringBuffer("");
        t1.i_1 = 0;
        t2 = this._arguments;
      case 1:
        state0 = 0;
        if (!(t2 == null))
          for (t3 = $.getInterceptor$JSStringJSArray(t2); $.$$lt(t1.i_1, t3.get$length(t2)) === true; t1.i_1 = $.$$add(t1.i_1, 1)) {
            if ($.$$gt(t1.i_1, 0) === true)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, $.Error_safeToString(t3.$index(t2, t1.i_1)));
          }
        t2 = this._namedArguments;
        if (!(t2 == null))
          $.forEach(t2, new $.NoSuchMethodError_toString_anon(t1));
        t2 = this._existingArgumentNames;
      case 2:
        var t3, t4, i;
        state0 = 0;
        if (t2 == null)
          return "NoSuchMethodError : method not found: '" + $.S(this._memberName) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Arguments: [" + $.S(t1.sb_0) + "]";
        else {
          t3 = $.toString(t1.sb_0);
          t1.sb_0 = $.StringBuffer_StringBuffer("");
          for (t4 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.CONSTANT2.$lt(i, t4.get$length(t2)); ++i) {
            if (i > 0)
              $.add(t1.sb_0, ", ");
            $.add(t1.sb_0, t4.$index(t2, i));
          }
          t2 = $.toString(t1.sb_0);
          t4 = this._memberName;
          return "NoSuchMethodError: incorrect number of arguments passed to method named '" + $.S(t4) + "'\n" + "Receiver: " + $.S($.Error_safeToString(this._receiver)) + "\n" + "Tried calling: " + $.S(t4) + "(" + $.S(t3) + ")\n" + "Found: " + $.S(t4) + "(" + $.S(t2) + ")";
        }
    }
  },
  $isNoSuchMethodError: true
};

$$.UnsupportedError = {"": "Object;message>",
  toString$0: function() {
    return "Unsupported operation: " + $.S(this.get$message());
  }
};

$$.UnimplementedError = {"": "Object;message>",
  toString$0: function() {
    var t1 = this.message;
    return !(t1 == null) ? "UnimplementedError: " + $.S(t1) : "UnimplementedError";
  }
};

$$.StateError = {"": "Object;message",
  toString$0: function() {
    return "Bad state: " + this.message;
  }
};

$$.ConcurrentModificationError = {"": "Object;modifiedObject",
  toString$0: function() {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + $.S($.Error_safeToString(t1)) + ".";
  }
};

$$.StackOverflowError = {"": "Object;",
  toString$0: function() {
    return "Stack Overflow";
  }
};

$$.RuntimeError = {"": "Object;message",
  toString$0: function() {
    return "RuntimeError: " + this.message;
  }
};

$$._ExceptionImplementation = {"": "Object;message",
  toString$0: function() {
    var t1 = this.message;
    if (t1 == null)
      return "Exception";
    return "Exception: " + $.S(t1);
  },
  $isException: true
};

$$.FormatException = {"": "Object;message",
  toString$0: function() {
    return "FormatException: " + $.S(this.message);
  },
  $isException: true
};

$$.IllegalJSRegExpException = {"": "Object;_pattern,_errmsg",
  toString$0: function() {
    return "IllegalJSRegExpException: '" + $.S(this._pattern) + "' '" + this._errmsg + "'";
  },
  $isException: true
};

$$.Iterable = {"": "Object;",
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    var t1, buffer, t2;
    if (typeof separator !== "string")
      return this.join$1$bailout(1, separator);
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer_StringBuffer("");
    if (separator === "")
      do
        $.add(buffer, $.S(t1.get$current()));
      while (t1.moveNext$0() === true);
    else {
      t2 = $.getInterceptor$JSArray(buffer);
      t2.add$1(buffer, $.S(t1.get$current()));
      for (; t1.moveNext$0() === true;) {
        t2.add$1(buffer, separator);
        t2.add$1(buffer, $.S(t1.get$current()));
      }
    }
    return $.toString(buffer);
  },
  join$1$bailout: function(state0, separator) {
    var t1, buffer, t2;
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      return "";
    buffer = $.StringBuffer_StringBuffer("");
    if (separator == null || $.$$eq(separator, "") === true)
      do
        $.add(buffer, $.S(t1.get$current()));
      while (t1.moveNext$0() === true);
    else {
      t2 = $.getInterceptor$JSArray(buffer);
      t2.add$1(buffer, $.S(t1.get$current()));
      for (; t1.moveNext$0() === true;) {
        t2.add$1(buffer, separator);
        t2.add$1(buffer, $.S(t1.get$current()));
      }
    }
    return $.toString(buffer);
  },
  any$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$length: function() {
    var t1, count;
    t1 = $.iterator(this);
    for (count = 0; t1.moveNext$0() === true;)
      ++count;
    return count;
  },
  get$isEmpty: function() {
    return $.iterator(this).moveNext$0() !== true;
  },
  get$last: function() {
    var t1, result;
    t1 = $.iterator(this);
    if (t1.moveNext$0() !== true)
      throw $.$$throw($.StateError$("No elements"));
    do
      result = t1.get$current();
    while (t1.moveNext$0() === true);
    return result;
  }
};

$$.Iterator = {"": "Object;"};

$$.Object = {"": ";",
  $eq: function(other) {
    if (other == null)
      return false;
    return this === other;
  },
  get$hashCode: function() {
    return $.Primitives_objectHashCode(this);
  },
  toString$0: function() {
    return "Instance of '" + $.S($.Primitives_objectTypeName(this)) + "'";
  },
  noSuchMethod$1: function(invocation) {
    throw $.$$throw($.NoSuchMethodError$(this, invocation.memberName, invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
  },
  _onValue$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_onValue", "_onValue$1", 0, [$0], []));
  },
  floor$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("floor", "floor$0", 0, [], []));
  },
  _loadFromSaveGameMessage$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_loadFromSaveGameMessage", "_loadFromSaveGameMessage$1", 0, [$0], []));
  },
  allMatches$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("allMatches", "allMatches$1", 0, [$0], []));
  },
  load$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("load", "load$1", 0, [$0], []));
  },
  fail$3: function($0, $1, $2) {
    return this.noSuchMethod$1($.createInvocationMirror("fail", "fail$3", 0, [$0, $1, $2], []));
  },
  $$dom_addEventListener$3: function($0, $1, $2) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_addEventListener", "$$dom_addEventListener$3", 0, [$0, $1, $2], []));
  },
  $xor: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("^", "$xor", 0, [$0], []));
  },
  handleNext$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("handleNext", "handleNext$1", 0, [$0], []));
  },
  moveNext$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("moveNext", "moveNext$0", 0, [], []));
  },
  _probeForAdding$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_probeForAdding", "_probeForAdding$1", 0, [$0], []));
  },
  _deserializeMap$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_deserializeMap", "_deserializeMap$1", 0, [$0], []));
  },
  _setComplete$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_setComplete", "_setComplete$0", 0, [], []));
  },
  $sub: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("-", "$sub", 0, [$0], []));
  },
  where$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("where", "where$1", 0, [$0], []));
  },
  _modify$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_modify", "_modify$1", 0, [$0], []));
  },
  _test$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_test", "_test$1", 0, [$0], []));
  },
  _handleDone$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_handleDone", "_handleDone$1", 0, [$0], []));
  },
  remove$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$0", 0, [], []));
  },
  remove$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("remove", "remove$1", 0, [$0], []));
  },
  startsWith$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("startsWith", "startsWith$1", 0, [$0], []));
  },
  _add$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_add", "_add$1", 0, [$0], []));
  },
  getRange$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("getRange", "getRange$2", 0, [$0, $1], []));
  },
  handleNumber$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("handleNumber", "handleNumber$1", 0, [$0], []));
  },
  toLowerCase$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("toLowerCase", "toLowerCase$0", 0, [], []));
  },
  _onSubscriptionStateChange$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_onSubscriptionStateChange", "_onSubscriptionStateChange$0", 0, [], []));
  },
  $le: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("<=", "$le", 0, [$0], []));
  },
  contains$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("contains", "contains$1", 0, [$0], []));
  },
  contains$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("contains", "contains$2", 0, [$0, $1], []));
  },
  unregister$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("unregister", "unregister$1", 0, [$0], []));
  },
  toMap$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("toMap", "toMap$0", 0, [], []));
  },
  _addListener$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_addListener", "_addListener$1", 0, [$0], []));
  },
  add$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("add", "add$1", 0, [$0], []));
  },
  add$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("add", "add$2", 0, [$0, $1], []));
  },
  $mul: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("*", "$mul", 0, [$0], []));
  },
  _endFiring$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_endFiring", "_endFiring$0", 0, [], []));
  },
  _sendDone$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_sendDone", "_sendDone$0", 0, [], []));
  },
  goto$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("goto", "goto$1", 0, [$0], []));
  },
  addAll$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("addAll", "addAll$1", 0, [$0], []));
  },
  stringifyValue$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("stringifyValue", "stringifyValue$1", 0, [$0], []));
  },
  _addPendingEvent$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_addPendingEvent", "_addPendingEvent$1", 0, [$0], []));
  },
  importState$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("importState", "importState$1", 0, [$0], []));
  },
  _sendError$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_sendError", "_sendError$1", 0, [$0], []));
  },
  _onDone$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_onDone", "_onDone$0", 0, [], []));
  },
  _forEachSubscriber$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_forEachSubscriber", "_forEachSubscriber$1", 0, [$0], []));
  },
  register$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("register", "register$2", 0, [$0, $1], []));
  },
  _computeCurrentFromIndex$3: function($0, $1, $2) {
    return this.noSuchMethod$1($.createInvocationMirror("_computeCurrentFromIndex", "_computeCurrentFromIndex$3", 0, [$0, $1, $2], []));
  },
  complete$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("complete", "complete$1", 0, [$0], []));
  },
  completeError$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("completeError", "completeError$1", 0, [$0], []));
  },
  completeError$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("completeError", "completeError$2", 0, [$0, $1], []));
  },
  _loadChronology$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_loadChronology", "_loadChronology$0", 0, [], []));
  },
  _cancel$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_cancel", "_cancel$1", 0, [$0], []));
  },
  toSendPort$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("toSendPort", "toSendPort$0", 0, [], []));
  },
  abs$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("abs", "abs$0", 0, [], []));
  },
  $$dom_setAttribute$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_setAttribute", "$$dom_setAttribute$2", 0, [$0, $1], []));
  },
  _createSaveGame$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_createSaveGame", "_createSaveGame$0", 0, [], []));
  },
  _chain$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_chain", "_chain$1", 0, [$0], []));
  },
  _getPropertyValue$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_getPropertyValue", "_getPropertyValue$1", 0, [$0], []));
  },
  echo$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("echo", "echo$1", 0, [$0], []));
  },
  _writeOn$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_writeOn", "_writeOn$1", 0, [$0], []));
  },
  setup$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("setup", "setup$0", 0, [], []));
  },
  postMessage$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("postMessage", "postMessage$1", 0, [$0], []));
  },
  then$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("then", "then$1", 0, [$0], []));
  },
  then$2$onError: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("then", "then$2$onError", 0, [$0, $1], ["onError"]));
  },
  indexOf$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("indexOf", "indexOf$1", 0, [$0], []));
  },
  indexOf$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("indexOf", "indexOf$2", 0, [$0, $1], []));
  },
  _setUnsubscribed$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_setUnsubscribed", "_setUnsubscribed$0", 0, [], []));
  },
  $tdiv: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("~/", "$tdiv", 0, [$0], []));
  },
  throwDelayed$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("throwDelayed", "throwDelayed$0", 0, [], []));
  },
  $indexSet: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("[]=", "$indexSet", 0, [$0, $1], []));
  },
  _onPauseStateChange$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_onPauseStateChange", "_onPauseStateChange$0", 0, [], []));
  },
  _link$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("_link", "_link$2", 0, [$0, $1], []));
  },
  $shl: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("<<", "$shl", 0, [$0], []));
  },
  $lt: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("<", "$lt", 0, [$0], []));
  },
  _updatePauseCount$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_updatePauseCount", "_updatePauseCount$1", 0, [$0], []));
  },
  runIteration$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("runIteration", "runIteration$0", 0, [], []));
  },
  maybeCloseWorker$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("maybeCloseWorker", "maybeCloseWorker$0", 0, [], []));
  },
  _delayDone$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_delayDone", "_delayDone$0", 0, [], []));
  },
  $and: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("&", "$and", 0, [$0], []));
  },
  exportState$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("exportState", "exportState$0", 0, [], []));
  },
  send$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("send", "send$1", 0, [$0], []));
  },
  send$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("send", "send$2", 0, [$0, $1], []));
  },
  handleString$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("handleString", "handleString$1", 0, [$0], []));
  },
  append$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("append", "append$1", 0, [$0], []));
  },
  call$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$0", 0, [], []));
  },
  call$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$1", 0, [$0], []));
  },
  call$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$2", 0, [$0, $1], []));
  },
  call$3: function($0, $1, $2) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$3", 0, [$0, $1, $2], []));
  },
  call$4: function($0, $1, $2, $3) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$4", 0, [$0, $1, $2, $3], []));
  },
  call$1$script: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$1$script", 0, [$0], ["script"]));
  },
  call$2$onError: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$2$onError", 0, [$0, $1], ["onError"]));
  },
  call$2$currentGroupName: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$2$currentGroupName", 0, [$0, $1], ["currentGroupName"]));
  },
  call$2$test: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$2$test", 0, [$0, $1], ["test"]));
  },
  call$2$endOfPage$filterOut: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$2$endOfPage$filterOut", 0, [$0, $1], ["endOfPage", "filterOut"]));
  },
  call$2$filterOut$prependText: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$2$filterOut$prependText", 0, [$0, $1], ["filterOut", "prependText"]));
  },
  call$4$onDone$onError$unsubscribeOnError: function($0, $1, $2, $3) {
    return this.noSuchMethod$1($.createInvocationMirror("call", "call$4$onDone$onError$unsubscribeOnError", 0, [$0, $1, $2, $3], ["onDone", "onError", "unsubscribeOnError"]));
  },
  $$dom_removeChild$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_removeChild", "$$dom_removeChild$1", 0, [$0], []));
  },
  _schedulePendingEvents$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_schedulePendingEvents", "_schedulePendingEvents$0", 0, [], []));
  },
  _initScriptEnvironment$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_initScriptEnvironment", "_initScriptEnvironment$0", 0, [], []));
  },
  toJson$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("toJson", "toJson$0", 0, [], []));
  },
  _sendData$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_sendData", "_sendData$1", 0, [$0], []));
  },
  replaceWith$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("replaceWith", "replaceWith$1", 0, [$0], []));
  },
  getPage$2$currentGroupName: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("getPage", "getPage$2$currentGroupName", 0, [$0, $1], ["currentGroupName"]));
  },
  $div: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("/", "$div", 0, [$0], []));
  },
  $index: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("[]", "$index", 0, [$0], []));
  },
  _handler$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_handler", "_handler$0", 0, [], []));
  },
  _handleError$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("_handleError", "_handleError$2", 0, [$0, $1], []));
  },
  _setGlobals$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_setGlobals", "_setGlobals$0", 0, [], []));
  },
  save$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("save", "save$1", 0, [$0], []));
  },
  _setOrChainValue$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_setOrChainValue", "_setOrChainValue$1", 0, [$0], []));
  },
  _liblib2$_onData$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_onData", "_liblib2$_onData$1", 0, [$0], []));
  },
  _probeForLookup$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_probeForLookup", "_probeForLookup$1", 0, [$0], []));
  },
  $ge: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror(">=", "$ge", 0, [$0], []));
  },
  handleNull$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("handleNull", "handleNull$0", 0, [], []));
  },
  _sendValue$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_sendValue", "_sendValue$1", 0, [$0], []));
  },
  replaceAll$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("replaceAll", "replaceAll$2", 0, [$0, $1], []));
  },
  trim$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("trim", "trim$0", 0, [], []));
  },
  toStringAsFixed$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("toStringAsFixed", "toStringAsFixed$1", 0, [$0], []));
  },
  firstMatch$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("firstMatch", "firstMatch$1", 0, [$0], []));
  },
  removeAll$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("removeAll", "removeAll$1", 0, [$0], []));
  },
  beginObject$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("beginObject", "beginObject$0", 0, [], []));
  },
  endArray$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("endArray", "endArray$0", 0, [], []));
  },
  _nativeDetectEnvironment$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_nativeDetectEnvironment", "_nativeDetectEnvironment$0", 0, [], []));
  },
  _f$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_f", "_f$1", 0, [$0], []));
  },
  _runScriptBlock$1$script: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_runScriptBlock", "_runScriptBlock$1$script", 0, [$0], ["script"]));
  },
  updateFromMap$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("updateFromMap", "updateFromMap$1", 0, [$0], []));
  },
  truncate$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("truncate", "truncate$0", 0, [], []));
  },
  lookup$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("lookup", "lookup$1", 0, [$0], []));
  },
  _handleValue$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_handleValue", "_handleValue$1", 0, [$0], []));
  },
  _asListener$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_asListener", "_asListener$0", 0, [], []));
  },
  $$dom_removeEventListener$3: function($0, $1, $2) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_removeEventListener", "$$dom_removeEventListener$3", 0, [$0, $1, $2], []));
  },
  cleanup$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("cleanup", "cleanup$0", 0, [], []));
  },
  split$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("split", "split$1", 0, [$0], []));
  },
  repeatBlock$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("repeatBlock", "repeatBlock$0", 0, [], []));
  },
  _clearUnhandledError$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_clearUnhandledError", "_clearUnhandledError$0", 0, [], []));
  },
  receive$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("receive", "receive$1", 0, [$0], []));
  },
  $$dom_removeAttribute$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_removeAttribute", "$$dom_removeAttribute$1", 0, [$0], []));
  },
  hasMatch$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("hasMatch", "hasMatch$1", 0, [$0], []));
  },
  _handleData$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("_handleData", "_handleData$2", 0, [$0, $1], []));
  },
  stopPropagation$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("stopPropagation", "stopPropagation$0", 0, [], []));
  },
  previousEntry$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("previousEntry", "previousEntry$0", 0, [], []));
  },
  addFromScripterList$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("addFromScripterList", "addFromScripterList$1", 0, [$0], []));
  },
  $$dom_getAttribute$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_getAttribute", "$$dom_getAttribute$1", 0, [$0], []));
  },
  run$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("run", "run$0", 0, [], []));
  },
  _removeListeners$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_removeListeners", "_removeListeners$0", 0, [], []));
  },
  nextDouble$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("nextDouble", "nextDouble$0", 0, [], []));
  },
  substring$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$1", 0, [$0], []));
  },
  substring$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("substring", "substring$2", 0, [$0, $1], []));
  },
  choice$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("choice", "choice$1", 0, [$0], []));
  },
  loadMostRecent$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("loadMostRecent", "loadMostRecent$0", 0, [], []));
  },
  _onError$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_onError", "_onError$1", 0, [$0], []));
  },
  $shr: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror(">>", "$shr", 0, [$0], []));
  },
  query$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("query", "query$1", 0, [$0], []));
  },
  _dispatch$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_dispatch", "_dispatch$1", 0, [$0], []));
  },
  toList$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("toList", "toList$0", 0, [], []));
  },
  close$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("close", "close$0", 0, [], []));
  },
  charCodeAt$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("charCodeAt", "charCodeAt$1", 0, [$0], []));
  },
  _handlePendingEvents$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_handlePendingEvents", "_handlePendingEvents$0", 0, [], []));
  },
  _save$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("_save", "_save$2", 0, [$0, $1], []));
  },
  $$dom_replaceChild$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_replaceChild", "$$dom_replaceChild$2", 0, [$0, $1], []));
  },
  $$dom_hasAttribute$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_hasAttribute", "$$dom_hasAttribute$1", 0, [$0], []));
  },
  _delete$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_delete", "_delete$1", 0, [$0], []));
  },
  clear$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("clear", "clear$0", 0, [], []));
  },
  prepend$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("prepend", "prepend$1", 0, [$0], []));
  },
  addLast$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("addLast", "addLast$1", 0, [$0], []));
  },
  _setError$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_setError", "_setError$1", 0, [$0], []));
  },
  listen$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("listen", "listen$1", 0, [$0], []));
  },
  listen$4$onDone$onError$unsubscribeOnError: function($0, $1, $2, $3) {
    return this.noSuchMethod$1($.createInvocationMirror("listen", "listen$4$onDone$onError$unsubscribeOnError", 0, [$0, $1, $2, $3], ["onDone", "onError", "unsubscribeOnError"]));
  },
  _pauseHandler$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_pauseHandler", "_pauseHandler$0", 0, [], []));
  },
  toSet$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("toSet", "toSet$0", 0, [], []));
  },
  $or: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("|", "$or", 0, [$0], []));
  },
  forEach$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("forEach", "forEach$1", 0, [$0], []));
  },
  propertyValue$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("propertyValue", "propertyValue$0", 0, [], []));
  },
  perform$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("perform", "perform$1", 0, [$0], []));
  },
  _startFiring$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_startFiring", "_startFiring$0", 0, [], []));
  },
  _createSubscription$4: function($0, $1, $2, $3) {
    return this.noSuchMethod$1($.createInvocationMirror("_createSubscription", "_createSubscription$4", 0, [$0, $1, $2, $3], []));
  },
  _deserializeHelper$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_deserializeHelper", "_deserializeHelper$1", 0, [$0], []));
  },
  schedule$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("schedule", "schedule$1", 0, [$0], []));
  },
  removeMatching$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("removeMatching", "removeMatching$1", 0, [$0], []));
  },
  _deserializeList$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_deserializeList", "_deserializeList$1", 0, [$0], []));
  },
  endsWith$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("endsWith", "endsWith$1", 0, [$0], []));
  },
  join$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("join", "join$1", 0, [$0], []));
  },
  _loadPreferences$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_loadPreferences", "_loadPreferences$0", 0, [], []));
  },
  _asNonSentinelEntry$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_asNonSentinelEntry", "_asNonSentinelEntry$0", 0, [], []));
  },
  beginArray$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("beginArray", "beginArray$0", 0, [], []));
  },
  clearState$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("clearState", "clearState$0", 0, [], []));
  },
  removeFirst$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("removeFirst", "removeFirst$0", 0, [], []));
  },
  _goOneStep$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_goOneStep", "_goOneStep$1", 0, [$0], []));
  },
  _grow$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_grow", "_grow$1", 0, [$0], []));
  },
  _serializeList$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_serializeList", "_serializeList$1", 0, [$0], []));
  },
  any$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("any", "any$1", 0, [$0], []));
  },
  handleBool$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("handleBool", "handleBool$1", 0, [$0], []));
  },
  $add: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("+", "$add", 0, [$0], []));
  },
  _makeIntoBookmark$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_makeIntoBookmark", "_makeIntoBookmark$1", 0, [$0], []));
  },
  _nativeInitWorkerMessageHandler$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_nativeInitWorkerMessageHandler", "_nativeInitWorkerMessageHandler$0", 0, [], []));
  },
  _setValue$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_setValue", "_setValue$1", 0, [$0], []));
  },
  containsKey$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("containsKey", "containsKey$1", 0, [$0], []));
  },
  propertyName$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("propertyName", "propertyName$0", 0, [], []));
  },
  _ensureCapacity$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_ensureCapacity", "_ensureCapacity$0", 0, [], []));
  },
  _subscriptionHandler$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_subscriptionHandler", "_subscriptionHandler$0", 0, [], []));
  },
  _runHelper$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_runHelper", "_runHelper$0", 0, [], []));
  },
  _scheduleUnhandledError$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_scheduleUnhandledError", "_scheduleUnhandledError$0", 0, [], []));
  },
  $gt: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror(">", "$gt", 0, [$0], []));
  },
  _checkReplyTo$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_checkReplyTo", "_checkReplyTo$1", 0, [$0], []));
  },
  _callback$2: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("_callback", "_callback$2", 0, [$0, $1], []));
  },
  process$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("process", "process$0", 0, [], []));
  },
  _setSubscribed$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_setSubscribed", "_setSubscribed$1", 0, [$0], []));
  },
  $$dom_createElement$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_createElement", "$$dom_createElement$1", 0, [$0], []));
  },
  enqueue$3: function($0, $1, $2) {
    return this.noSuchMethod$1($.createInvocationMirror("enqueue", "enqueue$3", 0, [$0, $1, $2], []));
  },
  cancel$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("cancel", "cancel$0", 0, [], []));
  },
  endObject$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("endObject", "endObject$0", 0, [], []));
  },
  lastEntry$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("lastEntry", "lastEntry$0", 0, [], []));
  },
  ceil$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("ceil", "ceil$0", 0, [], []));
  },
  $negate: function() {
    return this.noSuchMethod$1($.createInvocationMirror("unary-", "$negate", 0, [], []));
  },
  _matches$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_matches", "_matches$1", 0, [$0], []));
  },
  _load$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_load", "_load$1", 0, [$0], []));
  },
  catchError$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("catchError", "catchError$1", 0, [$0], []));
  },
  _deserializeRef$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_deserializeRef", "_deserializeRef$1", 0, [$0], []));
  },
  terminate$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("terminate", "terminate$0", 0, [], []));
  },
  $$dom_appendChild$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_appendChild", "$$dom_appendChild$1", 0, [$0], []));
  },
  confirm$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("confirm", "confirm$1", 0, [$0], []));
  },
  reset$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("reset", "reset$0", 0, [], []));
  },
  eval$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("eval", "eval$1", 0, [$0], []));
  },
  toMessage$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("toMessage", "toMessage$1", 0, [$0], []));
  },
  toMessage$2$endOfPage$filterOut: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("toMessage", "toMessage$2$endOfPage$filterOut", 0, [$0, $1], ["endOfPage", "filterOut"]));
  },
  toMessage$2$filterOut$prependText: function($0, $1) {
    return this.noSuchMethod$1($.createInvocationMirror("toMessage", "toMessage$2$filterOut$prependText", 0, [$0, $1], ["filterOut", "prependText"]));
  },
  arrayElement$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("arrayElement", "arrayElement$0", 0, [], []));
  },
  stop$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("stop", "stop$0", 0, [], []));
  },
  _savePreferences$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_savePreferences", "_savePreferences$0", 0, [], []));
  },
  _tryResume$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_tryResume", "_tryResume$0", 0, [], []));
  },
  toRadixString$1: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("toRadixString", "toRadixString$1", 0, [$0], []));
  },
  removeLast$0: function() {
    return this.noSuchMethod$1($.createInvocationMirror("removeLast", "removeLast$0", 0, [], []));
  },
  get$_handler: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_handler", "get$_handler", 1, [], []));
  },
  get$_previous: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_previous", "get$_previous", 1, [], []));
  },
  get$_handleError: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_handleError", "get$_handleError", 1, [], []));
  },
  get$_id: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_id", "get$_id", 1, [], []));
  },
  get$key: function() {
    return this.noSuchMethod$1($.createInvocationMirror("key", "get$key", 1, [], []));
  },
  get$choices: function() {
    return this.noSuchMethod$1($.createInvocationMirror("choices", "get$choices", 1, [], []));
  },
  get$listContent: function() {
    return this.noSuchMethod$1($.createInvocationMirror("listContent", "get$listContent", 1, [], []));
  },
  get$_hasUnhandledError: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_hasUnhandledError", "get$_hasUnhandledError", 1, [], []));
  },
  get$_values: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_values", "get$_values", 1, [], []));
  },
  get$isNaN: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isNaN", "get$isNaN", 1, [], []));
  },
  get$uid: function() {
    return this.noSuchMethod$1($.createInvocationMirror("uid", "get$uid", 1, [], []));
  },
  get$name: function() {
    return this.noSuchMethod$1($.createInvocationMirror("name", "get$name", 1, [], []));
  },
  get$_isFiring: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_isFiring", "get$_isFiring", 1, [], []));
  },
  get$vars: function() {
    return this.noSuchMethod$1($.createInvocationMirror("vars", "get$vars", 1, [], []));
  },
  get$localStorage: function() {
    return this.noSuchMethod$1($.createInvocationMirror("localStorage", "get$localStorage", 1, [], []));
  },
  get$_hasPendingEvent: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_hasPendingEvent", "get$_hasPendingEvent", 1, [], []));
  },
  get$hash: function() {
    return this.noSuchMethod$1($.createInvocationMirror("hash", "get$hash", 1, [], []));
  },
  get$pending: function() {
    return this.noSuchMethod$1($.createInvocationMirror("pending", "get$pending", 1, [], []));
  },
  get$inMilliseconds: function() {
    return this.noSuchMethod$1($.createInvocationMirror("inMilliseconds", "get$inMilliseconds", 1, [], []));
  },
  get$_set: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_set", "get$_set", 1, [], []));
  },
  get$shown: function() {
    return this.noSuchMethod$1($.createInvocationMirror("shown", "get$shown", 1, [], []));
  },
  get$previousElementSibling: function() {
    return this.noSuchMethod$1($.createInvocationMirror("previousElementSibling", "get$previousElementSibling", 1, [], []));
  },
  get$time: function() {
    return this.noSuchMethod$1($.createInvocationMirror("time", "get$time", 1, [], []));
  },
  get$_isComplete: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_isComplete", "get$_isComplete", 1, [], []));
  },
  get$bookDiv: function() {
    return this.noSuchMethod$1($.createInvocationMirror("bookDiv", "get$bookDiv", 1, [], []));
  },
  get$userAgent: function() {
    return this.noSuchMethod$1($.createInvocationMirror("userAgent", "get$userAgent", 1, [], []));
  },
  get$visitOnce: function() {
    return this.noSuchMethod$1($.createInvocationMirror("visitOnce", "get$visitOnce", 1, [], []));
  },
  get$$$dom_attributes: function() {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_attributes", "get$$$dom_attributes", 1, [], []));
  },
  get$rootContext: function() {
    return this.noSuchMethod$1($.createInvocationMirror("rootContext", "get$rootContext", 1, [], []));
  },
  get$intContent: function() {
    return this.noSuchMethod$1($.createInvocationMirror("intContent", "get$intContent", 1, [], []));
  },
  get$isCaseSensitive: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isCaseSensitive", "get$isCaseSensitive", 1, [], []));
  },
  get$sb: function() {
    return this.noSuchMethod$1($.createInvocationMirror("sb", "get$sb", 1, [], []));
  },
  get$last: function() {
    return this.noSuchMethod$1($.createInvocationMirror("last", "get$last", 1, [], []));
  },
  get$pulledLever: function() {
    return this.noSuchMethod$1($.createInvocationMirror("pulledLever", "get$pulledLever", 1, [], []));
  },
  get$length: function() {
    return this.noSuchMethod$1($.createInvocationMirror("length", "get$length", 1, [], []));
  },
  get$isWorker: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isWorker", "get$isWorker", 1, [], []));
  },
  get$waitForEndOfPage: function() {
    return this.noSuchMethod$1($.createInvocationMirror("waitForEndOfPage", "get$waitForEndOfPage", 1, [], []));
  },
  get$visited: function() {
    return this.noSuchMethod$1($.createInvocationMirror("visited", "get$visited", 1, [], []));
  },
  get$_handleDone: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_handleDone", "get$_handleDone", 1, [], []));
  },
  get$_isClosed: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_isClosed", "get$_isClosed", 1, [], []));
  },
  get$next: function() {
    return this.noSuchMethod$1($.createInvocationMirror("next", "get$next", 1, [], []));
  },
  get$points: function() {
    return this.noSuchMethod$1($.createInvocationMirror("points", "get$points", 1, [], []));
  },
  get$mainManager: function() {
    return this.noSuchMethod$1($.createInvocationMirror("mainManager", "get$mainManager", 1, [], []));
  },
  get$_playerProfile: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_playerProfile", "get$_playerProfile", 1, [], []));
  },
  get$future: function() {
    return this.noSuchMethod$1($.createInvocationMirror("future", "get$future", 1, [], []));
  },
  get$iterator: function() {
    return this.noSuchMethod$1($.createInvocationMirror("iterator", "get$iterator", 1, [], []));
  },
  get$cause: function() {
    return this.noSuchMethod$1($.createInvocationMirror("cause", "get$cause", 1, [], []));
  },
  get$id: function() {
    return this.noSuchMethod$1($.createInvocationMirror("id", "get$id", 1, [], []));
  },
  get$$$dom_className: function() {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_className", "get$$$dom_className", 1, [], []));
  },
  get$bodega: function() {
    return this.noSuchMethod$1($.createInvocationMirror("bodega", "get$bodega", 1, [], []));
  },
  get$_leadsToIllegalPage: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_leadsToIllegalPage", "get$_leadsToIllegalPage", 1, [], []));
  },
  get$value: function() {
    return this.noSuchMethod$1($.createInvocationMirror("value", "get$value", 1, [], []));
  },
  get$isAutomatic: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isAutomatic", "get$isAutomatic", 1, [], []));
  },
  get$contains: function() {
    return this.noSuchMethod$1($.createInvocationMirror("contains", "get$contains", 1, [], []));
  },
  get$_streamController: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_streamController", "get$_streamController", 1, [], []));
  },
  get$type: function() {
    return this.noSuchMethod$1($.createInvocationMirror("type", "get$type", 1, [], []));
  },
  get$_handleData: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_handleData", "get$_handleData", 1, [], []));
  },
  get$_resultOrListeners: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_resultOrListeners", "get$_resultOrListeners", 1, [], []));
  },
  get$onClick: function() {
    return this.noSuchMethod$1($.createInvocationMirror("onClick", "get$onClick", 1, [], []));
  },
  get$currentManagerId: function() {
    return this.noSuchMethod$1($.createInvocationMirror("currentManagerId", "get$currentManagerId", 1, [], []));
  },
  get$$goto: function() {
    return this.noSuchMethod$1($.createInvocationMirror("goto", "get$$goto", 1, [], []));
  },
  get$pageMapState: function() {
    return this.noSuchMethod$1($.createInvocationMirror("pageMapState", "get$pageMapState", 1, [], []));
  },
  get$_filtered: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_filtered", "get$_filtered", 1, [], []));
  },
  get$_next: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_next", "get$_next", 1, [], []));
  },
  get$pattern: function() {
    return this.noSuchMethod$1($.createInvocationMirror("pattern", "get$pattern", 1, [], []));
  },
  get$eta: function() {
    return this.noSuchMethod$1($.createInvocationMirror("eta", "get$eta", 1, [], []));
  },
  get$_hasError: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_hasError", "get$_hasError", 1, [], []));
  },
  get$fromCommandLine: function() {
    return this.noSuchMethod$1($.createInvocationMirror("fromCommandLine", "get$fromCommandLine", 1, [], []));
  },
  get$_futurePort: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_futurePort", "get$_futurePort", 1, [], []));
  },
  get$_hasValue: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_hasValue", "get$_hasValue", 1, [], []));
  },
  get$blocks: function() {
    return this.noSuchMethod$1($.createInvocationMirror("blocks", "get$blocks", 1, [], []));
  },
  get$children: function() {
    return this.noSuchMethod$1($.createInvocationMirror("children", "get$children", 1, [], []));
  },
  get$string: function() {
    return this.noSuchMethod$1($.createInvocationMirror("string", "get$string", 1, [], []));
  },
  get$_setError: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_setError", "get$_setError", 1, [], []));
  },
  get$radarUp: function() {
    return this.noSuchMethod$1($.createInvocationMirror("radarUp", "get$radarUp", 1, [], []));
  },
  get$isNegative: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isNegative", "get$isNegative", 1, [], []));
  },
  get$areActionable: function() {
    return this.noSuchMethod$1($.createInvocationMirror("areActionable", "get$areActionable", 1, [], []));
  },
  get$element: function() {
    return this.noSuchMethod$1($.createInvocationMirror("element", "get$element", 1, [], []));
  },
  get$_scripterPort: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_scripterPort", "get$_scripterPort", 1, [], []));
  },
  get$result: function() {
    return this.noSuchMethod$1($.createInvocationMirror("result", "get$result", 1, [], []));
  },
  get$source: function() {
    return this.noSuchMethod$1($.createInvocationMirror("source", "get$source", 1, [], []));
  },
  get$_canceled: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_canceled", "get$_canceled", 1, [], []));
  },
  get$activeTimerCount: function() {
    return this.noSuchMethod$1($.createInvocationMirror("activeTimerCount", "get$activeTimerCount", 1, [], []));
  },
  get$$$dom_namespaceUri: function() {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_namespaceUri", "get$$$dom_namespaceUri", 1, [], []));
  },
  get$_hasSubscribers: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_hasSubscribers", "get$_hasSubscribers", 1, [], []));
  },
  get$sink: function() {
    return this.noSuchMethod$1($.createInvocationMirror("sink", "get$sink", 1, [], []));
  },
  get$topEventLoop: function() {
    return this.noSuchMethod$1($.createInvocationMirror("topEventLoop", "get$topEventLoop", 1, [], []));
  },
  get$pages: function() {
    return this.noSuchMethod$1($.createInvocationMirror("pages", "get$pages", 1, [], []));
  },
  get$error: function() {
    return this.noSuchMethod$1($.createInvocationMirror("error", "get$error", 1, [], []));
  },
  get$visitCount: function() {
    return this.noSuchMethod$1($.createInvocationMirror("visitCount", "get$visitCount", 1, [], []));
  },
  get$innerHtml: function() {
    return this.noSuchMethod$1($.createInvocationMirror("innerHtml", "get$innerHtml", 1, [], []));
  },
  get$$$dom_localName: function() {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_localName", "get$$$dom_localName", 1, [], []));
  },
  get$nextElementSibling: function() {
    return this.noSuchMethod$1($.createInvocationMirror("nextElementSibling", "get$nextElementSibling", 1, [], []));
  },
  get$dataAttributes: function() {
    return this.noSuchMethod$1($.createInvocationMirror("dataAttributes", "get$dataAttributes", 1, [], []));
  },
  get$_keys: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_keys", "get$_keys", 1, [], []));
  },
  get$isolates: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isolates", "get$isolates", 1, [], []));
  },
  get$$$dom_childNodes: function() {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_childNodes", "get$$$dom_childNodes", 1, [], []));
  },
  get$managers: function() {
    return this.noSuchMethod$1($.createInvocationMirror("managers", "get$managers", 1, [], []));
  },
  get$groupName: function() {
    return this.noSuchMethod$1($.createInvocationMirror("groupName", "get$groupName", 1, [], []));
  },
  get$nextIsolateId: function() {
    return this.noSuchMethod$1($.createInvocationMirror("nextIsolateId", "get$nextIsolateId", 1, [], []));
  },
  get$millisecondsSinceEpoch: function() {
    return this.noSuchMethod$1($.createInvocationMirror("millisecondsSinceEpoch", "get$millisecondsSinceEpoch", 1, [], []));
  },
  get$_liblib3$_receivePort: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_receivePort", "get$_liblib3$_receivePort", 1, [], []));
  },
  get$_receivePort: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_receivePort", "get$_receivePort", 1, [], []));
  },
  get$isEmpty: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isEmpty", "get$isEmpty", 1, [], []));
  },
  get$currentContext: function() {
    return this.noSuchMethod$1($.createInvocationMirror("currentContext", "get$currentContext", 1, [], []));
  },
  get$shieldsUp: function() {
    return this.noSuchMethod$1($.createInvocationMirror("shieldsUp", "get$shieldsUp", 1, [], []));
  },
  get$_setValue: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_setValue", "get$_setValue", 1, [], []));
  },
  get$needSerialization: function() {
    return this.noSuchMethod$1($.createInvocationMirror("needSerialization", "get$needSerialization", 1, [], []));
  },
  get$_messageReceiveCallback: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_messageReceiveCallback", "get$_messageReceiveCallback", 1, [], []));
  },
  get$$$dom_lastElementChild: function() {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_lastElementChild", "get$$$dom_lastElementChild", 1, [], []));
  },
  get$isMultiLine: function() {
    return this.noSuchMethod$1($.createInvocationMirror("isMultiLine", "get$isMultiLine", 1, [], []));
  },
  get$_callback: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_callback", "get$_callback", 1, [], []));
  },
  get$_canFireEvent: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_canFireEvent", "get$_canFireEvent", 1, [], []));
  },
  get$_nextListener: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_nextListener", "get$_nextListener", 1, [], []));
  },
  get$nextManagerId: function() {
    return this.noSuchMethod$1($.createInvocationMirror("nextManagerId", "get$nextManagerId", 1, [], []));
  },
  get$ports: function() {
    return this.noSuchMethod$1($.createInvocationMirror("ports", "get$ports", 1, [], []));
  },
  get$_tag: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_tag", "get$_tag", 1, [], []));
  },
  get$nodes: function() {
    return this.noSuchMethod$1($.createInvocationMirror("nodes", "get$nodes", 1, [], []));
  },
  get$_paused: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_paused", "get$_paused", 1, [], []));
  },
  get$_isolateId: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_isolateId", "get$_isolateId", 1, [], []));
  },
  get$messenger: function() {
    return this.noSuchMethod$1($.createInvocationMirror("messenger", "get$messenger", 1, [], []));
  },
  get$useWorkers: function() {
    return this.noSuchMethod$1($.createInvocationMirror("useWorkers", "get$useWorkers", 1, [], []));
  },
  get$currentPageName: function() {
    return this.noSuchMethod$1($.createInvocationMirror("currentPageName", "get$currentPageName", 1, [], []));
  },
  get$current: function() {
    return this.noSuchMethod$1($.createInvocationMirror("current", "get$current", 1, [], []));
  },
  get$stackTrace: function() {
    return this.noSuchMethod$1($.createInvocationMirror("stackTrace", "get$stackTrace", 1, [], []));
  },
  get$f: function() {
    return this.noSuchMethod$1($.createInvocationMirror("f", "get$f", 1, [], []));
  },
  get$classes: function() {
    return this.noSuchMethod$1($.createInvocationMirror("classes", "get$classes", 1, [], []));
  },
  get$navigator: function() {
    return this.noSuchMethod$1($.createInvocationMirror("navigator", "get$navigator", 1, [], []));
  },
  get$_isPaused: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_isPaused", "get$_isPaused", 1, [], []));
  },
  get$_workerId: function() {
    return this.noSuchMethod$1($.createInvocationMirror("_workerId", "get$_workerId", 1, [], []));
  },
  get$listener: function() {
    return this.noSuchMethod$1($.createInvocationMirror("listener", "get$listener", 1, [], []));
  },
  set$started: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("started=", "set$started", 2, [$0], []));
  },
  set$next: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("next=", "set$next", 2, [$0], []));
  },
  set$_previous: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_previous=", "set$_previous", 2, [$0], []));
  },
  set$points: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("points=", "set$points", 2, [$0], []));
  },
  set$shieldsUp: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("shieldsUp=", "set$shieldsUp", 2, [$0], []));
  },
  set$radarUp: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("radarUp=", "set$radarUp", 2, [$0], []));
  },
  set$_port: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_port=", "set$_port", 2, [$0], []));
  },
  set$_handle: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_handle=", "set$_handle", 2, [$0], []));
  },
  set$currentContext: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("currentContext=", "set$currentContext", 2, [$0], []));
  },
  set$id: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("id=", "set$id", 2, [$0], []));
  },
  set$bodega: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("bodega=", "set$bodega", 2, [$0], []));
  },
  set$value: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("value=", "set$value", 2, [$0], []));
  },
  set$name: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("name=", "set$name", 2, [$0], []));
  },
  set$pending: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("pending=", "set$pending", 2, [$0], []));
  },
  set$nextManagerId: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("nextManagerId=", "set$nextManagerId", 2, [$0], []));
  },
  set$_nextListener: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_nextListener=", "set$_nextListener", 2, [$0], []));
  },
  set$savegamesChronology: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("savegamesChronology=", "set$savegamesChronology", 2, [$0], []));
  },
  set$preferences: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("preferences=", "set$preferences", 2, [$0], []));
  },
  set$shown: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("shown=", "set$shown", 2, [$0], []));
  },
  set$messenger: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("messenger=", "set$messenger", 2, [$0], []));
  },
  set$activeTimerCount: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("activeTimerCount=", "set$activeTimerCount", 2, [$0], []));
  },
  set$time: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("time=", "set$time", 2, [$0], []));
  },
  set$$$dom_className: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("$dom_className=", "set$$$dom_className", 2, [$0], []));
  },
  set$onmessage: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("onmessage=", "set$onmessage", 2, [$0], []));
  },
  set$text: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("text=", "set$text", 2, [$0], []));
  },
  set$currentManagerId: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("currentManagerId=", "set$currentManagerId", 2, [$0], []));
  },
  set$_currentSavegame: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_currentSavegame=", "set$_currentSavegame", 2, [$0], []));
  },
  set$visitCount: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("visitCount=", "set$visitCount", 2, [$0], []));
  },
  set$rootContext: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("rootContext=", "set$rootContext", 2, [$0], []));
  },
  set$innerHtml: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("innerHtml=", "set$innerHtml", 2, [$0], []));
  },
  set$currentEgamebookUid: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("currentEgamebookUid=", "set$currentEgamebookUid", 2, [$0], []));
  },
  set$scheduleTimer: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("scheduleTimer=", "set$scheduleTimer", 2, [$0], []));
  },
  set$_next: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("_next=", "set$_next", 2, [$0], []));
  },
  set$eta: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("eta=", "set$eta", 2, [$0], []));
  },
  set$length: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("length=", "set$length", 2, [$0], []));
  },
  set$pulledLever: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("pulledLever=", "set$pulledLever", 2, [$0], []));
  },
  set$nothing: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("nothing=", "set$nothing", 2, [$0], []));
  },
  set$nextIsolateId: function($0) {
    return this.noSuchMethod$1($.createInvocationMirror("nextIsolateId=", "set$nextIsolateId", 2, [$0], []));
  }
};

$$.ObjectInterceptor = {"": "Object;",
  toString$0: function(receiver) {
    return receiver.toString$0();
  },
  $eq: function(receiver, a0) {
    return receiver.$eq(a0);
  },
  $indexSet: function(receiver, a0, a1) {
    return receiver.$indexSet(a0, a1);
  },
  removeLast$0: function(receiver) {
    return receiver.removeLast$0();
  },
  charCodeAt$1: function(receiver, a0) {
    return receiver.charCodeAt$1(a0);
  },
  replaceAll$2: function(receiver, a0, a1) {
    return receiver.replaceAll$2(a0, a1);
  },
  get$iterator: function(receiver) {
    return receiver.get$iterator();
  },
  forEach$1: function(receiver, a0) {
    return receiver.forEach$1(a0);
  },
  indexOf$2: function(receiver, a0, a1) {
    return receiver.indexOf$2(a0, a1);
  },
  removeMatching$1: function(receiver, a0) {
    return receiver.removeMatching$1(a0);
  },
  get$length: function(receiver) {
    return receiver.get$length();
  },
  $sub: function(receiver, a0) {
    return receiver.$sub(a0);
  },
  getRange$2: function(receiver, a0, a1) {
    return receiver.getRange$2(a0, a1);
  },
  join$1: function(receiver, a0) {
    return receiver.join$1(a0);
  },
  toSet$0: function(receiver) {
    return receiver.toSet$0();
  },
  add$1: function(receiver, a0) {
    return receiver.add$1(a0);
  },
  substring$2: function(receiver, a0, a1) {
    return receiver.substring$2(a0, a1);
  },
  get$hashCode: function(receiver) {
    return receiver.get$hashCode();
  },
  $add: function(receiver, a0) {
    return receiver.$add(a0);
  },
  set$length: function(receiver, value) {
    return receiver.set$length(value);
  },
  $negate: function(receiver) {
    return receiver.$negate();
  },
  $and: function(receiver, a0) {
    return receiver.$and(a0);
  },
  toRadixString$1: function(receiver, a0) {
    return receiver.toRadixString$1(a0);
  },
  truncate$0: function(receiver) {
    return receiver.truncate$0();
  },
  where$1: function(receiver, a0) {
    return receiver.where$1(a0);
  },
  contains$2: function(receiver, a0, a1) {
    return receiver.contains$2(a0, a1);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase$0();
  },
  $or: function(receiver, a0) {
    return receiver.$or(a0);
  },
  get$isNegative: function(receiver) {
    return receiver.get$isNegative();
  },
  $tdiv: function(receiver, a0) {
    return receiver.$tdiv(a0);
  },
  get$contains: function(receiver) {
    return receiver.get$contains();
  },
  $gt: function(receiver, a0) {
    return receiver.$gt(a0);
  },
  toStringAsFixed$1: function(receiver, a0) {
    return receiver.toStringAsFixed$1(a0);
  },
  $shr: function(receiver, a0) {
    return receiver.$shr(a0);
  },
  split$1: function(receiver, a0) {
    return receiver.split$1(a0);
  },
  ceil$0: function(receiver) {
    return receiver.ceil$0();
  },
  removeAll$1: function(receiver, a0) {
    return receiver.removeAll$1(a0);
  },
  trim$0: function(receiver) {
    return receiver.trim$0();
  },
  substring$1: function(receiver, a0) {
    return receiver.substring$1(a0);
  },
  addAll$1: function(receiver, a0) {
    return receiver.addAll$1(a0);
  },
  get$isEmpty: function(receiver) {
    return receiver.get$isEmpty();
  },
  endsWith$1: function(receiver, a0) {
    return receiver.endsWith$1(a0);
  },
  $lt: function(receiver, a0) {
    return receiver.$lt(a0);
  },
  get$last: function(receiver) {
    return receiver.get$last();
  },
  addLast$1: function(receiver, a0) {
    return receiver.addLast$1(a0);
  },
  $shl: function(receiver, a0) {
    return receiver.$shl(a0);
  },
  $le: function(receiver, a0) {
    return receiver.$le(a0);
  },
  indexOf$1: function(receiver, a0) {
    return receiver.indexOf$1(a0);
  },
  get$isNaN: function(receiver) {
    return receiver.get$isNaN();
  },
  $mul: function(receiver, a0) {
    return receiver.$mul(a0);
  },
  $ge: function(receiver, a0) {
    return receiver.$ge(a0);
  },
  startsWith$1: function(receiver, a0) {
    return receiver.startsWith$1(a0);
  },
  toList$0: function(receiver) {
    return receiver.toList$0();
  },
  $xor: function(receiver, a0) {
    return receiver.$xor(a0);
  },
  floor$0: function(receiver) {
    return receiver.floor$0();
  },
  allMatches$1: function(receiver, a0) {
    return receiver.allMatches$1(a0);
  },
  $div: function(receiver, a0) {
    return receiver.$div(a0);
  },
  any$1: function(receiver, a0) {
    return receiver.any$1(a0);
  },
  clear$0: function(receiver) {
    return receiver.clear$0();
  },
  $index: function(receiver, a0) {
    return receiver.$index(a0);
  },
  remove$1: function(receiver, a0) {
    return receiver.remove$1(a0);
  },
  abs$0: function(receiver) {
    return receiver.abs$0();
  },
  contains$1: function(receiver, a0) {
    return receiver.contains$1(a0);
  }
};

$$.JSFunction = {"": "Object;",
  toString$0: function(receiver) {
    return "Closure";
  },
  $isFunction: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSBool = {"": "Object;",
  toString$0: function(receiver) {
    return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNull = {"": "Object;",
  toString$0: function(receiver) {
    return "null";
  },
  get$hashCode: function(receiver) {
    return 0;
  },
  $eq: function(receiver, a) {
    return receiver == a;
  }
};

$$.JSArray = {"": "Object;",
  add$1: function(receiver, value) {
    $.checkGrowable(receiver, "add");
    receiver.push(value);
  },
  removeLast$0: function(receiver) {
    $.checkGrowable(receiver, "removeLast");
    if (receiver.length === 0)
      throw $.$$throw($.RangeError$value(-1));
    return receiver.pop();
  },
  remove$1: function(receiver, element) {
    var i;
    $.checkGrowable(receiver, "remove");
    for (i = 0; i < receiver.length; ++i)
      if ($.$$eq(receiver[i], element) === true) {
        receiver.splice(i, 1);
        return;
      }
  },
  removeAll$1: function(receiver, elements) {
    $.IterableMixinWorkaround_removeAllList(receiver, elements);
  },
  removeMatching$1: function(receiver, test) {
    $.IterableMixinWorkaround_removeMatchingList(receiver, test);
  },
  where$1: function(receiver, f) {
    return $.WhereIterable$(receiver, f);
  },
  addAll$1: function(receiver, collection) {
    var t1;
    for (t1 = $.iterator(collection); t1.moveNext$0() === true;)
      this.add$1(receiver, t1.get$current());
  },
  addLast$1: function(receiver, value) {
    $.checkGrowable(receiver, "addLast");
    receiver.push(value);
  },
  clear$0: function(receiver) {
    this.set$length(receiver, 0);
  },
  forEach$1: function(receiver, f) {
    var t1;
    for (t1 = this.get$iterator(receiver); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(receiver, separator) {
    var list, i, t1;
    if (separator == null)
      separator = "";
    list = $.List_List(receiver.length);
    for (i = 0; i < receiver.length; ++i) {
      t1 = $.S(receiver[i]);
      if (i >= list.length)
        throw $.ioore(i);
      list[i] = t1;
    }
    return list.join(separator);
  },
  getRange$2: function(receiver, start, length) {
    var t1, end;
    if (0 === length)
      return [];
    $.checkNull(start);
    $.checkNull(length);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof length === "number" && Math.floor(length) === length))
      throw $.$$throw($.ArgumentError$(length));
    t1 = length < 0;
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    if (start < 0)
      throw $.$$throw($.RangeError$value(start));
    end = start + length;
    if (end > receiver.length)
      throw $.$$throw($.RangeError$value(length));
    if (t1)
      throw $.$$throw($.ArgumentError$(length));
    return receiver.slice(start, end);
  },
  get$last: function(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw $.$$throw($.StateError$("No elements"));
  },
  any$1: function(receiver, f) {
    return $.IterableMixinWorkaround_any(receiver, f);
  },
  indexOf$2: function(receiver, element, start) {
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    return $.Arrays_indexOf(receiver, element, start, receiver.length);
  },
  indexOf$1: function($receiver, element) {
    return this.indexOf$2($receiver, element, 0);
  },
  contains$1: function(receiver, other) {
    var t1, i;
    for (t1 = $.getInterceptor(other), i = 0; i < receiver.length; ++i)
      if (t1.$eq(other, receiver[i]) === true)
        return true;
    return false;
  },
  get$contains: function(receiver) {
    return new $.BoundClosure0(this, "contains$1", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return $.Collections_collectionToString(receiver);
  },
  toList$0: function(receiver) {
    return $.List_List$from(receiver);
  },
  toSet$0: function(receiver) {
    return $.Set_Set$from(receiver);
  },
  get$iterator: function(receiver) {
    return $.ListIterator$(receiver);
  },
  get$hashCode: function(receiver) {
    return $.Primitives_objectHashCode(receiver);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  set$length: function(receiver, newLength) {
    if (!(typeof newLength === "number" && Math.floor(newLength) === newLength))
      throw $.$$throw($.ArgumentError$(newLength));
    if (newLength < 0)
      throw $.$$throw($.RangeError$value(newLength));
    $.checkGrowable(receiver, "set length");
    receiver.length = newLength;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $indexSet: function(receiver, index, value) {
    $.checkMutable(receiver, "indexed set");
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    receiver[index] = value;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSNumber = {"": "Object;",
  get$isNegative: function(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  get$isNaN: function(receiver) {
    return isNaN(receiver);
  },
  abs$0: function(receiver) {
    return Math.abs(receiver);
  },
  ceil$0: function(receiver) {
    return Math.ceil(receiver);
  },
  floor$0: function(receiver) {
    return Math.floor(receiver);
  },
  truncate$0: function(receiver) {
    return receiver < 0 ? this.ceil$0(receiver) : this.floor$0(receiver);
  },
  toStringAsFixed$1: function(receiver, fractionDigits) {
    var result;
    $.checkNum(fractionDigits);
    if (fractionDigits < 0 || fractionDigits > 20)
      throw $.$$throw($.RangeError$(fractionDigits));
    result = receiver.toFixed(fractionDigits);
    if (receiver === 0 && this.get$isNegative(receiver) === true)
      return "-" + result;
    return result;
  },
  toRadixString$1: function(receiver, radix) {
    $.checkNum(radix);
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$(radix));
    return receiver.toString(radix);
  },
  toString$0: function(receiver) {
    if (receiver === 0 && (1 / receiver) < 0)
      return "-0.0";
    else
      return String(receiver);
  },
  get$hashCode: function(receiver) {
    return receiver & 0x1FFFFFFF;
  },
  $negate: function(receiver) {
    return -receiver;
  },
  $add: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver + other;
  },
  $sub: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver - other;
  },
  $div: function(receiver, other) {
    return receiver / other;
  },
  $mul: function(receiver, other) {
    return receiver * other;
  },
  $tdiv: function(receiver, other) {
    return this.truncate$0(receiver / other);
  },
  $shl: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (other > 31)
      return 0;
    return (receiver << other) >>> 0;
  },
  $shr: function(receiver, other) {
    if (other < 0)
      throw $.$$throw($.ArgumentError$(other));
    if (receiver > 0) {
      if (other > 31)
        return 0;
      return receiver >>> other;
    }
    if (other > 31)
      other = 31;
    return (receiver >> other) >>> 0;
  },
  $and: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver & other) >>> 0;
  },
  $or: function(receiver, other) {
    return (receiver | other) >>> 0;
  },
  $xor: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return (receiver ^ other) >>> 0;
  },
  $lt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver < other;
  },
  $gt: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver > other;
  },
  $le: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver <= other;
  },
  $ge: function(receiver, other) {
    if (!(typeof other === "number"))
      throw $.$$throw($.ArgumentError$(other));
    return receiver >= other;
  },
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSInt = {"": "JSNumber;",
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSDouble = {"": "JSNumber;",
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$.JSString = {"": "Object;",
  charCodeAt$1: function(receiver, index) {
    if (!(typeof index === "number"))
      throw $.$$throw($.ArgumentError$(index));
    if (index < 0)
      throw $.$$throw($.RangeError$value(index));
    if (index >= receiver.length)
      throw $.$$throw($.RangeError$value(index));
    return receiver.charCodeAt(index);
  },
  allMatches$1: function(receiver, str) {
    $.checkString(str);
    return $.allMatchesInStringUnchecked(receiver, str);
  },
  endsWith$1: function(receiver, other) {
    var otherLength, t1;
    $.checkString(other);
    otherLength = other.length;
    t1 = receiver.length;
    if (otherLength > t1)
      return false;
    return other === this.substring$1(receiver, t1 - otherLength);
  },
  replaceAll$2: function(receiver, from, to) {
    $.checkString(to);
    return $.stringReplaceAllUnchecked(receiver, from, to);
  },
  split$1: function(receiver, pattern) {
    $.checkNull(pattern);
    return receiver.split(pattern);
  },
  startsWith$1: function(receiver, other) {
    var otherLength;
    $.checkString(other);
    otherLength = other.length;
    if (otherLength > receiver.length)
      return false;
    return other == receiver.substring(0, otherLength);
  },
  substring$2: function(receiver, startIndex, endIndex) {
    var t1;
    $.checkNum(startIndex);
    if (endIndex == null)
      endIndex = receiver.length;
    $.checkNum(endIndex);
    t1 = $.getInterceptor$JSNumber(startIndex);
    if (t1.$lt(startIndex, 0) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if (t1.$gt(startIndex, endIndex) === true)
      throw $.$$throw($.RangeError$value(startIndex));
    if ($.$$gt(endIndex, receiver.length) === true)
      throw $.$$throw($.RangeError$value(endIndex));
    return receiver.substring(startIndex, endIndex);
  },
  substring$1: function($receiver, startIndex) {
    return this.substring$2($receiver, startIndex, null);
  },
  toLowerCase$0: function(receiver) {
    return receiver.toLowerCase();
  },
  trim$0: function(receiver) {
    return receiver.trim();
  },
  indexOf$2: function(receiver, other, start) {
    $.checkNull(other);
    if (!(typeof start === "number" && Math.floor(start) === start))
      throw $.$$throw($.ArgumentError$(start));
    if (!(typeof other === "string"))
      throw $.$$throw($.ArgumentError$(other));
    if (start < 0)
      return -1;
    return receiver.indexOf(other, start);
  },
  indexOf$1: function($receiver, other) {
    return this.indexOf$2($receiver, other, 0);
  },
  contains$2: function(receiver, other, startIndex) {
    $.checkNull(other);
    return $.stringContainsUnchecked(receiver, other, startIndex);
  },
  contains$1: function($receiver, other) {
    return this.contains$2($receiver, other, 0);
  },
  get$contains: function(receiver) {
    return new $.BoundClosure1(this, "contains$2", receiver);
  },
  get$isEmpty: function(receiver) {
    return receiver.length === 0;
  },
  toString$0: function(receiver) {
    return receiver;
  },
  get$hashCode: function(receiver) {
    var i, hash, hash0, hash1;
    for (i = 0, hash = 0; i < receiver.length; ++i, hash = hash1) {
      hash0 = 536870911 & hash + receiver.charCodeAt(i);
      hash1 = 536870911 & hash0 + ((524287 & hash0) << 10 >>> 0);
      hash1 = hash1 ^ (hash1 >> 6);
    }
    hash0 = 536870911 & hash + ((67108863 & hash) << 3 >>> 0);
    hash0 = hash0 ^ (hash0 >> 11);
    return 536870911 & hash0 + ((16383 & hash0) << 15 >>> 0);
  },
  get$length: function(receiver) {
    return receiver.length;
  },
  $index: function(receiver, index) {
    if (!(typeof index === "number" && Math.floor(index) === index))
      throw $.$$throw($.ArgumentError$(index));
    if (index >= receiver.length || index < 0)
      throw $.$$throw($.RangeError$value(index));
    return receiver[index];
  },
  $isString: true,
  $eq: function(receiver, a) {
    return receiver === a;
  }
};

$$._HashMapImpl = {"": "Object;_keys>,_values>,_loadLimit,_numberOfEntries,_numberOfDeleted",
  _probeForAdding$1: function(key) {
    var t1, t3, hash, numberOfProbes, insertionIndex, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.hashCode(key);
    t3 = this._keys.length;
    if (t1 !== (t1 | 0))
      return this._probeForAdding$1$bailout(1, key, t1);
    hash = (t1 & t3 - 1) >>> 0;
    for (numberOfProbes = 1, insertionIndex = -1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null) {
        if (insertionIndex < 0)
          return hash;
        return insertionIndex;
      } else if ($.$$eq(existingKey, key) === true)
        return hash;
      else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
        insertionIndex = hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
      if (hash !== (hash | 0))
        return this._probeForAdding$1$bailout(2, key, null, numberOfProbes0, hash, insertionIndex);
    }
  },
  _probeForAdding$1$bailout: function(state0, key, t1, numberOfProbes0, hash, insertionIndex) {
    switch (state0) {
      case 0:
        if (key == null)
          throw $.$$throw($.ArgumentError$(null));
        t1 = $.hashCode(key);
      case 1:
        state0 = 0;
        hash = $.$$and(t1, this._keys.length - 1);
        numberOfProbes = 1;
        insertionIndex = -1;
      case 2:
        var numberOfProbes, existingKey;
        L0:
          while (true)
            switch (state0) {
              case 0:
                if (!true)
                  break L0;
                t1 = this._keys;
                if (hash !== (hash | 0))
                  throw $.iae(hash);
                if (hash < 0 || hash >= t1.length)
                  throw $.ioore(hash);
                existingKey = t1[hash];
                if (existingKey == null) {
                  if (insertionIndex < 0)
                    return hash;
                  return insertionIndex;
                } else if ($.$$eq(existingKey, key) === true)
                  return hash;
                else if (insertionIndex < 0 && existingKey === $.CONSTANT3)
                  insertionIndex = hash;
                numberOfProbes0 = numberOfProbes + 1;
                hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
              case 2:
                state0 = 0;
                numberOfProbes = numberOfProbes0;
            }
    }
  },
  _probeForLookup$1: function(key) {
    var t1, hash, numberOfProbes, existingKey, numberOfProbes0;
    if (key == null)
      throw $.$$throw($.ArgumentError$(null));
    t1 = $.$$and($.hashCode(key), this._keys.length - 1);
    if (t1 !== (t1 | 0))
      return this._probeForLookup$1$bailout(1, key, t1);
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _probeForLookup$1$bailout: function(state0, key, t1) {
    var hash, numberOfProbes, existingKey, numberOfProbes0;
    for (hash = t1, numberOfProbes = 1; true; numberOfProbes = numberOfProbes0) {
      t1 = this._keys;
      if (hash !== (hash | 0))
        throw $.iae(hash);
      if (hash < 0 || hash >= t1.length)
        throw $.ioore(hash);
      existingKey = t1[hash];
      if (existingKey == null)
        return -1;
      if ($.$$eq(existingKey, key) === true)
        return hash;
      numberOfProbes0 = numberOfProbes + 1;
      hash = $._HashMapImpl__nextProbe(hash, numberOfProbes, this._keys.length);
    }
  },
  _ensureCapacity$0: function() {
    var t1, capacity, t2;
    t1 = $.$$add(this._numberOfEntries, 1);
    if ($.$$ge(t1, this._loadLimit) === true) {
      this._grow$1(this._keys.length * 2);
      return;
    }
    capacity = this._keys.length;
    if (typeof t1 !== "number")
      throw $.iae(t1);
    t2 = this._numberOfDeleted;
    if (t2 > capacity - t1 - t2)
      this._grow$1(capacity);
  },
  _grow$1: function(newCapacity) {
    var capacity, oldKeys, oldValues, i, key, value, newIndex, t1;
    capacity = this._keys.length;
    this._loadLimit = $.$$tdiv($.$$mul(newCapacity, 3), 4);
    oldKeys = this._keys;
    oldValues = this._values;
    this._keys = $.List_List$fixedLength(newCapacity, null);
    this._values = $.List_List$fixedLength(newCapacity, null);
    for (i = 0; i < capacity; ++i) {
      if (i >= oldKeys.length)
        throw $.ioore(i);
      key = oldKeys[i];
      if (key == null || key === $.CONSTANT3)
        continue;
      if (i >= oldValues.length)
        throw $.ioore(i);
      value = oldValues[i];
      newIndex = this._probeForAdding$1(key);
      t1 = this._keys;
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = key;
      t1 = this._values;
      if (newIndex >= t1.length)
        throw $.ioore(newIndex);
      t1[newIndex] = value;
    }
    this._numberOfDeleted = 0;
  },
  clear$0: function() {
    var t1, length, t2, t3, i;
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    t1 = this._keys;
    length = t1.length;
    for (t2 = this._values, t3 = t2.length, i = 0; i < length; ++i) {
      t1[i] = null;
      if (i >= t3)
        throw $.ioore(i);
      t2[i] = null;
    }
  },
  $indexSet: function(key, value) {
    var index, t1;
    this._ensureCapacity$0();
    index = this._probeForAdding$1(key);
    t1 = this._keys;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    t1 = t1[index];
    if (t1 == null || t1 === $.CONSTANT3) {
      t1 = this._numberOfEntries;
      if (typeof t1 !== "number")
        return this.$$indexSet$bailout0(1, key, value, t1, index);
      this._numberOfEntries = t1 + 1;
    }
    t1 = this._keys;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = key;
    t1 = this._values;
    if (index >= t1.length)
      throw $.ioore(index);
    t1[index] = value;
  },
  $$indexSet$bailout0: function(state0, key, value, t1, index) {
    switch (state0) {
      case 0:
        this._ensureCapacity$0();
        index = this._probeForAdding$1(key);
        t1 = this._keys;
        if (index !== (index | 0))
          throw $.iae(index);
        if (index < 0 || index >= t1.length)
          throw $.ioore(index);
        t1 = t1[index];
      case 1:
        if (state0 === 1 || state0 === 0 && (t1 == null || t1 === $.CONSTANT3))
          switch (state0) {
            case 0:
              t1 = this._numberOfEntries;
            case 1:
              state0 = 0;
              this._numberOfEntries = $.$$add(t1, 1);
          }
        t1 = this._keys;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = key;
        t1 = this._values;
        if (index >= t1.length)
          throw $.ioore(index);
        t1[index] = value;
    }
  },
  $index: function(key) {
    var index, t1;
    index = this._probeForLookup$1(key);
    if (typeof index !== "number")
      return this.$$index$bailout0(1, index);
    if (index < 0)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout0: function(state0, index) {
    var t1;
    if ($.$$lt(index, 0) === true)
      return;
    t1 = this._values;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  remove$1: function(key) {
    var index, t1, value;
    index = this._probeForLookup$1(key);
    if ($.$$ge(index, 0) === true) {
      this._numberOfEntries = $.$$sub(this._numberOfEntries, 1);
      t1 = this._values;
      if (index !== (index | 0))
        throw $.iae(index);
      if (index < 0 || index >= t1.length)
        throw $.ioore(index);
      value = t1[index];
      t1[index] = null;
      t1 = this._keys;
      if (index >= t1.length)
        throw $.ioore(index);
      t1[index] = $.CONSTANT3;
      this._numberOfDeleted = this._numberOfDeleted + 1;
      return value;
    }
    return;
  },
  get$isEmpty: function() {
    var t1 = this._numberOfEntries;
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout6(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout6: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  get$length: function() {
    return this._numberOfEntries;
  },
  forEach$1: function(f) {
    var it, t1, t2, t3;
    it = $._HashMapImplIndexIterator$(this);
    for (; it.moveNext$0() === true;) {
      t1 = this._keys;
      t2 = it.get$current();
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      t2 = t1[t2];
      t1 = this._values;
      t3 = it.get$current();
      if (t3 !== (t3 | 0))
        throw $.iae(t3);
      if (t3 < 0 || t3 >= t1.length)
        throw $.ioore(t3);
      f.call$2(t2, t1[t3]);
    }
  },
  get$keys: function() {
    return $._HashMapImplKeyIterable$(this);
  },
  get$values: function() {
    return $._HashMapImplValueIterable$(this);
  },
  containsKey$1: function(key) {
    return $.$$eq(this._probeForLookup$1(key), -1) !== true;
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _HashMapImpl$0: function() {
    this._numberOfEntries = 0;
    this._numberOfDeleted = 0;
    this._loadLimit = $._HashMapImpl__computeLoadLimit(8);
    this._keys = $.List_List$fixedLength(8, null);
    this._values = $.List_List$fixedLength(8, null);
  },
  $isMap: function() {
    return true;
  }
};

$$._HashMapImplKeyIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplKeyIterator$(this._map);
  }
};

$$._HashMapImplValueIterable = {"": "Iterable;_map",
  get$iterator: function() {
    return $._HashMapImplValueIterator$(this._map);
  }
};

$$._HashMapImplIterator = {"": "Object;",
  moveNext$0: function() {
    var t1, t2, t4, newIndex, t3, t5;
    t1 = this._map;
    t2 = $.length(t1.get$_keys());
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout(1, t2, t1);
    t4 = this._index;
    if (typeof t4 !== "number")
      return this.moveNext$0$bailout(2, t2, t1, t4);
    newIndex = t4 + 1;
    for (t3 = t1.get$_keys(); newIndex < t2;) {
      if (typeof t3 !== "string" && (typeof t3 !== "object" || t3 === null || t3.constructor !== Array && !t3.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout(3, t2, t1, t3, newIndex, $.CONSTANT4);
      if (newIndex !== (newIndex | 0))
        throw $.iae(newIndex);
      if (newIndex < 0 || newIndex >= t3.length)
        throw $.ioore(newIndex);
      t5 = t3[newIndex];
      if (!(t5 == null) && !(t5 === $.CONSTANT3)) {
        this._current = this._computeCurrentFromIndex$3(newIndex, t3, t1.get$_values());
        this._index = newIndex;
        return true;
      }
      ++newIndex;
    }
    this._index = t2;
    this._current = null;
    return false;
  },
  moveNext$0$bailout: function(state0, t2, t1, t4, newIndex, t3) {
    switch (state0) {
      case 0:
        t1 = this._map;
        t2 = $.length(t1.get$_keys());
      case 1:
        state0 = 0;
        t4 = this._index;
      case 2:
        state0 = 0;
        newIndex = $.$$add(t4, 1);
      case 3:
        L0:
          while (true)
            switch (state0) {
              case 0:
                t3 = $.getInterceptor$JSNumber(newIndex);
                if (!(t3.$lt(newIndex, t2) === true))
                  break L0;
                t4 = t1.get$_keys();
              case 3:
                state0 = 0;
                t4 = $.$$index(t4, newIndex);
                if (!(t4 == null) && !(t4 === $.CONSTANT3)) {
                  this._current = this._computeCurrentFromIndex$3(newIndex, t1.get$_keys(), t1.get$_values());
                  this._index = newIndex;
                  return true;
                }
                newIndex = t3.$add(newIndex, 1);
            }
        this._index = t2;
        this._current = null;
        return false;
    }
  },
  get$current: function() {
    return this._current;
  }
};

$$._HashMapImplKeyIterator = {"": "_HashMapImplIterator;_map,_index,_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(keys, index);
  }
};

$$._HashMapImplValueIterator = {"": "_HashMapImplIterator;_map,_index,_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return $.$$index(values, index);
  }
};

$$._HashMapImplIndexIterator = {"": "_HashMapImplIterator;_map,_index,_current",
  _computeCurrentFromIndex$3: function(index, keys, values) {
    return index;
  }
};

$$._DeletedKeySentinel = {"": "Object;"};

$$._KeyValuePair = {"": "Object;key>,value="};

$$._LinkedHashMapImpl = {"": "Object;_list,_map",
  $indexSet: function(key, value) {
    var t1, t3;
    if (this._map.containsKey$1(key) === true) {
      t1 = this._map;
      if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
        return this.$$indexSet$bailout(1, key, value, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key].get$element().set$value(value);
    } else {
      this._list.addLast$1($._KeyValuePair$(key, value));
      t1 = this._map;
      t3 = this._list.lastEntry$0();
      if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
        return this.$$indexSet$bailout(2, key, null, t1);
      if (key !== (key | 0))
        throw $.iae(key);
      if (key < 0 || key >= t1.length)
        throw $.ioore(key);
      t1[key] = t3;
    }
  },
  $$indexSet$bailout: function(state0, key, value, t1) {
    switch (state0) {
      case 0:
      default:
        if (state0 === 1 || state0 === 0 && this._map.containsKey$1(key) === true)
          switch (state0) {
            case 0:
              t1 = this._map;
            case 1:
              state0 = 0;
              $.$$index(t1, key).get$element().set$value(value);
          }
        else
          switch (state0) {
            case 0:
              this._list.addLast$1($._KeyValuePair$(key, value));
              t1 = this._map;
            case 2:
              state0 = 0;
              $.$$indexSet(t1, key, this._list.lastEntry$0());
          }
    }
  },
  $index: function(key) {
    var t1 = this._map;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout(1, key, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1 = t1[key];
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  $$index$bailout: function(state0, key, t1) {
    t1 = $.$$index(t1, key);
    if (t1 == null)
      return;
    return t1.get$element().get$value();
  },
  remove$1: function(key) {
    var t1 = $.remove(this._map, key);
    if (t1 == null)
      return;
    t1.remove$0();
    return t1.get$element().get$value();
  },
  get$keys: function() {
    return $.MappedIterable$(this._list, new $._LinkedHashMapImpl_keys_anon());
  },
  get$values: function() {
    return $.MappedIterable$(this._list, new $._LinkedHashMapImpl_values_anon());
  },
  forEach$1: function(f) {
    this._list.forEach$1(new $._LinkedHashMapImpl_forEach_anon(f));
  },
  containsKey$1: function(key) {
    return this._map.containsKey$1(key);
  },
  get$length: function() {
    return $.length(this._map);
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout4(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout4: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  clear$0: function() {
    $.clear(this._map);
    this._list.clear$0();
  },
  toString$0: function() {
    return $.Maps_mapToString(this);
  },
  _LinkedHashMapImpl$0: function() {
    this._map = $.HashMap_HashMap();
    this._list = $.DoubleLinkedQueue$();
  },
  $isMap: function() {
    return true;
  }
};

$$.DoubleLinkedQueueEntry = {"": "Object;_previous=,_next=,_element",
  _link$2: function(p, n) {
    this._next = n;
    this._previous = p;
    p.set$_next(this);
    n.set$_previous(this);
  },
  append$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this, this._next);
  },
  prepend$1: function(e) {
    $.DoubleLinkedQueueEntry$(e)._link$2(this._previous, this);
  },
  remove$0: function() {
    var t1 = this._next;
    this._previous.set$_next(t1);
    t1 = this._previous;
    this._next.set$_previous(t1);
    this._next = null;
    this._previous = null;
    return this._element;
  },
  _asNonSentinelEntry$0: function() {
    return this;
  },
  previousEntry$0: function() {
    return this._previous._asNonSentinelEntry$0();
  },
  nextEntry$0: function() {
    return this._next._asNonSentinelEntry$0();
  },
  get$element: function() {
    return this._element;
  },
  DoubleLinkedQueueEntry$1: function(e) {
    this._element = e;
  }
};

$$._DoubleLinkedQueueEntrySentinel = {"": "DoubleLinkedQueueEntry;_previous,_next,_element",
  remove$0: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _asNonSentinelEntry$0: function() {
    return;
  },
  get$element: function() {
    throw $.$$throw($.StateError$("Empty queue"));
  },
  _DoubleLinkedQueueEntrySentinel$0: function() {
    this._link$2(this, this);
  }
};

$$.DoubleLinkedQueue = {"": "Iterable;_sentinel",
  addLast$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  add$1: function(value) {
    this._sentinel.prepend$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      this._sentinel.prepend$1(t2);
    }
  },
  removeLast$0: function() {
    return this._sentinel._previous.remove$0();
  },
  removeFirst$0: function() {
    return this._sentinel._next.remove$0();
  },
  remove$1: function(o) {
    var entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel);) {
      if ($.$$eq(entry.get$element(), o) === true) {
        entry.remove$0();
        return;
      }
      entry = entry.get$_next();
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAllList(this, elements);
  },
  removeMatching$1: function(test) {
    var entry, next;
    entry = this._sentinel.nextEntry$0();
    for (; !(entry === this._sentinel); entry = next) {
      next = entry.get$_next();
      if (test.call$1(entry.get$element()) === true)
        entry.remove$0();
    }
  },
  get$last: function() {
    return this._sentinel._previous.get$element();
  },
  lastEntry$0: function() {
    return this._sentinel.previousEntry$0();
  },
  get$isEmpty: function() {
    var t1 = this._sentinel;
    return t1._next === t1;
  },
  clear$0: function() {
    var t1 = this._sentinel;
    t1._next = t1;
    t1 = this._sentinel;
    t1._previous = t1;
  },
  get$iterator: function() {
    return $._DoubleLinkedQueueIterator$(this._sentinel);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  DoubleLinkedQueue$0: function() {
    this._sentinel = $._DoubleLinkedQueueEntrySentinel$();
  },
  $isCollection: function() {
    return true;
  }
};

$$._DoubleLinkedQueueIterator = {"": "Object;_sentinel,_currentEntry,_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._currentEntry;
    if (t1 == null)
      return false;
    this._currentEntry = t1.get$_next();
    t1 = this._currentEntry;
    t2 = this._sentinel;
    if (t1 == null ? t2 == null : t1 === t2) {
      this._currentEntry = null;
      this._current = null;
      this._sentinel = null;
      return false;
    }
    this._current = t1.get$element();
    return true;
  },
  get$current: function() {
    return this._current;
  }
};

$$.HashSet = {"": "Collection;_backingMap",
  clear$0: function() {
    this._backingMap.clear$0();
  },
  add$1: function(value) {
    this._backingMap.$indexSet(value, value);
  },
  remove$1: function(value) {
    var t1 = this._backingMap;
    if (t1.containsKey$1(value) !== true)
      return false;
    t1.remove$1(value);
    return true;
  },
  contains$1: function(value) {
    return this._backingMap.containsKey$1(value);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    this._backingMap.forEach$1(new $.HashSet_forEach_anon(f));
  },
  get$isEmpty: function() {
    return $.isEmpty(this._backingMap);
  },
  get$length: function() {
    return $.length(this._backingMap);
  },
  get$iterator: function() {
    return $._HashSetIterator$(this);
  },
  toString$0: function() {
    return $.Collections_collectionToString(this);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._HashSetIterator = {"": "Object;_keysIterator",
  get$current: function() {
    var result = this._keysIterator.get$current();
    if (result === $.CONSTANT3)
      throw $.$$throw($.StateError$("Concurrent modification."));
    return result;
  },
  moveNext$0: function() {
    var t1, result, t2;
    t1 = this._keysIterator;
    do {
      result = t1.moveNext$0();
      if (result === true)
        t2 = t1.get$current() == null || t1.get$current() === $.CONSTANT3;
      else
        t2 = false;
    } while (t2);
    return result;
  }
};

$$.MappedIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.MappedIterator$($.iterator(this._iterable), this._f);
  },
  get$length: function() {
    return $.length(this._iterable);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._iterable);
  }
};

$$.MappedIterator = {"": "Iterator;_liblib0$_current,_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    var t1 = this._iterator;
    if (t1.moveNext$0() === true) {
      this._liblib0$_current = this._f$1(t1.get$current());
      return true;
    } else {
      this._liblib0$_current = null;
      return false;
    }
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$.WhereIterable = {"": "Iterable;_iterable,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  get$iterator: function() {
    return $.WhereIterator$($.iterator(this._iterable), this._f);
  }
};

$$.WhereIterator = {"": "Iterator;_iterator,_f",
  _f$1: function(arg0) {
    return this._f.call$1(arg0);
  },
  moveNext$0: function() {
    for (var t1 = this._iterator; t1.moveNext$0() === true;)
      if (this._f$1(t1.get$current()) === true)
        return true;
    return false;
  },
  get$current: function() {
    return this._iterator.get$current();
  }
};

$$.ListIterator = {"": "Object;_liblib0$_list,_liblib0$_length,_liblib0$_position,_liblib0$_current",
  moveNext$0: function() {
    var t1, t2, t3;
    t1 = this._liblib0$_list;
    t2 = t1.length;
    t3 = this._liblib0$_length;
    if (t2 !== t3)
      throw $.$$throw($.ConcurrentModificationError$(t1));
    t2 = this._liblib0$_position;
    if (t2 !== (t2 | 0))
      return this.moveNext$0$bailout1(1, t2, t1, t3);
    ++t2;
    if (t2 < t3) {
      this._liblib0$_position = t2;
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      this._liblib0$_current = t1[t2];
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  moveNext$0$bailout1: function(state0, t2, t1, t3) {
    t2 = $.$$add(t2, 1);
    if ($.$$lt(t2, t3) === true) {
      this._liblib0$_position = t2;
      if (t2 !== (t2 | 0))
        throw $.iae(t2);
      if (t2 < 0 || t2 >= t1.length)
        throw $.ioore(t2);
      this._liblib0$_current = t1[t2];
      return true;
    }
    this._liblib0$_current = null;
    return false;
  },
  get$current: function() {
    return this._liblib0$_current;
  }
};

$$._Manager = {"": "Object;nextIsolateId=,currentManagerId=,nextManagerId=,currentContext=,rootContext=,topEventLoop>,fromCommandLine>,isWorker>,supportsWorkers,isolates>,mainManager>,managers>",
  get$useWorkers: function() {
    return this.supportsWorkers;
  },
  get$needSerialization: function() {
    return this.get$useWorkers();
  },
  _nativeDetectEnvironment$0: function() {
    var t1, t2;
    t1 = $.get$globalWindow() == null;
    this.isWorker = t1 && $.get$globalPostMessageDefined() === true;
    if (this.isWorker !== true)
      t2 = !($.get$globalWorker() == null) && !($.get$IsolateNatives_thisScript() == null);
    else
      t2 = true;
    this.supportsWorkers = t2;
    this.fromCommandLine = t1 && this.isWorker !== true;
  },
  _nativeInitWorkerMessageHandler$0: function() {
    var $function = function (e) { $.IsolateNatives__processWorkerMessage.call$2(this.mainManager, e); };
    $.get$globalThis().onmessage = $function;
    $.get$globalThis().dartPrint = function (object) {};
  },
  maybeCloseWorker$0: function() {
    if (this.isWorker === true && $.isEmpty(this.isolates) === true && $.$$eq(this.topEventLoop.get$activeTimerCount(), 0) === true)
      this.mainManager.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "close"])));
  },
  _Manager$0: function() {
    this._nativeDetectEnvironment$0();
    this.topEventLoop = $._EventLoop$();
    this.isolates = $.Map_Map();
    this.managers = $.Map_Map();
    if (this.isWorker === true) {
      this.mainManager = $._MainManagerStub$();
      this._nativeInitWorkerMessageHandler$0();
    }
  }
};

$$._IsolateContext = {"": "Object;id=,ports>,isolateStatics",
  eval$1: function(code) {
    var old, result;
    old = $globalState.get$currentContext();
    $globalState.set$currentContext(this);
    this._setGlobals$0();
    result = null;
    try {
      result = code.call$0();
    } finally {
      $globalState.set$currentContext(old);
      if (!(old == null))
        old._setGlobals$0();
    }
    return result;
  },
  _setGlobals$0: function() {
    $ = this.isolateStatics;
  },
  lookup$1: function(portId) {
    return $.$$index(this.ports, portId);
  },
  register$2: function(portId, port) {
    if (this.ports.containsKey$1(portId) === true)
      throw $.$$throw($.Exception_Exception("Registry: ports must be registered only once."));
    $.$$indexSet(this.ports, portId, port);
    $.$$indexSet($globalState.get$isolates(), this.id, this);
  },
  unregister$1: function(portId) {
    $.remove(this.ports, portId);
    if ($.isEmpty(this.ports) === true)
      $.remove($globalState.get$isolates(), this.id);
  },
  _IsolateContext$0: function() {
    var t1, t2;
    t1 = $._globalState();
    t2 = t1.get$nextIsolateId();
    t1.set$nextIsolateId($.$$add(t2, 1));
    this.id = t2;
    this.ports = $.Map_Map();
    this.isolateStatics = new Isolate;
  }
};

$$._EventLoop = {"": "Object;events,activeTimerCount=",
  enqueue$3: function(isolate, fn, msg) {
    $.addLast(this.events, $._IsolateEvent$(isolate, fn, msg));
  },
  dequeue$0: function() {
    var t1 = this.events;
    if ($.isEmpty(t1) === true)
      return;
    return t1.removeFirst$0();
  },
  checkOpenReceivePortsFromCommandLine$0: function() {
    if (!($globalState.get$rootContext() == null) && $globalState.get$isolates().containsKey$1($globalState.get$rootContext().get$id()) === true && $globalState.get$fromCommandLine() === true && $.isEmpty($globalState.get$rootContext().get$ports()) === true)
      throw $.$$throw($.Exception_Exception("Program exited with open ReceivePorts."));
  },
  runIteration$0: function() {
    var event = this.dequeue$0();
    if (event == null) {
      this.checkOpenReceivePortsFromCommandLine$0();
      $globalState.maybeCloseWorker$0();
      return false;
    }
    event.process$0();
    return true;
  },
  _runHelper$0: function() {
    if (!($.get$globalWindow() == null))
      new $._EventLoop__runHelper_next(this).call$0();
    else
      for (; this.runIteration$0() === true;)
        ;
  },
  run$0: function() {
    var e, trace, exception, t1;
    if ($globalState.get$isWorker() !== true)
      this._runHelper$0();
    else
      try {
        this._runHelper$0();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        trace = $.getTraceFromException(exception);
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "error", "msg", $.S(e) + "\n" + $.S(trace)])));
      }

  }
};

$$._IsolateEvent = {"": "Object;isolate,fn,message",
  process$0: function() {
    this.isolate.eval$1(this.fn);
  }
};

$$._MainManagerStub = {"": "Object;",
  get$id: function() {
    return 0;
  },
  set$id: function(i) {
    throw $.$$throw($.UnimplementedError$(null));
  },
  set$onmessage: function(f) {
    throw $.$$throw($.Exception_Exception("onmessage should not be set on MainManagerStub"));
  },
  postMessage$1: function(msg) {
    $.get$globalThis().postMessage(msg);
  },
  terminate$0: function() {
  }
};

$$._BaseSendPort = {"": "Object;_isolateId>",
  _checkReplyTo$1: function(replyTo) {
    if (!(replyTo == null) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_NativeJsSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_WorkerSendPort) && !(typeof replyTo === "object" && replyTo !== null && !!replyTo.$is_BufferingSendPort))
      throw $.$$throw($.Exception_Exception("SendPort.send: Illegal replyTo port type"));
  },
  call$1: function(message) {
    var completer, port;
    completer = $.Completer_Completer();
    port = $.ReceivePortImpl$();
    this.send$2(message, port.toSendPort$0());
    port.receive$1(new $._BaseSendPort_call_anon(completer, port));
    return completer.get$future();
  },
  $isFunction: true,
  $isSendPort: true
};

$$._NativeJsSendPort = {"": "_BaseSendPort;_liblib3$_receivePort>,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._NativeJsSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_NativeJsSendPort && $.$$eq(this._liblib3$_receivePort, other._liblib3$_receivePort) === true;
  },
  get$hashCode: function() {
    return this._liblib3$_receivePort.get$_id();
  },
  $is_NativeJsSendPort: true,
  $isSendPort: true
};

$$._WorkerSendPort = {"": "_BaseSendPort;_workerId>,_receivePortId,_isolateId",
  send$2: function(message, replyTo) {
    $._waitForPendingPorts([message, replyTo], new $._WorkerSendPort_send_anon(this, message, replyTo));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(other) {
    var t1;
    if (other == null)
      return false;
    if (typeof other === "object" && other !== null && !!other.$is_WorkerSendPort)
      t1 = $.$$eq(this._workerId, other._workerId) === true && $.$$eq(this._isolateId, other._isolateId) === true && $.$$eq(this._receivePortId, other._receivePortId) === true;
    else
      t1 = false;
    return t1;
  },
  get$hashCode: function() {
    return $.$$xor($.$$xor($.$$shl(this._workerId, 16), $.$$shl(this._isolateId, 8)), this._receivePortId);
  },
  $is_WorkerSendPort: true,
  $isSendPort: true
};

$$._BufferingSendPort = {"": "_BaseSendPort;_id>,_port<,_futurePort>,pending=,_isolateId",
  send$2: function(message, replyTo) {
    var t1 = this._port;
    if (!(t1 == null))
      t1.send$2(message, replyTo);
    else
      $.add(this.pending, $.makeLiteralMap(["message", message, "replyTo", replyTo]));
  },
  send$1: function(message) {
    return this.send$2(message, null);
  },
  $eq: function(other) {
    if (other == null)
      return false;
    return typeof other === "object" && other !== null && !!other.$is_BufferingSendPort && $.$$eq(this._id, other._id) === true;
  },
  get$hashCode: function() {
    return this._id;
  },
  _BufferingSendPort$2: function(isolateId, _futurePort) {
    $._BufferingSendPort__idCount = $.$$add($._BufferingSendPort__idCount, 1);
    this._futurePort.then$1(new $.anon35(this));
  },
  $is_BufferingSendPort: true,
  $isSendPort: true
};

$$.ReceivePortImpl = {"": "Object;_id>,_callback>",
  _callback$2: function(arg0, arg1) {
    return this._callback.call$2(arg0, arg1);
  },
  receive$1: function(onMessage) {
    this._callback = onMessage;
  },
  close$0: function() {
    this._callback = null;
    $globalState.get$currentContext().unregister$1(this._id);
  },
  toSendPort$0: function() {
    return $._NativeJsSendPort$(this, $globalState.get$currentContext().get$id());
  },
  ReceivePortImpl$0: function() {
    $._globalState().get$currentContext().register$2(this._id, this);
  }
};

$$._PendingSendPortFinder = {"": "_MessageTraverser;ports>,_visited",
  visitPrimitive$1: function(x) {
  },
  visitList$1: function(list) {
    if (!($.$$index(this._visited, list) == null))
      return;
    $.$$indexSet(this._visited, list, true);
    $.forEach(list, new $._PendingSendPortFinder_visitList_anon(this));
  },
  visitMap$1: function(map) {
    if (!($.$$index(this._visited, map) == null))
      return;
    $.$$indexSet(this._visited, map, true);
    $.forEach(map.get$values(), new $._PendingSendPortFinder_visitMap_anon(this));
  },
  visitSendPort$1: function(port) {
    if (!!port.$is_BufferingSendPort && port._port == null)
      this.ports.push(port.get$_futurePort());
  },
  _PendingSendPortFinder$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsSerializer = {"": "_Serializer;_nextFreeRefId,_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return ["sendport", x._workerId, x._isolateId, x._receivePortId];
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(x));
  },
  visitNativeJsSendPort$1: function(port) {
    return ["sendport", $globalState.get$currentManagerId(), port._isolateId, port._liblib3$_receivePort.get$_id()];
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsSerializer$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsCopier = {"": "_Copier;_visited",
  visitSendPort$1: function(x) {
    if (typeof x === "object" && x !== null && !!x.$is_NativeJsSendPort)
      return this.visitNativeJsSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_WorkerSendPort)
      return this.visitWorkerSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$is_BufferingSendPort)
      return this.visitBufferingSendPort$1(x);
    throw $.$$throw("Illegal underlying port " + $.S(this.get$p()));
  },
  visitNativeJsSendPort$1: function(port) {
    return $._NativeJsSendPort$(port._liblib3$_receivePort, port._isolateId);
  },
  visitWorkerSendPort$1: function(port) {
    return $._WorkerSendPort$(port._workerId, port._isolateId, port._receivePortId);
  },
  visitBufferingSendPort$1: function(port) {
    var t1 = port._port;
    if (!(t1 == null))
      return this.visitSendPort$1(t1);
    else
      throw $.$$throw("internal error: must call _waitForPendingPorts to ensure all ports are resolved at this point.");
  },
  _JsCopier$0: function() {
    this._visited = $._JsVisitedMap$();
  }
};

$$._JsDeserializer = {"": "_Deserializer;_deserialized",
  deserializeSendPort$1: function(x) {
    var t1, managerId, isolateId, receivePortId, receivePort;
    t1 = $.getInterceptor$JSStringJSArray(x);
    managerId = t1.$index(x, 1);
    isolateId = t1.$index(x, 2);
    receivePortId = t1.$index(x, 3);
    if ($.$$eq(managerId, $globalState.get$currentManagerId()) === true) {
      t1 = $.$$index($globalState.get$isolates(), isolateId);
      if (t1 == null)
        return;
      receivePort = t1.lookup$1(receivePortId);
      if (receivePort == null)
        return;
      return $._NativeJsSendPort$(receivePort, isolateId);
    } else
      return $._WorkerSendPort$(managerId, isolateId, receivePortId);
  }
};

$$._JsVisitedMap = {"": "Object;tagged",
  $index: function(object) {
    return object['__MessageTraverser__attached_info__'];
  },
  $indexSet: function(object, info) {
    $.add(this.tagged, object);
    object['__MessageTraverser__attached_info__'] = info;
  },
  reset$0: function() {
    this.tagged = $.List_List(0);
  },
  cleanup$0: function() {
    var t1, i;
    t1 = $.length(this.tagged);
    if (typeof t1 !== "number")
      return this.cleanup$0$bailout(1, t1);
    i = 0;
    for (; i < t1; ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  },
  cleanup$0$bailout: function(state0, t1) {
    var i = 0;
    for (; $.CONSTANT2.$lt(i, t1); ++i)
      $.$$index(this.tagged, i)['__MessageTraverser__attached_info__'] = null;
    this.tagged = null;
  }
};

$$._MessageTraverserVisitedMap = {"": "Object;",
  $index: function(object) {
    return;
  },
  $indexSet: function(object, info) {
  },
  reset$0: function() {
  },
  cleanup$0: function() {
  }
};

$$._MessageTraverser = {"": "Object;",
  traverse$1: function(x) {
    var result, t1;
    t1 = x;
    if (t1 == null || typeof t1 === "string" || typeof t1 === "number" || typeof t1 === "boolean")
      return this.visitPrimitive$1(x);
    this._visited.reset$0();
    result = null;
    try {
      result = this._dispatch$1(x);
    } finally {
      this._visited.cleanup$0();
    }
    return result;
  },
  _dispatch$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return this.visitPrimitive$1(x);
    if (typeof x === "object" && x !== null && (x.constructor === Array || x.$isList()))
      return this.visitList$1(x);
    if (typeof x === "object" && x !== null && x.$isMap())
      return this.visitMap$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPort)
      return this.visitSendPort$1(x);
    if (typeof x === "object" && x !== null && !!x.$isSendPortSync)
      return this.visitSendPortSync$1(x);
    return this.visitObject$1(x);
  },
  visitObject$1: function(x) {
    throw $.$$throw("Message serialization: Illegal value " + $.S(x) + " passed");
  }
};

$$._Copier = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, len, copy, i;
    if (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior())
      return this.visitList$1$bailout(1, list);
    t1 = $.$$index(this._visited, list);
    if (!(t1 == null))
      return t1;
    len = list.length;
    copy = $.List_List(len);
    $.$$indexSet(this._visited, list, copy);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= copy.length)
        throw $.ioore(i);
      copy[i] = t1;
    }
    return copy;
  },
  visitList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.$$index(this._visited, list);
        if (!(t1 == null))
          return t1;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var copy, i, t2;
        state0 = 0;
        copy = $.List_List(len);
        $.$$indexSet(this._visited, list, copy);
        for (i = 0; $.CONSTANT2.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= copy.length)
            throw $.ioore(i);
          copy[i] = t2;
        }
        return copy;
    }
  },
  visitMap$1: function(map) {
    var t1, t2;
    t1 = {};
    t1.copy_0 = $.$$index(this._visited, map);
    t2 = t1.copy_0;
    if (!(t2 == null))
      return t2;
    t1.copy_0 = $.Map_Map();
    $.$$indexSet(this._visited, map, t1.copy_0);
    map.forEach$1(new $._Copier_visitMap_anon(t1, this));
    return t1.copy_0;
  }
};

$$._Serializer = {"": "_MessageTraverser;",
  visitPrimitive$1: function(x) {
    return x;
  },
  visitList$1: function(list) {
    var t1, id;
    t1 = $.$$index(this._visited, list);
    if (!(t1 == null))
      return ["ref", t1];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, list, id);
    return ["list", id, this._serializeList$1(list)];
  },
  visitMap$1: function(map) {
    var t1, id;
    t1 = $.$$index(this._visited, map);
    if (!(t1 == null))
      return ["ref", t1];
    id = this._nextFreeRefId;
    this._nextFreeRefId = id + 1;
    $.$$indexSet(this._visited, map, id);
    return ["map", id, this._serializeList$1($.toList(map.get$keys())), this._serializeList$1($.toList(map.get$values()))];
  },
  _serializeList$1: function(list) {
    var len, result, i, t1;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this._serializeList$1$bailout(1, list);
    len = list.length;
    result = $.List_List(len);
    for (i = 0; i < len; ++i) {
      if (i >= list.length)
        throw $.ioore(i);
      t1 = this._dispatch$1(list[i]);
      if (i >= result.length)
        throw $.ioore(i);
      result[i] = t1;
    }
    return result;
  },
  _serializeList$1$bailout: function(state0, list, t1, len) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = $.getInterceptor$JSStringJSArray(list);
        len = t1.get$length(list);
      case 2:
        var result, i, t2;
        state0 = 0;
        result = $.List_List(len);
        for (i = 0; $.CONSTANT2.$lt(i, len); ++i) {
          t2 = this._dispatch$1(t1.$index(list, i));
          if (i >= result.length)
            throw $.ioore(i);
          result[i] = t2;
        }
        return result;
    }
  }
};

$$._Deserializer = {"": "Object;",
  deserialize$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    this._deserialized = $.HashMap_HashMap();
    return this._deserializeHelper$1(x);
  },
  _deserializeHelper$1: function(x) {
    if (x == null || typeof x === "string" || typeof x === "number" || typeof x === "boolean")
      return x;
    switch ($.$$index(x, 0)) {
      case "ref":
        return this._deserializeRef$1(x);
      case "list":
        return this._deserializeList$1(x);
      case "map":
        return this._deserializeMap$1(x);
      case "sendport":
        return this.deserializeSendPort$1(x);
      default:
        return this.deserializeObject$1(x);
    }
  },
  _deserializeRef$1: function(x) {
    var t1 = $.$$index(x, 1);
    return $.$$index(this._deserialized, t1);
  },
  _deserializeList$1: function(x) {
    var t1, id, dartList, len, i;
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.$index(x, 1);
    dartList = t1.$index(x, 2);
    if (typeof dartList !== "object" || dartList === null || (dartList.constructor !== Array || !!dartList.immutable$list) && !dartList.$isJavaScriptIndexingBehavior())
      return this._deserializeList$1$bailout(1, dartList, id);
    $.$$indexSet(this._deserialized, id, dartList);
    len = dartList.length;
    for (i = 0; i < len; ++i) {
      if (i >= dartList.length)
        throw $.ioore(i);
      t1 = this._deserializeHelper$1(dartList[i]);
      if (i >= dartList.length)
        throw $.ioore(i);
      dartList[i] = t1;
    }
    return dartList;
  },
  _deserializeList$1$bailout: function(state0, dartList, id, t2, len) {
    switch (state0) {
      case 0:
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.$index(x, 1);
        dartList = t1.$index(x, 2);
      case 1:
        state0 = 0;
        $.$$indexSet(this._deserialized, id, dartList);
        t2 = $.getInterceptor$JSStringJSArray(dartList);
        len = t2.get$length(dartList);
      case 2:
        var t1, i;
        state0 = 0;
        for (i = 0; $.CONSTANT2.$lt(i, len); ++i)
          t2.$indexSet(dartList, i, this._deserializeHelper$1(t2.$index(dartList, i)));
        return dartList;
    }
  },
  _deserializeMap$1: function(x) {
    var result, t1, id, keys, values, len, i, key;
    result = $.Map_Map();
    t1 = $.getInterceptor$JSStringJSArray(x);
    id = t1.$index(x, 1);
    $.$$indexSet(this._deserialized, id, result);
    keys = t1.$index(x, 2);
    if (typeof keys !== "string" && (typeof keys !== "object" || keys === null || keys.constructor !== Array && !keys.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(1, x, result, keys, t1);
    values = t1.$index(x, 3);
    if (typeof values !== "string" && (typeof values !== "object" || values === null || values.constructor !== Array && !values.$isJavaScriptIndexingBehavior()))
      return this._deserializeMap$1$bailout(2, null, result, keys, null, values);
    len = keys.length;
    for (t1 = $.getInterceptor$JSArray(result), i = 0; i < len; ++i) {
      if (i >= keys.length)
        throw $.ioore(i);
      key = this._deserializeHelper$1(keys[i]);
      if (i >= values.length)
        throw $.ioore(i);
      t1.$indexSet(result, key, this._deserializeHelper$1(values[i]));
    }
    return result;
  },
  _deserializeMap$1$bailout: function(state0, x, result, keys, t1, values, t3, len) {
    switch (state0) {
      case 0:
        result = $.Map_Map();
        t1 = $.getInterceptor$JSStringJSArray(x);
        id = t1.$index(x, 1);
        $.$$indexSet(this._deserialized, id, result);
        keys = t1.$index(x, 2);
      case 1:
        state0 = 0;
        values = t1.$index(x, 3);
      case 2:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(keys);
        len = t3.get$length(keys);
      case 3:
        var id, t2, i;
        state0 = 0;
        for (t1 = $.getInterceptor$JSStringJSArray(values), t2 = $.getInterceptor$JSArray(result), i = 0; $.CONSTANT2.$lt(i, len); ++i)
          t2.$indexSet(result, this._deserializeHelper$1(t3.$index(keys, i)), this._deserializeHelper$1(t1.$index(values, i)));
        return result;
    }
  },
  deserializeObject$1: function(x) {
    throw $.$$throw("Unexpected serialized object");
  }
};

$$.TimerImpl = {"": "Object;_once,_inEventLoop,_handle<",
  cancel$0: function() {
    if (!($.get$globalThis().setTimeout == null)) {
      if (this._inEventLoop === true)
        throw $.$$throw($.UnsupportedError$("Timer in event loop cannot be canceled."));
      if (this._handle == null)
        return;
      var t1 = $globalState.get$topEventLoop();
      t1.set$activeTimerCount($.$$sub(t1.get$activeTimerCount(), 1));
      if (this._once)
        $.get$globalThis().clearTimeout(this._handle);
      else
        $.get$globalThis().clearInterval(this._handle);
      this._handle = null;
    } else
      throw $.$$throw($.UnsupportedError$("Canceling a timer."));
  },
  TimerImpl$2: function(milliseconds, callback) {
    var t1;
    if ($.$$eq(milliseconds, 0) === true)
      t1 = $.hasTimer() !== true || $._globalState().get$isWorker() === true;
    else
      t1 = false;
    if (t1) {
      $._globalState().get$topEventLoop().enqueue$3($._globalState().get$currentContext(), new $.anon(this, callback), "timer");
      this._inEventLoop = true;
    } else if ($.hasTimer() === true) {
      t1 = $._globalState().get$topEventLoop();
      t1.set$activeTimerCount($.$$add(t1.get$activeTimerCount(), 1));
      t1 = new $.internalCallback(this, callback);
      this._handle = $.get$globalThis().setTimeout($.convertDartClosureToJS(t1, 0), milliseconds);
    } else
      throw $.$$throw($.UnsupportedError$("Timer greater than 0."));
  }
};

$$.AsyncError = {"": "Object;error>,stackTrace>,cause>",
  _writeOn$1: function(buffer) {
    var message, t1, exception, t2;
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "'");
    message = null;
    try {
      message = $.toString(this.error);
    } catch (exception) {
      $.unwrapException(exception);
      message = $.Error_safeToString(this.error);
    }

    t1.add$1(buffer, message);
    t1.add$1(buffer, "'\n");
    t2 = this.stackTrace;
    if (!(t2 == null)) {
      t1.add$1(buffer, "Stack trace:\n");
      t1.add$1(buffer, $.toString(t2));
      t1.add$1(buffer, "\n");
    }
  },
  toString$0: function() {
    var buffer, t1, cause;
    buffer = $.StringBuffer_StringBuffer("");
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, "AsyncError: ");
    this._writeOn$1(buffer);
    cause = this.cause;
    for (; !(cause == null);) {
      t1.add$1(buffer, "Caused by: ");
      cause._writeOn$1(buffer);
      cause = cause.get$cause();
    }
    return t1.toString$0(buffer);
  },
  throwDelayed$0: function() {
    var reportError, exception;
    reportError = new $.AsyncError_throwDelayed_reportError(this);
    try {
      $.Timer_Timer(0, new $.AsyncError_throwDelayed_anon(this, reportError));
    } catch (exception) {
      $.unwrapException(exception);
      reportError.call$0();
    }

  },
  $isAsyncError: true
};

$$._CompleterImpl = {"": "Object;future>,_isComplete>",
  complete$1: function(value) {
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    this.future._setValue$1(value);
  },
  completeError$2: function(error, stackTrace) {
    var asyncError;
    if (this._isComplete)
      throw $.$$throw($.StateError$("Future already completed"));
    this._isComplete = true;
    asyncError = typeof error === "object" && error !== null && !!error.$isAsyncError ? error : $.AsyncError$(error, stackTrace);
    this.future._setError$1(asyncError);
  },
  completeError$1: function(error) {
    return this.completeError$2(error, null);
  }
};

$$._FutureListenerWrapper = {"": "Object;future>,_nextListener=",
  _sendValue$1: function(value) {
    this.future._setValue$1(value);
  },
  _sendError$1: function(error) {
    this.future._setError$1(error);
  }
};

$$._FutureImpl = {"": "Object;_state,_resultOrListeners>",
  get$_isComplete: function() {
    return $.$$eq(this._state, 0) !== true;
  },
  get$_hasValue: function() {
    return $.$$eq(this._state, 1);
  },
  get$_hasError: function() {
    return $.$$eq($.$$and(this._state, 2), 0) !== true;
  },
  get$_hasUnhandledError: function() {
    return $.$$eq($.$$and(this._state, 4), 0) !== true;
  },
  _clearUnhandledError$0: function() {
    this._state = $.$$and(this._state, 4294967291);
  },
  then$2$onError: function(f, onError) {
    var t1;
    if (this.get$_isComplete() !== true) {
      if (onError == null) {
        t1 = $._ThenFuture$(f);
        t1._subscribeTo$1(this);
        return t1;
      }
      t1 = $._SubscribeFuture$(f, onError);
      t1._subscribeTo$1(this);
      return t1;
    }
    if (this.get$_hasError() === true) {
      if (!(onError == null))
        return this._handleError$2(onError, null);
      return $._FutureWrapper$(this);
    } else
      return this._handleValue$1(f);
  },
  then$1: function(f) {
    return this.then$2$onError(f, null);
  },
  catchError$2$test: function(f, test) {
    var t1;
    if (this.get$_hasValue() === true)
      return $._FutureWrapper$(this);
    if (this.get$_isComplete() !== true) {
      t1 = $._CatchErrorFuture$(f, test);
      t1._subscribeTo$1(this);
      return t1;
    } else
      return this._handleError$2(f, test);
  },
  catchError$1: function(f) {
    return this.catchError$2$test(f, null);
  },
  _handleValue$1: function(onValue) {
    var thenFuture = $._ThenFuture$(onValue);
    $.Timer_Timer(0, new $._FutureImpl__handleValue_anon(thenFuture, this._resultOrListeners));
    return thenFuture;
  },
  _handleError$2: function(onError, test) {
    var error, errorFuture;
    this._clearUnhandledError$0();
    error = this._resultOrListeners;
    errorFuture = $._CatchErrorFuture$(onError, test);
    $.Timer_Timer(0, new $._FutureImpl__handleError_anon(error, errorFuture));
    return errorFuture;
  },
  get$_handleError: function() {
    return new $.BoundClosure2(this, "_handleError$2");
  },
  _setValue$1: function(value) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 1;
    this._resultOrListeners = value;
    for (; !(listeners == null); listeners = listeners0) {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendValue$1(value);
    }
  },
  get$_setValue: function() {
    return new $.BoundClosure(this, "_setValue$1");
  },
  _setError$1: function(error) {
    var listeners, listeners0;
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Future already completed"));
    listeners = this._removeListeners$0();
    this._state = 2;
    this._resultOrListeners = error;
    if (listeners == null) {
      this._scheduleUnhandledError$0();
      return;
    }
    do {
      listeners0 = listeners.get$_nextListener();
      listeners.set$_nextListener(null);
      listeners._sendError$1(error);
      if (!(listeners0 == null)) {
        listeners = listeners0;
        continue;
      } else
        break;
    } while (true);
  },
  get$_setError: function() {
    return new $.BoundClosure(this, "_setError$1");
  },
  _scheduleUnhandledError$0: function() {
    this._state = $.$$or(this._state, 4);
    $.Timer_Timer(0, new $._FutureImpl__scheduleUnhandledError_anon(this));
  },
  _addListener$1: function(listener) {
    listener.set$_nextListener(this._resultOrListeners);
    this._resultOrListeners = listener;
  },
  _removeListeners$0: function() {
    var current, prev, next;
    current = this._resultOrListeners;
    this._resultOrListeners = null;
    for (prev = null; !(current == null); prev = current, current = next) {
      next = current.get$_nextListener();
      current.set$_nextListener(prev);
    }
    return prev;
  },
  _chain$1: function(future) {
    if (this.get$_isComplete() !== true)
      this._addListener$1(future._asListener$0());
    else if (this.get$_hasValue() === true)
      future._setValue$1(this._resultOrListeners);
    else {
      this._clearUnhandledError$0();
      future._setError$1(this._resultOrListeners);
    }
  },
  _asListener$0: function() {
    return $._FutureListener__FutureListener$wrap(this);
  },
  _FutureImpl$immediate$1: function(value) {
    this._state = 1;
    this._resultOrListeners = value;
  },
  $is_FutureImpl: true,
  $isFuture: true
};

$$._TransformFuture = {"": "_FutureImpl;_nextListener=",
  _subscribeTo$1: function(future) {
    future._addListener$1(this);
  },
  _setOrChainValue$1: function(result) {
    if (typeof result === "object" && result !== null && !!result.$isFuture)
      if (!!result.$is_FutureImpl) {
        result._chain$1(this);
        return;
      } else {
        result.then$2$onError(this.get$_setValue(), this.get$_setError());
        return;
      }
    else
      this._setValue$1(result);
  }
};

$$._ThenFuture = {"": "_TransformFuture;_onValue,_nextListener,_state,_resultOrListeners",
  _onValue$1: function(arg0) {
    return this._onValue.call$1(arg0);
  },
  _sendValue$1: function(value) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onValue$1(value);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$(e0, s));
        return;
      }
    }

    this._setOrChainValue$1(result);
  },
  _sendError$1: function(error) {
    this._setError$1(error);
  }
};

$$._CatchErrorFuture = {"": "_TransformFuture;_test,_onError,_nextListener,_state,_resultOrListeners",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendValue$1: function(value) {
    this._setValue$1(value);
  },
  _sendError$1: function(error) {
    var matchesTest, e, s, result, e0, e1, s0, exception, t1;
    if (!(this._test == null)) {
      matchesTest = null;
      try {
        matchesTest = this._test$1(error.get$error());
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e, s, error));
        return;
      }

      if (matchesTest !== true) {
        this._setError$1(error);
        return;
      }
    }
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e0 = t1;
        this._setError$1(e0);
        return;
      } else {
        e1 = t1;
        s0 = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e1, s0, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._SubscribeFuture = {"": "_ThenFuture;_onError,_onValue,_nextListener,_state,_resultOrListeners",
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _sendError$1: function(error) {
    var result, e, e0, s, exception, t1;
    result = null;
    try {
      result = this._onError$1(error);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        this._setError$1(e);
        return;
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        this._setError$1($.AsyncError$withCause(e0, s, error));
        return;
      }
    }

    this._setOrChainValue$1(result);
  }
};

$$._FutureWrapper = {"": "Object;_future",
  then$2$onError: function($function, onError) {
    return this._future.then$2$onError($function, onError);
  },
  then$1: function($function) {
    return this.then$2$onError($function, null);
  },
  catchError$2$test: function($function, test) {
    return this._future.catchError$2$test($function, test);
  },
  catchError$1: function($function) {
    return this.catchError$2$test($function, null);
  },
  $isFuture: true
};

$$.Stream = {"": "Object;",
  where$1: function(test) {
    return $.WhereStream$(this, test);
  },
  contains$1: function(match) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_contains_anon(t1, match, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_contains_anon0(future), t3, true);
    return future;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  any$1: function(test) {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_any_anon(t1, test, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_any_anon0(future), t3, true);
    return future;
  },
  get$length: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.count_0 = 0;
    t2 = new $.Stream_length_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_length_anon0(t1, future), t3, true);
    return future;
  },
  get$isEmpty: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.subscription_0 = null;
    t2 = new $.Stream_isEmpty_anon(t1, future);
    t3 = future.get$_setError();
    t1.subscription_0 = this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_isEmpty_anon0(future), t3, true);
    return future;
  },
  toList$0: function() {
    var result, future, t1, t2;
    result = [];
    future = $._FutureImpl$();
    t1 = new $.Stream_toList_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toList_anon0(result, future), t2, true);
    return future;
  },
  toSet$0: function() {
    var result, future, t1, t2;
    result = $.Set_Set();
    future = $._FutureImpl$();
    t1 = new $.Stream_toSet_anon(result);
    t2 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t1, new $.Stream_toSet_anon0(result, future), t2, true);
    return future;
  },
  get$last: function() {
    var t1, future, t2, t3;
    t1 = {};
    future = $._FutureImpl$();
    t1.result_0 = null;
    t1.foundResult_1 = false;
    t2 = new $.Stream_last_anon(t1);
    t3 = future.get$_setError();
    this.listen$4$onDone$onError$unsubscribeOnError(t2, new $.Stream_last_anon0(t1, future), t3, true);
    return future;
  }
};

$$.StreamSubscription = {"": "Object;"};

$$.StreamSinkView = {"": "Object;_sink",
  add$1: function(value) {
    this._sink.add$1(value);
  },
  close$0: function() {
    this._sink.close$0();
  }
};

$$.StreamController = {"": "Object;stream",
  get$sink: function() {
    return $.StreamSinkView$(this);
  },
  add$1: function(value) {
    return this.stream._add$1(value);
  },
  close$0: function() {
    this.stream._close$0();
  }
};

$$._SingleControllerStream = {"": "_SingleStreamImpl;_subscriptionHandler,_pauseHandler,_subscriber,_state,_pendingEvents",
  _subscriptionHandler$0: function() {
    return this._subscriptionHandler.call$0();
  },
  _pauseHandler$0: function() {
    return this._pauseHandler.call$0();
  },
  _onSubscriptionStateChange$0: function() {
    if (!(this._subscriptionHandler == null))
      this._subscriptionHandler$0();
  },
  _onPauseStateChange$0: function() {
    if (!(this._pauseHandler == null))
      this._pauseHandler$0();
  }
};

$$._StreamImpl = {"": "Stream;",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    var subscription;
    if (this.get$_isComplete() === true)
      return $._DoneSubscription$(onDone);
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    subscription = this._createSubscription$4(onData, onError, onDone, true === unsubscribeOnError);
    this._addListener$1(subscription);
    return subscription;
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  _add$1: function(value) {
    if (this.get$_isClosed() === true)
      throw $.$$throw($.StateError$("Sending on closed stream"));
    if (this.get$_canFireEvent() !== true) {
      this._addPendingEvent$1($._DelayedData$(value));
      return;
    }
    this._sendData$1(value);
    this._handlePendingEvents$0();
  },
  _close$0: function() {
    if (this.get$_isClosed() === true)
      throw $.$$throw($.StateError$("Sending on closed stream"));
    this._state = (this._state | 1) >>> 0;
    if (this.get$_canFireEvent() !== true) {
      this._addPendingEvent$1($.CONSTANT8);
      return;
    }
    this._sendDone$0();
  },
  get$_isClosed: function() {
    return (this._state & 1) !== 0;
  },
  get$_isComplete: function() {
    return (this._state & 2) !== 0;
  },
  get$_isPaused: function() {
    return this._state >= 16;
  },
  get$_hasPendingEvent: function() {
    var t1 = this._pendingEvents;
    return !(t1 == null) && $.isEmpty(t1) !== true;
  },
  get$_isFiring: function() {
    return (this._state & 8) !== 0;
  },
  get$_canFireEvent: function() {
    return this.get$_isFiring() !== true && this.get$_isPaused() !== true && this.get$_hasPendingEvent() !== true;
  },
  _updatePauseCount$1: function(by) {
    var oldState, t1, t2;
    oldState = this._state;
    t1 = $.getInterceptor$JSNumber(by);
    if (t1.$ge(by, 0) === true) {
      t1 = t1.$shl(by, 4);
      if (typeof t1 !== "number")
        throw $.iae(t1);
      this._state = oldState + t1;
    } else {
      t2 = $.$$shl(t1.$negate(by), 4);
      if (typeof t2 !== "number")
        throw $.iae(t2);
      this._state = oldState - t2;
    }
  },
  _setComplete$0: function() {
    this._state = (this._state | 2) >>> 0;
  },
  _startFiring$0: function() {
    this._state = (this._state ^ 12) >>> 0;
  },
  _endFiring$0: function() {
    this._state = (this._state ^ 8) >>> 0;
    if (this.get$_isPaused() === true)
      this._onPauseStateChange$0();
    if (this.get$_hasSubscribers() !== true)
      this._onSubscriptionStateChange$0();
  },
  _schedulePendingEvents$0: function() {
    this._pendingEvents.schedule$1(this);
  },
  _onPauseStateChange$0: function() {
  },
  _onSubscriptionStateChange$0: function() {
  },
  _addPendingEvent$1: function(event) {
    if (this._pendingEvents == null)
      this._pendingEvents = $._StreamImplEvents$();
    $.add(this._pendingEvents, event);
  },
  _handlePendingEvents$0: function() {
    var events, t1;
    events = this._pendingEvents;
    t1 = $.getInterceptor(events);
    if (events == null)
      return;
    while (true) {
      if (!(t1.get$isEmpty(events) !== true && this.get$_isPaused() !== true))
        break;
      events.handleNext$1(this);
    }
  },
  _sendData$1: function(value) {
    this._forEachSubscriber$1(new $._StreamImpl__sendData_anon(value));
  },
  _sendError$1: function(error) {
    this._forEachSubscriber$1(new $._StreamImpl__sendError_anon(error));
  },
  _sendDone$0: function() {
    this._setComplete$0();
    if (this.get$_hasSubscribers() !== true)
      return;
    this._forEachSubscriber$1(new $._StreamImpl__sendDone_anon(this));
  }
};

$$._SingleStreamImpl = {"": "_StreamImpl;",
  get$_isPaused: function() {
    return this.get$_hasSubscribers() !== true && this.get$_isComplete() !== true || $._StreamImpl.prototype.get$_isPaused.call(this) === true;
  },
  get$_hasSubscribers: function() {
    return !(this._subscriber == null);
  },
  _createSubscription$4: function(onData, onError, onDone, unsubscribeOnError) {
    return $._StreamSubscriptionImpl$(this, onData, onError, onDone, unsubscribeOnError);
  },
  _addListener$1: function(subscription) {
    if (this.get$_hasSubscribers() === true)
      throw $.$$throw($.StateError$("Stream already has subscriber."));
    this._subscriber = subscription;
    subscription._setSubscribed$1(0);
    this._onSubscriptionStateChange$0();
    if (this.get$_hasPendingEvent() === true)
      this._schedulePendingEvents$0();
  },
  _cancel$1: function(subscriber) {
    var t1, subscriptionPauseCount;
    t1 = this._subscriber;
    if (!(t1 == null ? subscriber == null : t1 === subscriber))
      return;
    this._subscriber = null;
    subscriptionPauseCount = subscriber._setUnsubscribed$0();
    t1 = $.getInterceptor$JSNumber(subscriptionPauseCount);
    this._updatePauseCount$1(t1.$negate(subscriptionPauseCount));
    if (this.get$_isFiring() !== true) {
      if (t1.$gt(subscriptionPauseCount, 0) === true)
        this._onPauseStateChange$0();
      this._onSubscriptionStateChange$0();
    }
  },
  _forEachSubscriber$1: function(action) {
    var subscription = this._subscriber;
    this._startFiring$0();
    action.call$1(subscription);
    this._endFiring$0();
  }
};

$$._StreamSubscriptionImpl = {"": "_StreamListener;_unsubscribeOnError,_liblib2$_onData,_onError,_onDone,_source,_state,_nextLink,_previousLink",
  _liblib2$_onData$1: function(arg0) {
    return this._liblib2$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  _sendData$1: function(data) {
    this._liblib2$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
    if (this._unsubscribeOnError)
      this._source._cancel$1(this);
  },
  _sendDone$0: function() {
    this._onDone$0();
  },
  cancel$0: function() {
    this._source._cancel$1(this);
  }
};

$$._DelayedEvent = {"": "Object;next="};

$$._DelayedData = {"": "_DelayedEvent;value=,next",
  perform$1: function(stream) {
    stream._sendData$1(this.value);
  }
};

$$._DelayedDone = {"": "Object;",
  perform$1: function(stream) {
    stream._sendDone$0();
  },
  get$next: function() {
    return;
  },
  set$next: function(_) {
    throw $.$$throw($.StateError$("No events after a done."));
  }
};

$$._InternalLink = {"": "Object;",
  _InternalLink$0: function() {
    this._nextLink = this;
    this._previousLink = this;
  }
};

$$._StreamListener = {"": "_InternalLink;",
  _setSubscribed$1: function(eventIdBit) {
    this._state = (1 | eventIdBit << 2) >>> 0;
  },
  _setUnsubscribed$0: function() {
    var timesPaused = $.CONSTANT2.$shr(this._state, 3);
    this._state = 0;
    return timesPaused;
  }
};

$$._PendingEvents = {"": "Object;scheduleTimer<",
  get$isScheduled: function() {
    return !(this.scheduleTimer == null);
  },
  schedule$1: function(stream) {
    if (this.get$isScheduled() === true)
      return;
    this.scheduleTimer = $.Timer_Timer(0, new $._PendingEvents_schedule_anon(this, stream));
  },
  cancelSchedule$0: function() {
    this.scheduleTimer.cancel$0();
    this.scheduleTimer = null;
  }
};

$$._StreamImplEvents = {"": "_PendingEvents;firstPendingEvent,lastPendingEvent,scheduleTimer",
  get$isEmpty: function() {
    return this.lastPendingEvent == null;
  },
  get$isScheduled: function() {
    return !(this.scheduleTimer == null);
  },
  add$1: function(event) {
    var t1 = this.lastPendingEvent;
    if (t1 == null) {
      this.lastPendingEvent = event;
      this.firstPendingEvent = event;
    } else {
      t1.set$next(event);
      this.lastPendingEvent = event;
    }
  },
  handleNext$1: function(stream) {
    var event;
    if (this.get$isScheduled() === true)
      this.cancelSchedule$0();
    event = this.firstPendingEvent;
    this.firstPendingEvent = event.get$next();
    if (this.firstPendingEvent == null)
      this.lastPendingEvent = null;
    event.perform$1(stream);
  }
};

$$._DoneSubscription = {"": "Object;_handler>,_timer,_liblib2$_pauseCount",
  _handler$0: function() {
    return this._handler.call$0();
  },
  _delayDone$0: function() {
    this._timer = $.Timer_Timer(0, new $._DoneSubscription__delayDone_anon(this));
  },
  get$_isComplete: function() {
    return this._timer == null && this._liblib2$_pauseCount === 0;
  },
  cancel$0: function() {
    if (this.get$_isComplete() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._timer;
    if (!(t1 == null)) {
      t1.cancel$0();
      this._timer = null;
    }
    this._liblib2$_pauseCount = 0;
  },
  _DoneSubscription$1: function(_handler) {
    this._delayDone$0();
  }
};

$$._ForwardingStream = {"": "Stream;",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    if (onData == null)
      onData = $._nullDataHandler;
    if (onError == null)
      onError = $._nullErrorHandler;
    if (onDone == null)
      onDone = $._nullDoneHandler;
    return $._ForwardingStreamSubscription$(this, onData, onError, onDone, true === unsubscribeOnError);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  },
  _handleData$2: function(data, sink) {
    sink._sendData$1(data);
  },
  get$_handleData: function() {
    return new $.BoundClosure2(this, "_handleData$2");
  },
  _handleError$2: function(error, sink) {
    sink._sendError$1(error);
  },
  get$_handleError: function() {
    return new $.BoundClosure2(this, "_handleError$2");
  },
  _handleDone$1: function(sink) {
    sink._sendDone$0();
  },
  get$_handleDone: function() {
    return new $.BoundClosure(this, "_handleDone$1");
  }
};

$$._ForwardingStreamSubscription = {"": "Object;_stream,_liblib2$_onData,_onError,_onDone,_subscription",
  _liblib2$_onData$1: function(arg0) {
    return this._liblib2$_onData.call$1(arg0);
  },
  _onError$1: function(arg0) {
    return this._onError.call$1(arg0);
  },
  _onDone$0: function() {
    return this._onDone.call$0();
  },
  cancel$0: function() {
    var t1 = this._subscription;
    if (t1 == null)
      throw $.$$throw($.StateError$("Subscription has been unsubscribed"));
    t1.cancel$0();
    this._subscription = null;
  },
  _sendData$1: function(data) {
    this._liblib2$_onData$1(data);
  },
  _sendError$1: function(error) {
    this._onError$1(error);
  },
  _sendDone$0: function() {
    var t1 = this._subscription;
    if (!(t1 == null)) {
      t1.cancel$0();
      this._subscription = null;
    }
    this._onDone$0();
  },
  _handleData$1: function(data) {
    this._stream._handleData$2(data, this);
  },
  get$_handleData: function() {
    return new $.BoundClosure(this, "_handleData$1");
  },
  _handleError$1: function(error) {
    this._stream._handleError$2(error, this);
  },
  get$_handleError: function() {
    return new $.BoundClosure(this, "_handleError$1");
  },
  _handleDone$0: function() {
    this._stream._handleDone$1(this);
  },
  get$_handleDone: function() {
    return new $.BoundClosure3(this, "_handleDone$0");
  },
  _ForwardingStreamSubscription$5: function(_stream, _onData, _onError, _onDone, unsubscribeOnError) {
    var t1, t2, t3;
    t1 = this._stream._source;
    t2 = this.get$_handleData();
    t3 = this.get$_handleError();
    this._subscription = t1.listen$4$onDone$onError$unsubscribeOnError(t2, this.get$_handleDone(), t3, unsubscribeOnError);
  }
};

$$.WhereStream = {"": "_ForwardingStream;_test,_source",
  _test$1: function(arg0) {
    return this._test.call$1(arg0);
  },
  _handleData$2: function(inputEvent, sink) {
    var satisfies, e, s, exception, t1;
    satisfies = null;
    try {
      satisfies = this._test$1(inputEvent);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      e = t1;
      s = $.getTraceFromException(exception);
      sink._sendError$1($._asyncError(e, s, null));
      return;
    }

    if (satisfies === true)
      sink._sendData$1(inputEvent);
  },
  get$_handleData: function() {
    return new $.BoundClosure2(this, "_handleData$2");
  }
};

$$.EgbRunner = {"": "Object;_receivePort>,_scripterPort>,_interface,_playerProfile>,started<,ended,_liblib4$_streamController",
  run$0: function() {
    this._interface.setup$0();
    this._scripterPort.send$2($.EgbMessage$GetBookUid().toJson$0(), this._receivePort.toSendPort$0());
  },
  stop$0: function() {
    this._playerProfile.close$0();
    this._interface.close$0();
    this._scripterPort.send$1($.EgbMessage$Quit().toJson$0());
    this._receivePort.close$0();
  },
  receiveFromScripter$2: function(messageJson, replyTo) {
    var message, t1, t2, savegame, choices;
    message = $.EgbMessage$fromJson0(messageJson);
    "We have a message from Scripter: " + $.S(message.type) + ".";
    if ($.$$eq(message.type, 32) === true) {
      $.add(this._liblib4$_streamController.get$sink(), "END");
      this.ended = true;
    } else if ($.$$eq(message.type, 4096) === true) {
      t1 = message.strContent;
      t2 = this._playerProfile;
      t2.set$currentEgamebookUid(t1);
      t2.loadMostRecent$0().then$1(new $.EgbRunner_receiveFromScripter_anon(this));
      this.started = true;
    } else if ($.$$eq(message.type, 512) === true) {
      savegame = $.EgbSavegame_EgbSavegame$fromMessage0(message);
      this._playerProfile.save$1(savegame);
      this._interface.addSavegameBookmark$1(savegame);
      this._scripterPort.send$2($.EgbMessage$Continue().toJson$0(), this._receivePort.toSendPort$0());
    } else if ($.$$eq(message.type, 4) === true) {
      this._interface.showText$1(message.strContent);
      this._scripterPort.send$2($.EgbMessage$Continue().toJson$0(), this._receivePort.toSendPort$0());
    } else if ($.$$eq(message.type, 256) === true)
      this._scripterPort.send$2($.EgbMessage$Continue().toJson$0(), this._receivePort.toSendPort$0());
    else if ($.$$eq(message.type, 64) === true) {
      if (!($.$$index(message.listContent, 0) == null))
        this._interface.showText$1($.$$index(message.listContent, 0));
      choices = $.EgbChoiceList$fromMessage(message);
      if ($.$$eq($.length(choices), 1) === true && $.$$eq($.trim(choices.$index(0).get$string()), "") === true)
        this._scripterPort.send$2($.EgbMessage$OptionSelected(choices.$index(0).get$hash()).toJson$0(), this._receivePort.toSendPort$0());
      else
        this._interface.showChoices$1(choices).then$1(new $.EgbRunner_receiveFromScripter_anon0(this));
    }
  },
  get$receiveFromScripter: function() {
    return new $.BoundClosure2(this, "receiveFromScripter$2");
  },
  EgbRunner$4: function(_receivePort, _scripterPort, _interface, _playerProfile) {
    this._liblib4$_streamController = $.StreamController$(null, null);
    this._interface.get$stream().listen$1(new $.anon36(this));
    this._receivePort.receive$1(this.get$receiveFromScripter());
  }
};

$$.EgbUserInteraction = {"": "Object;shown=,waitForEndOfPage>,hash>"};

$$.EgbChoice0 = {"": "EgbUserInteraction;string>,f>,$goto>,showNow,shown,waitForEndOfPage,hash",
  goto$1: function(arg0) {
    return this.$goto.call$1(arg0);
  },
  get$isAutomatic: function() {
    return $.isEmpty(this.string);
  },
  then$1: function(_f) {
    this.f = _f;
    return this;
  },
  toString$0: function() {
    return "Choice: " + $.S(this.string) + " [" + $.S(this.$goto) + "]";
  },
  EgbChoice$fromMap$1: function(map) {
    var t1 = $.getInterceptor$JSStringJSArray(map);
    this.string = $.trim(t1.$index(map, "string"));
    if (map.containsKey$1("hash") === true)
      this.hash = t1.$index(map, "hash");
    else
      this.hash = $.hashCode(this.string);
    this.$goto = t1.$index(map, "goto");
    if (map.containsKey$1("showNow") === true)
      this.showNow = t1.$index(map, "showNow");
    this.f = t1.$index(map, "then");
  },
  EgbChoice$4$$goto$script$showNow: function(string, $goto, script, showNow) {
    var t1 = $.getInterceptor$JSString(string);
    this.string = t1.trim$0(string);
    this.hash = t1.get$hashCode(string);
    this.f = script;
    this.waitForEndOfPage = showNow !== true;
  },
  $isEgbChoice0: true
};

$$.EgbChoiceList0 = {"": "Object;_liblib5$_choices,question",
  addFromScripterList$1: function(list) {
    var t1, i, map, t2, t3, string;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this.addFromScripterList$1$bailout0(1, list);
    if (0 >= list.length)
      throw $.ioore(0);
    t1 = list[0];
    if (!(t1 == null) && (typeof t1 === "function" || typeof t1 === "object" && t1 !== null && !!t1.$isFunction))
      this.question = t1.call$0();
    else
      this.question = null;
    for (t1 = this._liblib5$_choices, i = 1; i < list.length; ++i) {
      map = list[i];
      t2 = $.getInterceptor$JSStringJSArray(map);
      if (!(t2.$index(map, "string") == null)) {
        t3 = t2.$index(map, "string");
        t3 = typeof t3 === "function" || typeof t3 === "object" && t3 !== null && !!t3.$isFunction;
      } else
        t3 = false;
      string = t3 ? t2.$index(map, "string").call$0() : "";
      t1.push($.EgbChoice$0(string, t2.$index(map, "goto"), t2.$index(map, "script"), true));
    }
  },
  addFromScripterList$1$bailout0: function(state0, list) {
    var t1, t2, i, map, t3, t4, string;
    t1 = $.getInterceptor$JSStringJSArray(list);
    if (!(t1.$index(list, 0) == null)) {
      t2 = t1.$index(list, 0);
      t2 = typeof t2 === "function" || typeof t2 === "object" && t2 !== null && !!t2.$isFunction;
    } else
      t2 = false;
    if (t2)
      this.question = t1.$index(list, 0).call$0();
    else
      this.question = null;
    for (t2 = this._liblib5$_choices, i = 1; $.CONSTANT2.$lt(i, t1.get$length(list)); ++i) {
      map = t1.$index(list, i);
      t3 = $.getInterceptor$JSStringJSArray(map);
      if (!(t3.$index(map, "string") == null)) {
        t4 = t3.$index(map, "string");
        t4 = typeof t4 === "function" || typeof t4 === "object" && t4 !== null && !!t4.$isFunction;
      } else
        t4 = false;
      string = t4 ? t3.$index(map, "string").call$0() : "";
      t2.push($.EgbChoice$0(string, t3.$index(map, "goto"), t3.$index(map, "script"), true));
    }
  },
  add$3$$goto$script: function(element, $goto, script) {
    if (typeof element === "object" && element !== null && !!element.$isEgbChoice0)
      this._liblib5$_choices.push(element);
    else if (typeof element === "string")
      $.EgbChoice$0(element, $goto, script, false);
    else
      throw $.$$throw($.ArgumentError$("To add a choice to choices, one must provide either a new EgbChoice element or a String."));
  },
  add$1: function(element) {
    return this.add$3$$goto$script(element, null, null);
  },
  where$1: function(f) {
    return $.CONSTANT1.where$1(this._liblib5$_choices, f);
  },
  removeMatching$1: function(f) {
    return $.CONSTANT1.removeMatching$1(this._liblib5$_choices, f);
  },
  any$1: function(f) {
    return $.CONSTANT1.any$1(this._liblib5$_choices, f);
  },
  get$length: function() {
    return this._liblib5$_choices.length;
  },
  $index: function(index) {
    var t1 = this._liblib5$_choices;
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  forEach$1: function(f) {
    $.CONSTANT1.forEach$1(this._liblib5$_choices, f);
  },
  clear$0: function() {
    return $.CONSTANT1.clear$0(this._liblib5$_choices);
  },
  get$iterator: function() {
    return $.CONSTANT1.get$iterator(this._liblib5$_choices);
  },
  get$areActionable: function() {
    return $.CONSTANT1.any$1(this._liblib5$_choices, new $.EgbChoiceList_areActionable_anon0());
  },
  toMessage$3$endOfPage$filterOut$prependText: function(endOfPage, filterOut, prependText) {
    var t1, m;
    t1 = $.toList($.CONSTANT1.where$1(this._liblib5$_choices, new $.EgbChoiceList_toMessage_anon1(endOfPage, filterOut)));
    m = $.EgbMessage$0(64);
    m.listContent = $.List_List(0);
    $.add(m.listContent, prependText);
    $.add(m.listContent, this.question);
    $.forEach(t1, new $.EgbChoiceList_toMessage_anon2(m));
    return m;
  },
  toMessage$2$endOfPage$filterOut: function(endOfPage, filterOut) {
    return this.toMessage$3$endOfPage$filterOut$prependText(endOfPage, filterOut, null);
  },
  toMessage$2$filterOut$prependText: function(filterOut, prependText) {
    return this.toMessage$3$endOfPage$filterOut$prependText(false, filterOut, prependText);
  },
  EgbChoiceList$fromMessage$1: function(m) {
    var t1, t2, i;
    t1 = $.$$lt($.length(m.get$listContent()), 3);
    t2 = m.get$listContent();
    if (t1 === true)
      throw $.$$throw("Message with choices doesn't have enough data: " + $.S(t2) + ".");
    else {
      this.question = $.$$index(t2, 1);
      for (t1 = this._liblib5$_choices, i = 2; $.CONSTANT2.$lt(i, $.length(m.get$listContent())); ++i)
        t1.push($.EgbChoice$fromMap($.$$index(m.get$listContent(), i)));
    }
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$.PlayerIntent = {"": "Object;type>"};

$$.RestartIntent = {"": "PlayerIntent;type"};

$$.LoadIntent = {"": "PlayerIntent;uid>,type", $isLoadIntent: true};

$$._Random = {"": "Object;",
  nextDouble$0: function() {
    return Math.random();
  }
};

$$.EgbMessage = {"": "Object;type>,listContent>,strContent,intContent>",
  toJson$0: function() {
    var data, t1, t2;
    data = $.Map_Map();
    t1 = $.getInterceptor$JSArray(data);
    t1.$indexSet(data, "type", this.type);
    t2 = this.strContent;
    if (!(t2 == null))
      t1.$indexSet(data, "strContent", t2);
    t2 = this.listContent;
    if (!(t2 == null))
      t1.$indexSet(data, "listContent", t2);
    t2 = this.intContent;
    if (!(t2 == null))
      t1.$indexSet(data, "intContent", t2);
    return $._JsonStringifier_stringify(data);
  },
  EgbMessage$fromJson$1: function(json) {
    var data, t1;
    data = $.parse(json, null);
    t1 = $.getInterceptor$JSStringJSArray(data);
    this.type = t1.$index(data, "type");
    if (data.containsKey$1("strContent") === true)
      this.strContent = t1.$index(data, "strContent");
    if (data.containsKey$1("listContent") === true)
      this.listContent = t1.$index(data, "listContent");
    if (data.containsKey$1("intContent") === true)
      this.intContent = t1.$index(data, "intContent");
  },
  EgbMessage$OptionSelected$1: function(hash) {
    this.intContent = hash;
  }
};

$$.JsonUnsupportedObjectError = {"": "Object;unsupportedObject,cause>",
  toString$0: function() {
    if (!(this.cause == null))
      return "Calling toJson method on object failed.";
    else
      return "Object toJson method returns non-serializable value.";
  }
};

$$.JsonListener = {"": "Object;",
  handleString$1: function(value) {
  },
  handleNumber$1: function(value) {
  },
  handleBool$1: function(value) {
  },
  handleNull$0: function() {
  },
  beginObject$0: function() {
  },
  propertyName$0: function() {
  },
  propertyValue$0: function() {
  },
  endObject$0: function() {
  },
  beginArray$0: function() {
  },
  arrayElement$0: function() {
  },
  endArray$0: function() {
  },
  fail$3: function(source, position, message) {
  }
};

$$.BuildJsonListener = {"": "JsonListener;stack,currentContainer,key>,value=",
  pushContainer$0: function() {
    var t1 = this.currentContainer;
    if (typeof t1 === "object" && t1 !== null && t1.$isMap())
      this.stack.push(this.key);
    this.stack.push(this.currentContainer);
  },
  popContainer$0: function() {
    var t1, t2;
    this.value = this.currentContainer;
    t1 = this.stack;
    if (0 >= t1.length)
      throw $.ioore(0);
    this.currentContainer = t1.pop();
    t2 = this.currentContainer;
    if (typeof t2 === "object" && t2 !== null && t2.$isMap()) {
      if (0 >= t1.length)
        throw $.ioore(0);
      this.key = t1.pop();
    }
  },
  handleString$1: function(value) {
    this.value = value;
  },
  handleNumber$1: function(value) {
    this.value = value;
  },
  handleBool$1: function(value) {
    this.value = value;
  },
  handleNull$0: function() {
    this.value = this.value;
  },
  beginObject$0: function() {
    this.pushContainer$0();
    this.currentContainer = $.makeLiteralMap([]);
  },
  propertyName$0: function() {
    this.key = this.value;
    this.value = null;
  },
  propertyValue$0: function() {
    $.$$indexSet(this.currentContainer, this.key, this.value);
    this.value = null;
    this.key = null;
  },
  endObject$0: function() {
    this.popContainer$0();
  },
  beginArray$0: function() {
    this.pushContainer$0();
    this.currentContainer = [];
  },
  arrayElement$0: function() {
    $.add(this.currentContainer, this.value);
    this.value = null;
  },
  endArray$0: function() {
    this.popContainer$0();
  },
  get$result: function() {
    return this.value;
  }
};

$$.ReviverJsonListener = {"": "BuildJsonListener;reviver,stack,currentContainer,key,value",
  reviver$2: function(arg0, arg1) {
    return this.reviver.call$2(arg0, arg1);
  },
  arrayElement$0: function() {
    this.value = this.reviver$2($.length(this.currentContainer), this.value);
    $.BuildJsonListener.prototype.arrayElement$0.call(this);
  },
  propertyValue$0: function() {
    this.value = this.reviver$2(this.key, this.value);
    $.BuildJsonListener.prototype.propertyValue$0.call(this);
  },
  get$result: function() {
    return this.reviver$2("", this.value);
  }
};

$$.JsonParser = {"": "Object;source>,listener>",
  parse$0: function() {
    var states, t1, t2, t3, t4, state, position, t5, $char, t6, position0;
    states = [];
    t1 = this.source;
    t2 = $.length(t1);
    for (t3 = $.getInterceptor$JSString(t1), t4 = this.listener, state = 0, position = 0; t5 = $.getInterceptor$JSNumber(position), t5.$lt(position, t2) === true;) {
      $char = t3.charCodeAt$1(t1, position);
      switch ($char) {
        case 32:
        case 13:
        case 10:
        case 9:
          position = t5.$add(position, 1);
          break;
        case 34:
          t6 = $.getInterceptor$JSNumber(state);
          if ($.$$eq(t6.$and(state, 8), 0) !== true)
            this.fail$1(position);
          position0 = this.parseString$1(t5.$add(position, 1));
          state = t6.$or(state, 28);
          position = position0;
          break;
        case 91:
          if ($.$$eq($.$$and(state, 4), 0) !== true)
            this.fail$1(position);
          t4.beginArray$0();
          states.push(state);
          position = t5.$add(position, 1);
          state = 1;
          break;
        case 123:
          if ($.$$eq($.$$and(state, 4), 0) !== true)
            this.fail$1(position);
          t4.beginObject$0();
          states.push(state);
          position = t5.$add(position, 1);
          state = 6;
          break;
        case 110:
          t5 = $.getInterceptor$JSNumber(state);
          if ($.$$eq(t5.$and(state, 4), 0) !== true)
            this.fail$1(position);
          position = this.parseNull$1(position);
          state = t5.$or(state, 28);
          break;
        case 102:
          t5 = $.getInterceptor$JSNumber(state);
          if ($.$$eq(t5.$and(state, 4), 0) !== true)
            this.fail$1(position);
          position = this.parseFalse$1(position);
          state = t5.$or(state, 28);
          break;
        case 116:
          t5 = $.getInterceptor$JSNumber(state);
          if ($.$$eq(t5.$and(state, 4), 0) !== true)
            this.fail$1(position);
          position = this.parseTrue$1(position);
          state = t5.$or(state, 28);
          break;
        case 58:
          if ($.$$eq(state, 30) !== true)
            this.fail$1(position);
          t4.propertyName$0();
          position = t5.$add(position, 1);
          state = 19;
          break;
        case 44:
          t6 = $.getInterceptor(state);
          if (t6.$eq(state, 31) === true) {
            t4.propertyValue$0();
            position = t5.$add(position, 1);
            state = 22;
          } else if (t6.$eq(state, 29) === true) {
            t4.arrayElement$0();
            position = t5.$add(position, 1);
            state = 17;
          } else
            this.fail$1(position);
          break;
        case 93:
          t6 = $.getInterceptor(state);
          if (t6.$eq(state, 1) === true)
            t4.endArray$0();
          else if (t6.$eq(state, 29) === true) {
            t4.arrayElement$0();
            t4.endArray$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          state = $.$$or(states.pop(), 28);
          position = t5.$add(position, 1);
          break;
        case 125:
          t6 = $.getInterceptor(state);
          if (t6.$eq(state, 6) === true)
            t4.endObject$0();
          else if (t6.$eq(state, 31) === true) {
            t4.propertyValue$0();
            t4.endObject$0();
          } else
            this.fail$1(position);
          if (0 >= states.length)
            throw $.ioore(0);
          state = $.$$or(states.pop(), 28);
          position = t5.$add(position, 1);
          break;
        default:
          t5 = $.getInterceptor$JSNumber(state);
          if ($.$$eq(t5.$and(state, 4), 0) !== true)
            this.fail$1(position);
          position = this.parseNumber$2($char, position);
          state = t5.$or(state, 28);
          break;
      }
    }
    if ($.$$eq(state, 28) !== true)
      this.fail$1(position);
  },
  parseTrue$1: function(position) {
    var t1, t2, t4, t3;
    if (typeof position !== "number")
      return this.parseTrue$1$bailout(1, position);
    t1 = this.source;
    t2 = $.length(t1);
    t4 = position + 4;
    if (typeof t2 !== "number")
      return this.parseTrue$1$bailout(2, position, t2, t1);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$JSString(t1);
    t3 = t2.charCodeAt$1(t1, position + 1);
    if (typeof t3 !== "number")
      return this.parseTrue$1$bailout(3, position, t2, t1, $.CONSTANT4, t3);
    if (t3 === 114) {
      t3 = t2.charCodeAt$1(t1, position + 2);
      if (typeof t3 !== "number")
        return this.parseTrue$1$bailout(4, position, t2, t1, $.CONSTANT4, t3);
      if (t3 === 117) {
        t1 = t2.charCodeAt$1(t1, position + 3);
        if (typeof t1 !== "number")
          return this.parseTrue$1$bailout(5, position, null, t1, $.CONSTANT4);
        t3 = !(t1 === 101);
        t1 = t3;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      this.fail$1(position);
    this.listener.handleBool$1(true);
    return t4;
  },
  parseTrue$1$bailout: function(state0, position, t2, t1, t4, t3) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.length(t1);
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.$$lt(t2, t4.$add(position, 4)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$JSString(t1);
        t3 = t2.charCodeAt$1(t1, t4.$add(position, 1));
      case 3:
        state0 = 0;
      default:
        if (state0 === 5 || state0 === 4 || state0 === 0 && $.$$eq(t3, 114) === true)
          switch (state0) {
            case 0:
              t3 = t2.charCodeAt$1(t1, t4.$add(position, 2));
            case 4:
              state0 = 0;
            case 5:
              if (state0 === 5 || state0 === 0 && $.$$eq(t3, 117) === true)
                switch (state0) {
                  case 0:
                    t1 = t2.charCodeAt$1(t1, t4.$add(position, 3));
                  case 5:
                    state0 = 0;
                    t3 = $.$$eq(t1, 101) !== true;
                    t1 = t3;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          this.fail$1(position);
        this.listener.handleBool$1(true);
        return t4.$add(position, 4);
    }
  },
  parseFalse$1: function(position) {
    var t1, t2, t4, t3;
    if (typeof position !== "number")
      return this.parseFalse$1$bailout(1, position);
    t1 = this.source;
    t2 = $.length(t1);
    t4 = position + 5;
    if (typeof t2 !== "number")
      return this.parseFalse$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$JSString(t1);
    t3 = t2.charCodeAt$1(t1, position + 1);
    if (typeof t3 !== "number")
      return this.parseFalse$1$bailout(3, position, t1, t2, $.CONSTANT4, t3);
    if (t3 === 97) {
      t3 = t2.charCodeAt$1(t1, position + 2);
      if (typeof t3 !== "number")
        return this.parseFalse$1$bailout(4, position, t1, t2, $.CONSTANT4, t3);
      if (t3 === 108) {
        t3 = t2.charCodeAt$1(t1, position + 3);
        if (typeof t3 !== "number")
          return this.parseFalse$1$bailout(5, position, t1, t2, $.CONSTANT4, t3);
        if (t3 === 115) {
          t1 = t2.charCodeAt$1(t1, position + 4);
          if (typeof t1 !== "number")
            return this.parseFalse$1$bailout(6, position, t1, null, $.CONSTANT4);
          t3 = !(t1 === 101);
          t1 = t3;
        } else
          t1 = true;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      this.fail$1(position);
    this.listener.handleBool$1(false);
    return t4;
  },
  parseFalse$1$bailout: function(state0, position, t1, t2, t4, t3) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.length(t1);
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.$$lt(t2, t4.$add(position, 5)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$JSString(t1);
        t3 = t2.charCodeAt$1(t1, t4.$add(position, 1));
      case 3:
        state0 = 0;
      default:
        if (state0 === 6 || state0 === 5 || state0 === 4 || state0 === 0 && $.$$eq(t3, 97) === true)
          switch (state0) {
            case 0:
              t3 = t2.charCodeAt$1(t1, t4.$add(position, 2));
            case 4:
              state0 = 0;
            default:
              if (state0 === 6 || state0 === 5 || state0 === 0 && $.$$eq(t3, 108) === true)
                switch (state0) {
                  case 0:
                    t3 = t2.charCodeAt$1(t1, t4.$add(position, 3));
                  case 5:
                    state0 = 0;
                  case 6:
                    if (state0 === 6 || state0 === 0 && $.$$eq(t3, 115) === true)
                      switch (state0) {
                        case 0:
                          t1 = t2.charCodeAt$1(t1, t4.$add(position, 4));
                        case 6:
                          state0 = 0;
                          t3 = $.$$eq(t1, 101) !== true;
                          t1 = t3;
                      }
                    else
                      t1 = true;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          this.fail$1(position);
        this.listener.handleBool$1(false);
        return t4.$add(position, 5);
    }
  },
  parseNull$1: function(position) {
    var t1, t2, t4, t3;
    if (typeof position !== "number")
      return this.parseNull$1$bailout(1, position);
    t1 = this.source;
    t2 = $.length(t1);
    t4 = position + 4;
    if (typeof t2 !== "number")
      return this.parseNull$1$bailout(2, position, t1, t2);
    if (t2 < t4)
      this.fail$2(position, "Unexpected identifier");
    t2 = $.getInterceptor$JSString(t1);
    t3 = t2.charCodeAt$1(t1, position + 1);
    if (typeof t3 !== "number")
      return this.parseNull$1$bailout(3, position, t1, t2, $.CONSTANT4, t3);
    if (t3 === 117) {
      t3 = t2.charCodeAt$1(t1, position + 2);
      if (typeof t3 !== "number")
        return this.parseNull$1$bailout(4, position, t1, t2, $.CONSTANT4, t3);
      if (t3 === 108) {
        t1 = t2.charCodeAt$1(t1, position + 3);
        if (typeof t1 !== "number")
          return this.parseNull$1$bailout(5, position, t1, null, $.CONSTANT4);
        t3 = !(t1 === 108);
        t1 = t3;
      } else
        t1 = true;
    } else
      t1 = true;
    if (t1)
      this.fail$1(position);
    this.listener.handleNull$0();
    return t4;
  },
  parseNull$1$bailout: function(state0, position, t1, t2, t4, t3) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t1 = this.source;
        t2 = $.length(t1);
      case 2:
        state0 = 0;
        t4 = $.getInterceptor$JSNumber(position);
        if ($.$$lt(t2, t4.$add(position, 4)) === true)
          this.fail$2(position, "Unexpected identifier");
        t2 = $.getInterceptor$JSString(t1);
        t3 = t2.charCodeAt$1(t1, t4.$add(position, 1));
      case 3:
        state0 = 0;
      default:
        if (state0 === 5 || state0 === 4 || state0 === 0 && $.$$eq(t3, 117) === true)
          switch (state0) {
            case 0:
              t3 = t2.charCodeAt$1(t1, t4.$add(position, 2));
            case 4:
              state0 = 0;
            case 5:
              if (state0 === 5 || state0 === 0 && $.$$eq(t3, 108) === true)
                switch (state0) {
                  case 0:
                    t1 = t2.charCodeAt$1(t1, t4.$add(position, 3));
                  case 5:
                    state0 = 0;
                    t3 = $.$$eq(t1, 108) !== true;
                    t1 = t3;
                }
              else
                t1 = true;
          }
        else
          t1 = true;
        if (t1)
          this.fail$1(position);
        this.listener.handleNull$0();
        return t4.$add(position, 4);
    }
  },
  parseString$1: function(position) {
    var t1, t2, t3, t4, position0, t5, $char, t6, chars, hexStart, value, i, value0, char0, t7, result;
    t1 = this.source;
    t2 = $.getInterceptor$JSString(t1);
    t3 = $.getInterceptor$JSNumber(position);
    t4 = $.getInterceptor$JSStringJSArray(t1);
    position0 = position;
    do {
      t5 = $.getInterceptor(position0);
      if (t5.$eq(position0, t4.get$length(t1)) === true)
        this.fail$2(t3.$sub(position, 1), "Unterminated string");
      $char = t2.charCodeAt$1(t1, position0);
      t6 = $.getInterceptor($char);
      if (t6.$eq($char, 34) === true) {
        this.listener.handleString$1(t2.substring$2(t1, position, position0));
        return t5.$add(position0, 1);
      }
      if (t6.$lt($char, 32) === true)
        this.fail$2(position0, "Control character in string");
      position0 = t5.$add(position0, 1);
    } while (t6.$eq($char, 92) !== true);
    t5 = $.$$sub(position0, 1);
    chars = [];
    for (; true;) {
      t6 = $.getInterceptor(position0);
      if (t6.$eq(position0, t4.get$length(t1)) === true)
        this.fail$2(t3.$sub(position, 1), "Unterminated string");
      $char = t2.charCodeAt$1(t1, position0);
      switch ($char) {
        case 98:
          $char = 8;
          break;
        case 102:
          $char = 12;
          break;
        case 110:
          $char = 10;
          break;
        case 114:
          $char = 13;
          break;
        case 116:
          $char = 9;
          break;
        case 47:
        case 92:
        case 34:
          break;
        case 117:
          hexStart = t6.$sub(position0, 1);
          for (value = 0, i = 0; i < 4; ++i) {
            position0 = $.$$add(position0, 1);
            if ($.$$eq(position0, t4.get$length(t1)) === true)
              this.fail$2(t3.$sub(position, 1), "Unterminated string");
            $char = $.$$sub(t2.charCodeAt$1(t1, position0), 48);
            t6 = $.getInterceptor$JSNumber($char);
            if (t6.$lt($char, 0) === true)
              this.fail$2(hexStart, "Invalid unicode escape");
            if (t6.$lt($char, 10) === true) {
              if (typeof $char !== "number")
                throw $.iae($char);
              value0 = value * 16 + $char;
              value = value0;
            } else {
              char0 = $.$$sub(t6.$or($char, 32), 49);
              t6 = $.getInterceptor$JSNumber(char0);
              if (t6.$lt(char0, 0) === true || t6.$gt(char0, 5) === true)
                this.fail$2(hexStart, "Invalid unicode escape");
              if (typeof char0 !== "number")
                throw $.iae(char0);
              value0 = value * 16 + char0 + 10;
              value = value0;
            }
          }
          $char = value;
          break;
        default:
          if ($.$$lt($char, 32) === true)
            this.fail$2(position0, "Control character in string");
          this.fail$2(position0, "Unrecognized string escape");
      }
      do {
        chars.push($char);
        position0 = $.$$add(position0, 1);
        t6 = $.getInterceptor(position0);
        if (t6.$eq(position0, t4.get$length(t1)) === true)
          this.fail$2(t3.$sub(position, 1), "Unterminated string");
        $char = t2.charCodeAt$1(t1, position0);
        t7 = $.getInterceptor($char);
        if (t7.$eq($char, 34) === true) {
          result = $.String_String$fromCharCodes(chars);
          if (t3.$lt(position, t5) === true)
            result = $.S(t2.substring$2(t1, position, t5)) + $.S(result);
          this.listener.handleString$1(result);
          return t6.$add(position0, 1);
        }
        if (t7.$lt($char, 32) === true)
          this.fail$2(position0, "Control character in string");
      } while (t7.$eq($char, 92) !== true);
      position0 = t6.$add(position0, 1);
    }
  },
  parseNumber$2: function($char, position) {
    var t1, t2, t3, position0, t4, t5;
    t1 = {};
    if (typeof $char !== "number")
      return this.parseNumber$2$bailout(1, $char, position, t1);
    if (typeof position !== "number")
      return this.parseNumber$2$bailout(1, $char, position, t1);
    t2 = this.source;
    t3 = $.length(t2);
    t1.isDouble_0 = false;
    if ($char === 45) {
      position0 = position + 1;
      if (position0 === t3)
        this.fail$2(position0, "Missing expected digit");
      t4 = $.charCodeAt(t2, position0);
      if (typeof t4 !== "number")
        return this.parseNumber$2$bailout(2, null, position, t1, t4, t2, t3, position0);
      $char = t4;
    } else
      position0 = position;
    if ($char < 48 || $char > 57)
      this.fail$2(position0, "Missing expected digit");
    t4 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
    if ($char === 48) {
      position = position0 + 1;
      if (position === t3)
        return t4.call$1(position);
      t5 = $.charCodeAt(t2, position);
      if (typeof t5 !== "number")
        return this.parseNumber$2$bailout(3, null, position, t1, t5, t2, t3, null, t4);
      if (48 <= t5 && t5 <= 57)
        this.fail$1(position);
      $char = t5;
    } else {
      t5 = $.getInterceptor$JSString(t2);
      position = position0;
      do {
        ++position;
        if (position === t3)
          return t4.call$1(position);
        $char = t5.charCodeAt$1(t2, position);
        if (typeof $char !== "number")
          return this.parseNumber$2$bailout(4, $char, position, t1, t5, t2, t3, null, t4);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 46) {
      t1.isDouble_0 = true;
      ++position;
      if (position === t3)
        this.fail$2(position, "Missing expected digit");
      t5 = $.getInterceptor$JSString(t2);
      $char = t5.charCodeAt$1(t2, position);
      if (typeof $char !== "number")
        return this.parseNumber$2$bailout(5, $char, position, t1, t5, t2, t3, null, t4);
      if ($char < 48 || $char > 57)
        this.fail$1(position);
      do {
        ++position;
        if (position === t3)
          return t4.call$1(position);
        $char = t5.charCodeAt$1(t2, position);
        if (typeof $char !== "number")
          return this.parseNumber$2$bailout(6, $char, position, t1, t5, t2, t3, null, t4);
      } while (48 <= $char && $char <= 57);
    }
    if ($char === 101 || $char === 69) {
      t1.isDouble_0 = true;
      ++position;
      if (position === t3)
        this.fail$2(position, "Missing expected digit");
      t1 = $.getInterceptor$JSString(t2);
      $char = t1.charCodeAt$1(t2, position);
      if (typeof $char !== "number")
        return this.parseNumber$2$bailout(7, $char, position, $.CONSTANT4, t1, t2, t3, null, t4);
      if ($char === 43 || $char === 45) {
        ++position;
        if (position === t3)
          this.fail$2(position, "Missing expected digit");
        $char = t1.charCodeAt$1(t2, position);
        if (typeof $char !== "number")
          return this.parseNumber$2$bailout(8, $char, position, null, t1, t2, t3, null, t4);
      }
      if ($char < 48 || $char > 57)
        this.fail$2(position, "Missing expected digit");
      do {
        ++position;
        if (position === t3)
          return t4.call$1(position);
        $char = t1.charCodeAt$1(t2, position);
        if (typeof $char !== "number")
          return this.parseNumber$2$bailout(9, $char, position, null, t1, t2, t3, null, t4);
      } while (48 <= $char && $char <= 57);
    }
    return t4.call$1(position);
  },
  parseNumber$2$bailout: function(state0, $char, position, t1, t4, t2, t3, position0, t5) {
    switch (state0) {
      case 0:
        t1 = {};
      case 1:
        state0 = 0;
        t2 = this.source;
        t3 = $.length(t2);
        t1.isDouble_0 = false;
      case 2:
        if (state0 === 2 || state0 === 0 && $.$$eq($char, 45) === true)
          switch (state0) {
            case 0:
              position0 = $.$$add(position, 1);
              if ($.$$eq(position0, t3) === true)
                this.fail$2(position0, "Missing expected digit");
              t4 = $.charCodeAt(t2, position0);
            case 2:
              state0 = 0;
              $char = t4;
          }
        else
          position0 = position;
        t4 = $.getInterceptor$JSNumber($char);
        if (t4.$lt($char, 48) === true || t4.$gt($char, 57) === true)
          this.fail$2(position0, "Missing expected digit");
        t5 = new $.JsonParser_parseNumber_handleLiteral(t1, this, position);
      default:
        if (state0 === 3 || state0 === 0 && t4.$eq($char, 48) === true)
          switch (state0) {
            case 0:
              position = $.$$add(position0, 1);
              if ($.$$eq(position, t3) === true)
                return t5.call$1(position);
              t4 = $.charCodeAt(t2, position);
            case 3:
              state0 = 0;
              if ($.CONSTANT2.$le(48, t4) && $.$$le(t4, 57) === true)
                this.fail$1(position);
              $char = t4;
          }
        else
          switch (state0) {
            case 0:
              t4 = $.getInterceptor$JSString(t2);
              position = position0;
            case 4:
              L0:
                while (true)
                  switch (state0) {
                    case 0:
                      position = $.$$add(position, 1);
                      if ($.$$eq(position, t3) === true)
                        return t5.call$1(position);
                      $char = t4.charCodeAt$1(t2, position);
                    case 4:
                      state0 = 0;
                      if (!($.CONSTANT2.$le(48, $char) && $.$$le($char, 57) === true))
                        break L0;
                  }
          }
      case 5:
      case 6:
        if (state0 === 6 || state0 === 5 || state0 === 0 && $.$$eq($char, 46) === true)
          switch (state0) {
            case 0:
              t1.isDouble_0 = true;
              position = $.$$add(position, 1);
              if ($.$$eq(position, t3) === true)
                this.fail$2(position, "Missing expected digit");
              t4 = $.getInterceptor$JSString(t2);
              $char = t4.charCodeAt$1(t2, position);
            case 5:
              state0 = 0;
              t6 = $.getInterceptor$JSNumber($char);
              if (t6.$lt($char, 48) === true || t6.$gt($char, 57) === true)
                this.fail$1(position);
            case 6:
              L1:
                while (true)
                  switch (state0) {
                    case 0:
                      position = $.$$add(position, 1);
                      if ($.$$eq(position, t3) === true)
                        return t5.call$1(position);
                      $char = t4.charCodeAt$1(t2, position);
                    case 6:
                      state0 = 0;
                      if (!($.CONSTANT2.$le(48, $char) && $.$$le($char, 57) === true))
                        break L1;
                  }
          }
        t4 = $.getInterceptor($char);
      case 7:
      case 8:
      case 9:
        var t6;
        if (state0 === 9 || state0 === 8 || state0 === 7 || state0 === 0 && (t4.$eq($char, 101) === true || t4.$eq($char, 69) === true))
          switch (state0) {
            case 0:
              t1.isDouble_0 = true;
              position = $.$$add(position, 1);
              t1 = $.getInterceptor(position);
              if (t1.$eq(position, t3) === true)
                this.fail$2(position, "Missing expected digit");
              t4 = $.getInterceptor$JSString(t2);
              $char = t4.charCodeAt$1(t2, position);
            case 7:
              state0 = 0;
              t6 = $.getInterceptor($char);
            case 8:
              if (state0 === 8 || state0 === 0 && (t6.$eq($char, 43) === true || t6.$eq($char, 45) === true))
                switch (state0) {
                  case 0:
                    position = t1.$add(position, 1);
                    if ($.$$eq(position, t3) === true)
                      this.fail$2(position, "Missing expected digit");
                    $char = t4.charCodeAt$1(t2, position);
                  case 8:
                    state0 = 0;
                }
              t1 = $.getInterceptor$JSNumber($char);
              if (t1.$lt($char, 48) === true || t1.$gt($char, 57) === true)
                this.fail$2(position, "Missing expected digit");
            case 9:
              L2:
                while (true)
                  switch (state0) {
                    case 0:
                      position = $.$$add(position, 1);
                      if ($.$$eq(position, t3) === true)
                        return t5.call$1(position);
                      $char = t4.charCodeAt$1(t2, position);
                    case 9:
                      state0 = 0;
                      if (!($.CONSTANT2.$le(48, $char) && $.$$le($char, 57) === true))
                        break L2;
                  }
          }
        return t5.call$1(position);
    }
  },
  fail$2: function(position, message) {
    var t1, t2, t3, t5, slice;
    if (typeof position !== "number")
      return this.fail$2$bailout(1, position, message);
    if (typeof message !== "string")
      return this.fail$2$bailout(1, position, message);
    t1 = this.listener;
    t2 = this.source;
    t1.fail$3(t2, position, message);
    t1 = position + 20;
    t3 = $.length(t2);
    if (typeof t3 !== "number")
      return this.fail$2$bailout(2, position, null, t2, t1, t3);
    t5 = $.getInterceptor$JSString(t2);
    slice = t1 > t3 ? "'" + $.S(t5.substring$1(t2, position)) + "'" : "'" + $.S(t5.substring$2(t2, position, t1)) + "...'";
    throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
  },
  fail$2$bailout: function(state0, position, message, t2, t1, t3) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        if (message == null)
          message = "Unexpected character";
        t1 = this.listener;
        t2 = this.source;
        t1.fail$3(t2, position, message);
        t1 = $.$$add(position, 20);
        t3 = $.length(t2);
      case 2:
        var t5, slice;
        state0 = 0;
        t5 = $.getInterceptor$JSString(t2);
        slice = $.$$gt(t1, t3) === true ? "'" + $.S(t5.substring$1(t2, position)) + "'" : "'" + $.S(t5.substring$2(t2, position, t1)) + "...'";
        throw $.$$throw($.FormatException$("Unexpected character at " + $.S(position) + ": " + slice));
    }
  },
  fail$1: function(position) {
    return this.fail$2(position, null);
  }
};

$$._JsonStringifier = {"": "Object;sb>,seen",
  checkCycle$1: function(object) {
    var t1, t2, i, t3;
    for (t1 = this.seen, t2 = t1.length, i = 0; i < t2; ++i) {
      t3 = t1[i];
      if (t3 == null ? object == null : t3 === object)
        throw $.$$throw("Cyclic structure");
    }
    t1.push(object);
  },
  stringifyValue$1: function(object) {
    var customJson, e, t1, exception;
    if (this.stringifyJsonValue$1(object) !== true) {
      this.checkCycle$1(object);
      try {
        customJson = object.toJson$0();
        if (this.stringifyJsonValue$1(customJson) !== true)
          throw $.$$throw($.JsonUnsupportedObjectError$(object));
        t1 = this.seen;
        if (0 >= t1.length)
          throw $.ioore(0);
        t1.pop();
      } catch (exception) {
        t1 = $.unwrapException(exception);
        e = t1;
        throw $.$$throw($.JsonUnsupportedObjectError$withCause(object, e));
      }

    }
  },
  stringifyJsonValue$1: function(object) {
    var t1, t2, t3, i;
    t1 = {};
    if (typeof object === "number") {
      $.add(this.sb, $.CONSTANT4.toString$0(object));
      return true;
    } else if (object === true) {
      $.add(this.sb, "true");
      return true;
    } else if (object === false) {
      $.add(this.sb, "false");
      return true;
    } else if (object == null) {
      $.add(this.sb, "null");
      return true;
    } else if (typeof object === "string") {
      t1 = this.sb;
      t2 = $.getInterceptor$JSArray(t1);
      t2.add$1(t1, "\"");
      $._JsonStringifier_escape(t1, object);
      t2.add$1(t1, "\"");
      return true;
    } else if (typeof object === "object" && object !== null && (object.constructor === Array || object.$isList())) {
      if (typeof object !== "object" || object === null || object.constructor !== Array && !object.$isJavaScriptIndexingBehavior())
        return this.stringifyJsonValue$1$bailout(1, object);
      this.checkCycle$1(object);
      t2 = this.sb;
      t3 = $.getInterceptor$JSArray(t2);
      t3.add$1(t2, "[");
      if (object.length > 0) {
        this.stringifyValue$1(object[0]);
        for (i = 1; i < object.length; ++i) {
          t3.add$1(t2, ",");
          if (i >= object.length)
            throw $.ioore(i);
          this.stringifyValue$1(object[i]);
        }
      }
      t3.add$1(t2, "]");
      t1 = this.seen;
      if (0 >= t1.length)
        throw $.ioore(0);
      t1.pop();
      return true;
    } else if (typeof object === "object" && object !== null && object.$isMap()) {
      this.checkCycle$1(object);
      t2 = this.sb;
      t3 = $.getInterceptor$JSArray(t2);
      t3.add$1(t2, "{");
      t1.first_0 = true;
      object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
      t3.add$1(t2, "}");
      t2 = this.seen;
      if (0 >= t2.length)
        throw $.ioore(0);
      t2.pop();
      return true;
    } else
      return false;
  },
  stringifyJsonValue$1$bailout: function(state0, object) {
    switch (state0) {
      case 0:
        t1 = {};
      case 1:
        var t1, t2, t3, i;
        if (state0 === 0 && typeof object === "number") {
          $.add(this.sb, $.CONSTANT4.toString$0(object));
          return true;
        } else
          switch (state0) {
            case 0:
            case 1:
              if (state0 === 0 && object === true) {
                $.add(this.sb, "true");
                return true;
              } else
                switch (state0) {
                  case 0:
                  case 1:
                    if (state0 === 0 && object === false) {
                      $.add(this.sb, "false");
                      return true;
                    } else
                      switch (state0) {
                        case 0:
                        case 1:
                          if (state0 === 0 && object == null) {
                            $.add(this.sb, "null");
                            return true;
                          } else
                            switch (state0) {
                              case 0:
                              case 1:
                                if (state0 === 0 && typeof object === "string") {
                                  t1 = this.sb;
                                  t2 = $.getInterceptor$JSArray(t1);
                                  t2.add$1(t1, "\"");
                                  $._JsonStringifier_escape(t1, object);
                                  t2.add$1(t1, "\"");
                                  return true;
                                } else
                                  switch (state0) {
                                    case 0:
                                    case 1:
                                      if (state0 === 1 || state0 === 0 && typeof object === "object" && object !== null && (object.constructor === Array || object.$isList()))
                                        switch (state0) {
                                          case 0:
                                          case 1:
                                            state0 = 0;
                                            this.checkCycle$1(object);
                                            t2 = this.sb;
                                            t3 = $.getInterceptor$JSArray(t2);
                                            t3.add$1(t2, "[");
                                            t1 = $.getInterceptor$JSStringJSArray(object);
                                            if ($.$$gt(t1.get$length(object), 0) === true) {
                                              this.stringifyValue$1(t1.$index(object, 0));
                                              for (i = 1; $.CONSTANT2.$lt(i, t1.get$length(object)); ++i) {
                                                t3.add$1(t2, ",");
                                                this.stringifyValue$1(t1.$index(object, i));
                                              }
                                            }
                                            t3.add$1(t2, "]");
                                            t1 = this.seen;
                                            if (0 >= t1.length)
                                              throw $.ioore(0);
                                            t1.pop();
                                            return true;
                                        }
                                      else if (typeof object === "object" && object !== null && object.$isMap()) {
                                        this.checkCycle$1(object);
                                        t2 = this.sb;
                                        t3 = $.getInterceptor$JSArray(t2);
                                        t3.add$1(t2, "{");
                                        t1.first_0 = true;
                                        object.forEach$1(new $._JsonStringifier_stringifyJsonValue_anon(t1, this));
                                        t3.add$1(t2, "}");
                                        t2 = this.seen;
                                        if (0 >= t2.length)
                                          throw $.ioore(0);
                                        t2.pop();
                                        return true;
                                      } else
                                        return false;
                                  }
                            }
                      }
                }
          }
    }
  }
};

$$.EgbSavegame0 = {"": "Object;currentPageName>,pageMapState>,vars>,textHistory,uid>,timestamp",
  toMessage$1: function(type) {
    var message;
    if (type !== 512 && type !== 1024)
      throw $.$$throw("Cannot create EgbMessage of type " + $.S(type) + ". Can only be MSG_SAVE_GAME " + "(" + $.S(512) + ") or MSG_LOAD_GAME " + "(" + $.S(1024) + ").");
    message = $.EgbMessage$0(type);
    message.strContent = this.toJson$0();
    return message;
  },
  toJson$0: function() {
    var saveMap, t1, t2;
    saveMap = $.Map_Map();
    t1 = $.getInterceptor$JSArray(saveMap);
    t1.$indexSet(saveMap, "uid", this.uid);
    t1.$indexSet(saveMap, "currentPageName", this.currentPageName);
    t1.$indexSet(saveMap, "pageMapState", this.pageMapState);
    t1.$indexSet(saveMap, "vars", this.vars);
    t1.$indexSet(saveMap, "timestamp", this.timestamp);
    t2 = this.textHistory;
    if (!(t2 == null))
      t1.$indexSet(saveMap, "previousText", t2);
    return $._JsonStringifier_stringify(saveMap);
  },
  toString$0: function() {
    return this.toJson$0();
  },
  EgbSavegame$fromJson$1: function(json) {
    var saveMap, t1;
    saveMap = $.parse(json, null);
    if (saveMap.containsKey$1("currentPageName") !== true || saveMap.containsKey$1("vars") !== true)
      throw $.$$throw("Invalid JSON for EgbSavegame. Doesn't contain required fields 'currentPageName' or 'vars'. JSON='" + $.S(json) + "'.");
    t1 = $.getInterceptor$JSStringJSArray(saveMap);
    this.uid = t1.$index(saveMap, "uid");
    this.currentPageName = t1.$index(saveMap, "currentPageName");
    this.timestamp = t1.$index(saveMap, "timestamp");
    this.pageMapState = t1.$index(saveMap, "pageMapState");
    this.vars = t1.$index(saveMap, "vars");
    if (saveMap.containsKey$1("previousText") === true)
      this.textHistory = t1.$index(saveMap, "previousText");
  }
};

$$.EgbPlayerProfile = {"": "Object;PREFERENCES_KEY,playerUid,currentEgamebookUid<,preferences<,savegamesChronology<,_storage,_maxSaves",
  close$0: function() {
    var t1 = this.savegamesChronology;
    if (!(t1 == null))
      this._save$2("_chronology", $._JsonStringifier_stringify($.toList(t1)));
    this._savePreferences$0();
  },
  _savePreferences$0: function() {
    return this._storage.save$2(this.playerUid + "::" + this.PREFERENCES_KEY, $._JsonStringifier_stringify(this.preferences));
  },
  _loadPreferences$0: function() {
    var completer = $.Completer_Completer();
    this._storage.load$1(this.playerUid + "::" + this.PREFERENCES_KEY).then$1(new $.EgbPlayerProfile__loadPreferences_anon(this, completer));
    return completer.get$future();
  },
  get$maxSaves: function() {
    return this._maxSaves;
  },
  _save$2: function(key, value) {
    if (this.currentEgamebookUid == null)
      throw $.$$throw("currentEgamebookUid not set");
    return this._storage.save$2(this.playerUid + "::" + $.S(this.currentEgamebookUid) + "::" + $.S(key), value);
  },
  _load$1: function(key) {
    if (this.currentEgamebookUid == null)
      throw $.$$throw("currentEgamebookUid not set");
    return this._storage.load$1(this.playerUid + "::" + $.S(this.currentEgamebookUid) + "::" + $.S(key));
  },
  _delete$1: function(key) {
    if (this.currentEgamebookUid == null)
      throw $.$$throw("currentEgamebookUid not set");
    return this._storage.delete$1(this.playerUid + "::" + $.S(this.currentEgamebookUid) + "::" + $.S(key));
  },
  _loadChronology$0: function() {
    return this._load$1("_chronology").then$1(new $.EgbPlayerProfile__loadChronology_anon(this));
  },
  save$1: function(savegame) {
    var t1, completer;
    t1 = this.savegamesChronology;
    if (t1 == null) {
      completer = $.Completer_Completer();
      this._loadChronology$0().then$1(new $.EgbPlayerProfile_save_anon(this, savegame, completer));
      return completer.get$future();
    }
    if ($.$$gt($.length(t1), this.get$maxSaves()) === true)
      this._delete$1(this.savegamesChronology.removeFirst$0());
    $.addLast(this.savegamesChronology, savegame.get$uid());
    this._save$2("_chronology", $._JsonStringifier_stringify($.toList(this.savegamesChronology)));
    return this._save$2(savegame.get$uid(), savegame.toJson$0());
  },
  load$1: function(uid) {
    var completer = $.Completer_Completer();
    this._load$1(uid).then$1(new $.EgbPlayerProfile_load_anon(completer));
    return completer.get$future();
  },
  loadMostRecent$0: function() {
    var t1, completer;
    t1 = this.savegamesChronology;
    if (t1 == null) {
      completer = $.Completer_Completer();
      this._loadChronology$0().then$1(new $.EgbPlayerProfile_loadMostRecent_anon(this, completer));
      return completer.get$future();
    }
    if ($.isEmpty(t1) === true)
      return $.Future_Future$immediate(null);
    return this.load$1($.last(this.savegamesChronology));
  },
  EgbPlayerProfile$2: function(playerUid, _storage) {
    this._loadPreferences$0();
  }
};

$$.HtmlInterface = {"": "Object;restartAnchor,bookDiv>,currentChoicesDiv,_streamController>,_currentSavegame<",
  get$stream: function() {
    return this._streamController.stream;
  },
  setup$0: function() {
    this.restartAnchor = document.query$1("nav a#book-restart");
    this.restartAnchor.get$onClick().listen$1(new $.HtmlInterface_setup_anon(this));
    this.bookDiv = document.query$1("div#book-wrapper");
  },
  close$0: function() {
    this._streamController.close$0();
    var t1 = this.currentChoicesDiv;
    if (!(t1 == null))
      t1.remove$0();
  },
  showText$1: function(s) {
    var p = $.ParagraphElement_ParagraphElement();
    p.set$innerHtml(s);
    this.bookDiv.append$1(p);
    return $.Future_Future$immediate(true);
  },
  showChoices$1: function(choiceList) {
    var completer, choicesQuestionP, choicesOl, t1, i, choice, li, a;
    completer = $.Completer_Completer();
    if (!(choiceList.question == null)) {
      choicesQuestionP = $.ParagraphElement_ParagraphElement();
      choicesQuestionP.set$innerHtml(choiceList.question);
      $.add(choicesQuestionP.get$classes(), "choices-question");
      $.add(this.bookDiv.get$children(), choicesQuestionP);
    }
    choicesOl = $.OListElement_OListElement();
    $.add(choicesOl.get$classes(), "choices");
    if (!(this._currentSavegame == null)) {
      $.$$indexSet(choicesOl.get$dataAttributes(), "savegame-uid", this._currentSavegame.get$uid());
      this._currentSavegame = null;
      $.add(choicesOl.get$classes(), "savegame");
    }
    for (t1 = $.getInterceptor$JSStringJSArray(choiceList), i = 0; $.CONSTANT2.$lt(i, t1.get$length(choiceList)); ++i) {
      choice = choiceList.$index(i);
      li = $.Element_Element$tag("li");
      a = $.Element_Element$tag("a");
      a.set$innerHtml(choice.get$string());
      a.get$onClick().listen$1(new $.HtmlInterface_showChoices_anon(this, completer, choicesOl, choice, li));
      li.append$1(a);
      choicesOl.append$1(li);
    }
    this.bookDiv.append$1(choicesOl);
    return completer.get$future();
  },
  _makeIntoBookmark$1: function(choicesOl) {
    var t1;
    $.add(choicesOl.get$classes(), "past");
    $.forEach(choicesOl.get$children(), new $.HtmlInterface__makeIntoBookmark_anon());
    if (choicesOl.get$dataAttributes().containsKey$1("savegame-uid") === true) {
      t1 = $.$$index(choicesOl.get$dataAttributes(), "savegame-uid");
      choicesOl.get$onClick().listen$1(new $.HtmlInterface__makeIntoBookmark_anon0(this, choicesOl, t1));
    }
  },
  addSavegameBookmark$1: function(savegame) {
    this._currentSavegame = savegame;
  },
  HtmlInterface$0: function() {
    this._streamController = $.StreamController$(null, null);
  }
};

$$.LocalStorage = {"": "Object;",
  save$2: function(key, value) {
    $.$$indexSet(window.get$localStorage(), key, value);
    return $.Future_Future$immediate(true);
  },
  load$1: function(key) {
    return $.Future_Future$immediate($.$$index(window.get$localStorage(), key));
  },
  delete$1: function(key) {
    $.remove(window.get$localStorage(), key);
    return $.Future_Future$immediate(true);
  },
  getDefaultPlayerProfile$0: function() {
    return $.EgbPlayerProfile$("default", this);
  }
};

$$._ChildrenElementList = {"": "Object;_liblib$_element,_childElements",
  toList$0: function() {
    var t1, t3, output, len, i, t2;
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toList$0$bailout(1, t1);
    t3 = t1.length;
    output = $.List_List$fixedLength(t3, null);
    for (len = t1.length, i = 0; i < len; ++i) {
      t2 = t1[i];
      if (i >= t3)
        throw $.ioore(i);
      output[i] = t2;
    }
    return output;
  },
  toList$0$bailout: function(state0, t1, t3, len, output) {
    switch (state0) {
      case 0:
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        output = $.List_List$fixedLength(t3.get$length(t1), null);
        len = t3.get$length(t1);
      case 2:
        var i, t2;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT2.$lt(i, len); ++i) {
          t2 = t3.$index(t1, i);
          if (i >= output.length)
            throw $.ioore(i);
          output[i] = t2;
        }
        return output;
    }
  },
  toSet$0: function() {
    var output, t1, len, t3, i;
    output = $.Set_Set();
    t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.toSet$0$bailout(1, output, t1);
    len = t1.length;
    t3 = $.getInterceptor$JSArray(output);
    i = 0;
    for (; i < len; ++i) {
      if (i >= t1.length)
        throw $.ioore(i);
      t3.add$1(output, t1[i]);
    }
    return output;
  },
  toSet$0$bailout: function(state0, output, t1, len, t3) {
    switch (state0) {
      case 0:
        output = $.Set_Set();
        t1 = this._childElements;
      case 1:
        state0 = 0;
        t3 = $.getInterceptor$JSStringJSArray(t1);
        len = t3.get$length(t1);
      case 2:
        var t5, i;
        state0 = 0;
        t5 = $.getInterceptor$JSArray(output);
        i = 0;
        for (; $.CONSTANT2.$lt(i, len); ++i)
          t5.add$1(output, t3.$index(t1, i));
        return output;
    }
  },
  contains$1: function(element) {
    return $.contains0(this._childElements, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this._childElements); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  any$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  get$isEmpty: function() {
    return this._liblib$_element.firstElementChild == null;
  },
  get$length: function() {
    return $.length(this._childElements);
  },
  $index: function(index) {
    var t1 = this._childElements;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout2(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout2: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    var t1, t2;
    t1 = this._liblib$_element;
    t2 = this._childElements;
    if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
      return this.$$indexSet$bailout1(1, index, value, t1, t2);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t2.length)
      throw $.ioore(index);
    t1.$$dom_replaceChild$2(value, t2[index]);
  },
  $$indexSet$bailout1: function(state0, index, value, t1, t2) {
    t1.$$dom_replaceChild$2(value, $.$$index(t2, index));
  },
  set$length: function(newLength) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  add$1: function(value) {
    this._liblib$_element.$$dom_appendChild$1(value);
    return value;
  },
  addLast$1: function(value) {
    this._liblib$_element.$$dom_appendChild$1(value);
    return value;
  },
  get$iterator: function() {
    return $.iterator(this.toList$0());
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._liblib$_element; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  remove$1: function(object) {
    if (typeof object === "object" && object !== null && object.$isElement())
      if (object.parentNode === this)
        this._liblib$_element.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.Lists_getRange(this, start, rangeLength, []));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    this._liblib$_element.textContent = "";
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._liblib$_element.$$dom_removeChild$1(t1);
    return t1;
  },
  get$last: function() {
    var result = this._liblib$_element.lastElementChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementList = {"": "Object;_nodeList",
  contains$1: function(element) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if ($.$$eq(t1.get$current(), element) === true)
        return true;
    return false;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      if (f.call$1(t1.get$current()) === true)
        return true;
    return false;
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.isEmpty(this._nodeList);
  },
  get$length: function() {
    return $.length(this._nodeList);
  },
  $index: function(index) {
    var t1 = this._nodeList;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout5(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout5: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  set$length: function(newLength) {
    $.length0(this._nodeList, newLength);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$iterator: function() {
    return $._FrozenElementListIterator$(this);
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  getRange$2: function(start, rangeLength) {
    return $._FrozenElementList$_wrap($.getRange(this._nodeList, start, rangeLength));
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this._nodeList, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$(""));
  },
  remove$1: function(element) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$(""));
  },
  get$last: function() {
    return $.last(this._nodeList);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._FrozenElementListIterator = {"": "Object;_liblib$_list,_liblib$_index,_liblib$_current",
  moveNext$0: function() {
    var t1, t2, t3, t4;
    t1 = this._liblib$_index;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout2(1, t1);
    ++t1;
    t2 = this._liblib$_list;
    t3 = $.getInterceptor$JSStringJSArray(t2);
    t4 = t3.get$length(t2);
    if (typeof t4 !== "number")
      return this.moveNext$0$bailout2(2, t1, t2, t4, t3);
    if (t1 < t4) {
      this._liblib$_current = t2.$index(t1);
      this._liblib$_index = t1;
      return true;
    }
    this._liblib$_index = t3.get$length(t2);
    this._liblib$_current = null;
    return false;
  },
  moveNext$0$bailout2: function(state0, t1, t2, t4, t3) {
    switch (state0) {
      case 0:
        t1 = this._liblib$_index;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._liblib$_list;
        t3 = $.getInterceptor$JSStringJSArray(t2);
        t4 = t3.get$length(t2);
      case 2:
        state0 = 0;
        if ($.$$lt(t1, t4) === true) {
          this._liblib$_current = t2.$index(t1);
          this._liblib$_index = t1;
          return true;
        }
        this._liblib$_index = t3.get$length(t2);
        this._liblib$_current = null;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$._ElementCssClassSet = {"": "CssClassSet;_liblib$_element",
  readClasses$0: function() {
    var s, t1, t2, t3;
    s = $.Set_Set();
    for (t1 = $.iterator($.split(this._liblib$_element.className, " ")), t2 = $.getInterceptor$JSArray(s); t1.moveNext$0() === true;) {
      t3 = $.trim(t1.get$current());
      if ($.isEmpty(t3) !== true)
        t2.add$1(s, t3);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var t1;
    $.List_List$from(s);
    t1 = $.join(s, " ");
    this._liblib$_element.className = t1;
  }
};

$$._ChildNodeListLazy = {"": "Object;_this",
  get$last: function() {
    var result = this._this.lastChild;
    if (result == null)
      throw $.$$throw($.StateError$("No elements"));
    return result;
  },
  add$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addLast$1: function(value) {
    this._this.$$dom_appendChild$1(value);
  },
  addAll$1: function(iterable) {
    var t1, t2;
    for (t1 = $.iterator(iterable), t2 = this._this; t1.moveNext$0() === true;)
      t2.$$dom_appendChild$1(t1.get$current());
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      this._this.$$dom_removeChild$1(t1);
    return t1;
  },
  remove$1: function(object) {
    if (!(typeof object === "object" && object !== null && object.$isNode()))
      return;
    if (!(this === object.parentNode))
      return;
    this._this.$$dom_removeChild$1(object);
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  clear$0: function() {
    this._this.textContent = "";
  },
  $indexSet: function(index, value) {
    this._this.$$dom_replaceChild$2(value, this.$index(index));
  },
  get$iterator: function() {
    return $.iterator(this._this.childNodes);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout7(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout7: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  get$length: function() {
    return $.length(this._this.childNodes);
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot set length on immutable List."));
  },
  $index: function(index) {
    var t1 = this._this.childNodes;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout3(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout3: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._AttributeMap = {"": "Object;",
  clear$0: function() {
    for (var t1 = $.iterator(this.get$keys()); t1.moveNext$0() === true;)
      this.remove$1(t1.get$current());
  },
  forEach$1: function(f) {
    var t1, t2;
    for (t1 = $.iterator(this.get$keys()); t1.moveNext$0() === true;) {
      t2 = t1.get$current();
      f.call$2(t2, this.$index(t2));
    }
  },
  get$keys: function() {
    var attributes, keys, len, i;
    attributes = this._liblib$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.$isJavaScriptIndexingBehavior()))
      return this.get$keys$bailout(1, attributes);
    keys = $.List_List(0);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        keys.push(attributes[i].get$$$dom_localName());
      }
    }
    return keys;
  },
  get$keys$bailout: function(state0, attributes, t1, len, keys) {
    switch (state0) {
      case 0:
        attributes = this._liblib$_element.attributes;
      case 1:
        state0 = 0;
        keys = $.List_List(0);
        t1 = $.getInterceptor$JSStringJSArray(attributes);
        len = t1.get$length(attributes);
      case 2:
        var i;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT2.$lt(i, len); ++i)
          if (this._matches$1(t1.$index(attributes, i)) === true)
            keys.push(t1.$index(attributes, i).get$$$dom_localName());
        return keys;
    }
  },
  get$values: function() {
    var attributes, values, len, i;
    attributes = this._liblib$_element.attributes;
    if (typeof attributes !== "string" && (typeof attributes !== "object" || attributes === null || attributes.constructor !== Array && !attributes.$isJavaScriptIndexingBehavior()))
      return this.get$values$bailout(1, attributes);
    values = $.List_List(0);
    for (len = attributes.length, i = 0; i < len; ++i) {
      if (i >= attributes.length)
        throw $.ioore(i);
      if (this._matches$1(attributes[i]) === true) {
        if (i >= attributes.length)
          throw $.ioore(i);
        values.push(attributes[i].get$value());
      }
    }
    return values;
  },
  get$values$bailout: function(state0, attributes, t1, len, values) {
    switch (state0) {
      case 0:
        attributes = this._liblib$_element.attributes;
      case 1:
        state0 = 0;
        values = $.List_List(0);
        t1 = $.getInterceptor$JSStringJSArray(attributes);
        len = t1.get$length(attributes);
      case 2:
        var i;
        state0 = 0;
        i = 0;
        for (; $.CONSTANT2.$lt(i, len); ++i)
          if (this._matches$1(t1.$index(attributes, i)) === true)
            values.push(t1.$index(attributes, i).get$value());
        return values;
    }
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout8(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout8: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  $isMap: function() {
    return true;
  }
};

$$._ElementAttributeMap = {"": "_AttributeMap;_liblib$_element",
  containsKey$1: function(key) {
    return this._liblib$_element.$$dom_hasAttribute$1(key);
  },
  $index: function(key) {
    return this._liblib$_element.$$dom_getAttribute$1(key);
  },
  $indexSet: function(key, value) {
    this._liblib$_element.$$dom_setAttribute$2(key, $.S(value));
  },
  remove$1: function(key) {
    var t1, value;
    t1 = this._liblib$_element;
    value = t1.$$dom_getAttribute$1(key);
    t1.$$dom_removeAttribute$1(key);
    return value;
  },
  get$length: function() {
    return $.length(this.get$keys());
  },
  _matches$1: function(node) {
    return node.get$$$dom_namespaceUri() == null;
  }
};

$$._DataAttributeMap = {"": "Object;$$dom_attributes>",
  containsKey$1: function(key) {
    return this.$$dom_attributes.containsKey$1("data-" + $.S(key));
  },
  $index: function(key) {
    return $.$$index(this.$$dom_attributes, "data-" + $.S(key));
  },
  $indexSet: function(key, value) {
    $.$$indexSet(this.$$dom_attributes, "data-" + $.S(key), $.S(value));
  },
  remove$1: function(key) {
    return $.remove(this.$$dom_attributes, "data-" + $.S(key));
  },
  clear$0: function() {
    var t1, t2, t3;
    for (t1 = $.iterator(this.get$keys()), t2 = this.$$dom_attributes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.remove$1(t2, "data-" + $.S(t1.get$current()));
  },
  forEach$1: function(f) {
    $.forEach(this.$$dom_attributes, new $._DataAttributeMap_forEach_anon(this, f));
  },
  get$keys: function() {
    var keys = $.List_List(0);
    $.forEach(this.$$dom_attributes, new $._DataAttributeMap_keys_anon(this, keys));
    return keys;
  },
  get$values: function() {
    var values = $.List_List(0);
    $.forEach(this.$$dom_attributes, new $._DataAttributeMap_values_anon(this, values));
    return values;
  },
  get$length: function() {
    return $.length(this.get$keys());
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout9(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout9: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  _matches$1: function(key) {
    return $.startsWith(key, "data-");
  },
  $isMap: function() {
    return true;
  }
};

$$.CssClassSet = {"": "Object;",
  toString$0: function() {
    return $.Strings_join($.List_List$from(this.readClasses$0()), " ");
  },
  get$iterator: function() {
    return $.iterator(this.readClasses$0());
  },
  forEach$1: function(f) {
    $.forEach(this.readClasses$0(), f);
  },
  join$1: function(separator) {
    return $.join(this.readClasses$0(), separator);
  },
  where$1: function(f) {
    return $.where(this.readClasses$0(), f);
  },
  any$1: function(f) {
    return $.any(this.readClasses$0(), f);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.readClasses$0());
  },
  get$length: function() {
    return $.length(this.readClasses$0());
  },
  contains$1: function(value) {
    return $.contains0(this.readClasses$0(), value);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  add$1: function(value) {
    this._modify$1(new $.CssClassSet_add_anon(value));
  },
  remove$1: function(value) {
    var s, t1;
    if (!(typeof value === "string"))
      return false;
    s = this.readClasses$0();
    t1 = $.remove(s, value);
    this.writeClasses$1(s);
    return t1;
  },
  addAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_addAll_anon(iterable));
  },
  removeAll$1: function(iterable) {
    this._modify$1(new $.CssClassSet_removeAll_anon(iterable));
  },
  removeMatching$1: function(test) {
    this._modify$1(new $.CssClassSet_removeMatching_anon(test));
  },
  get$last: function() {
    return $.last(this.readClasses$0());
  },
  toList$0: function() {
    return $.toList(this.readClasses$0());
  },
  toSet$0: function() {
    return $.toSet(this.readClasses$0());
  },
  clear$0: function() {
    this._modify$1(new $.CssClassSet_clear_anon());
  },
  _modify$1: function(f) {
    var s = this.readClasses$0();
    f.call$1(s);
    this.writeClasses$1(s);
  },
  $isSet: true,
  $isCollection: function() {
    return true;
  }
};

$$._EventStream = {"": "Stream;_target,_eventType,_useCapture",
  listen$4$onDone$onError$unsubscribeOnError: function(onData, onDone, onError, unsubscribeOnError) {
    return $._EventStreamSubscription$(this._target, this._eventType, onData, this._useCapture);
  },
  listen$1: function(onData) {
    return this.listen$4$onDone$onError$unsubscribeOnError(onData, null, null, null);
  }
};

$$._EventStreamSubscription = {"": "StreamSubscription;_pauseCount,_target,_eventType,_onData,_useCapture",
  cancel$0: function() {
    if (this.get$_canceled() === true)
      throw $.$$throw($.StateError$("Subscription has been canceled."));
    var t1 = this._onData;
    if (!(t1 == null))
      this._target.$$dom_removeEventListener$3(this._eventType, t1, this._useCapture);
    this._target = null;
    this._onData = null;
  },
  get$_canceled: function() {
    return this._target == null;
  },
  get$_paused: function() {
    return this._pauseCount > 0;
  },
  _tryResume$0: function() {
    if (!(this._onData == null) && this.get$_paused() !== true)
      this._target.$$dom_addEventListener$3(this._eventType, this._onData, this._useCapture);
  },
  _EventStreamSubscription$4: function(_target, _eventType, _onData, _useCapture) {
    this._tryResume$0();
  }
};

$$.EventStreamProvider = {"": "Object;_eventType",
  forTarget$2$useCapture: function(e, useCapture) {
    return $._EventStream$(e, this._eventType, useCapture);
  },
  forTarget$1: function(e) {
    return this.forTarget$2$useCapture(e, false);
  }
};

$$._DOMWindowCrossFrame = {"": "Object;_window",
  close$0: function() {
    return this._window.close();
  }
};

$$.FixedSizeListIterator = {"": "Object;_array,_length,_position,_liblib$_current",
  moveNext$0: function() {
    var t1, t2;
    t1 = this._position;
    if (typeof t1 !== "number")
      return this.moveNext$0$bailout0(1, t1);
    ++t1;
    t2 = this._length;
    if (typeof t2 !== "number")
      return this.moveNext$0$bailout0(2, t1, t2);
    if (t1 < t2) {
      t2 = this._array;
      if (typeof t2 !== "string" && (typeof t2 !== "object" || t2 === null || t2.constructor !== Array && !t2.$isJavaScriptIndexingBehavior()))
        return this.moveNext$0$bailout0(3, t1, t2);
      if (t1 !== (t1 | 0))
        throw $.iae(t1);
      if (t1 < 0 || t1 >= t2.length)
        throw $.ioore(t1);
      this._liblib$_current = t2[t1];
      this._position = t1;
      return true;
    }
    this._liblib$_current = null;
    this._position = t2;
    return false;
  },
  moveNext$0$bailout0: function(state0, t1, t2) {
    switch (state0) {
      case 0:
        t1 = this._position;
      case 1:
        state0 = 0;
        t1 = $.$$add(t1, 1);
        t2 = this._length;
      case 2:
        state0 = 0;
      case 3:
        if (state0 === 3 || state0 === 0 && $.$$lt(t1, t2) === true)
          switch (state0) {
            case 0:
              t2 = this._array;
            case 3:
              state0 = 0;
              this._liblib$_current = $.$$index(t2, t1);
              this._position = t1;
              return true;
          }
        this._liblib$_current = null;
        this._position = t2;
        return false;
    }
  },
  get$current: function() {
    return this._liblib$_current;
  }
};

$$.FilteredElementList = {"": "Object;_node,_childNodes",
  get$_filtered: function() {
    return $.List_List$from($.where(this._childNodes, new $.FilteredElementList__filtered_anon()));
  },
  forEach$1: function(f) {
    $.forEach(this.get$_filtered(), f);
  },
  $indexSet: function(index, value) {
    this.$index(index).replaceWith$1(value);
  },
  set$length: function(newLength) {
    var t1, t2;
    t1 = $.length(this);
    t2 = $.getInterceptor$JSNumber(newLength);
    if (t2.$ge(newLength, t1) === true)
      return;
    else if (t2.$lt(newLength, 0) === true)
      throw $.$$throw($.ArgumentError$("Invalid list length"));
    this.removeRange$2(newLength, $.$$sub(t1, newLength));
  },
  join$1: function(separator) {
    return $.join(this.get$_filtered(), separator);
  },
  add$1: function(value) {
    $.add(this._childNodes, value);
  },
  addAll$1: function(iterable) {
    var t1, t2, t3;
    for (t1 = $.iterator(iterable), t2 = this._childNodes, t3 = $.getInterceptor$JSArray(t2); t1.moveNext$0() === true;)
      t3.add$1(t2, t1.get$current());
  },
  addLast$1: function(value) {
    $.add(this._childNodes, value);
  },
  contains$1: function(element) {
    return typeof element === "object" && element !== null && element.$isElement() && $.contains0(this._childNodes, element) === true;
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  removeRange$2: function(start, rangeLength) {
    $.forEach($.getRange(this.get$_filtered(), start, rangeLength), new $.FilteredElementList_removeRange_anon());
  },
  clear$0: function() {
    $.clear(this._childNodes);
  },
  removeLast$0: function() {
    var t1 = $.last(this);
    if (!(t1 == null))
      t1.remove$0();
    return t1;
  },
  where$1: function(f) {
    return $.where(this.get$_filtered(), f);
  },
  remove$1: function(element) {
    var t1, i, t2, indexElement;
    if (!(typeof element === "object" && element !== null && element.$isElement()))
      return;
    t1 = $.getInterceptor$JSStringJSArray(this);
    i = 0;
    while (true) {
      t2 = t1.get$length(this);
      if (typeof t2 !== "number")
        return this.remove$1$bailout(1, element, t2, i);
      if (!(i < t2))
        break;
      indexElement = this.$index(i);
      if (indexElement === element) {
        indexElement.remove$0();
        return;
      }
      ++i;
    }
  },
  remove$1$bailout: function(state0, element, t2, i) {
    switch (state0) {
      case 0:
        if (!(typeof element === "object" && element !== null && element.$isElement()))
          return;
        t1 = $.getInterceptor$JSStringJSArray(this);
        i = 0;
      case 1:
        var t1, indexElement;
        L0:
          while (true)
            switch (state0) {
              case 0:
                t2 = t1.get$length(this);
              case 1:
                state0 = 0;
                if (!$.CONSTANT2.$lt(i, t2))
                  break L0;
                indexElement = this.$index(i);
                if (indexElement === element) {
                  indexElement.remove$0();
                  return;
                }
                ++i;
            }
    }
  },
  removeAll$1: function(elements) {
    $.IterableMixinWorkaround_removeAll(this, elements);
  },
  removeMatching$1: function(test) {
    $.IterableMixinWorkaround_removeMatching(this, test);
  },
  any$1: function(f) {
    return $.any(this.get$_filtered(), f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    return $.isEmpty(this.get$_filtered());
  },
  get$length: function() {
    return $.length(this.get$_filtered());
  },
  $index: function(index) {
    var t1 = this.get$_filtered();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout4(1, index, t1);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout4: function(state0, index, t1) {
    return $.$$index(t1, index);
  },
  get$iterator: function() {
    return $.iterator(this.get$_filtered());
  },
  getRange$2: function(start, rangeLength) {
    return $.getRange(this.get$_filtered(), start, rangeLength);
  },
  indexOf$2: function(element, start) {
    return $.indexOf(this.get$_filtered(), element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    return $.last(this.get$_filtered());
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$._AttributeClassSet = {"": "CssClassSet;_liblib6$_element",
  readClasses$0: function() {
    var t1, s, t2, t3;
    t1 = $.$$index(this._liblib6$_element.get$attributes(), "class");
    s = $.Set_Set();
    if (t1 == null)
      return s;
    for (t2 = $.iterator($.split(t1, " ")), t3 = $.getInterceptor$JSArray(s); t2.moveNext$0() === true;) {
      t1 = $.trim(t2.get$current());
      if ($.isEmpty(t1) !== true)
        t3.add$1(s, t1);
    }
    return s;
  },
  writeClasses$1: function(s) {
    var list = $.List_List$from(s);
    $.$$indexSet(this._liblib6$_element.get$attributes(), "class", $.Strings_join(list, " "));
  }
};

$$.Points = {"": "Object;points>",
  add$2: function(value, text) {
    var t2 = this.points;
    if (typeof t2 !== "number")
      return this.add$2$bailout(2, value, t2);
    if (typeof value !== "number")
      return this.add$2$bailout(1, value);
    this.points = t2 + value;
  },
  add$2$bailout: function(state0, value, t2) {
    switch (state0) {
      case 0:
      case 1:
        state0 = 0;
        t2 = this.points;
      case 2:
        state0 = 0;
        this.points = $.$$add(t2, value);
    }
  },
  add$1: function(value) {
    return this.add$2(value, null);
  }
};

$$.ScripterImpl = {"": "EgbScripter;gamebookUid,pageMap,firstPage,currentPage,_nextPage,currentBlockIndex,choices,textBuffer,vars,_constructors,_interfacePort,_repeatBlockBit,_nextScriptStack",
  initBlock$0: function() {
    this.set$points($.Points$());
  },
  ScripterImpl$0: function() {
    this.pageMap = $.EgbScripterPageMap$();
    $.$$indexSet(this.pageMap, "Start: Funeral", $.EgbScripterPage$(["## The Funeral", "This story starts and ends with a death, on a spaceship. ", "The first death is that of Captain Kay. He was the second last surviving crew member on The Bodega. The ship used to carry twelve people. Now, it's only you. (Well, almost. But we'll get to that later.) ", "The funeral looks like this: You are standing in front of the airlock. Through the porthole, you can see the captain's body lying on the floor, naked and reddish and stiff. Just like all the others before him. Your hand is on the lever that will open the airlock's outside door. Through that door, once open, Captain Kay will be sucked out into space. This is how funerals work here on The Bodega. ", "The inner door, through which you're watching, is safely closed and sealed. The only thing that remains is to pull the lever.", [null, $.makeLiteralMap(["string", new $.anon0(), "goto", "Start: Pull"]), $.makeLiteralMap(["string", new $.anon1(), "goto", "Start: Leave body"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Pull", $.EgbScripterPage$(["You pull the lever, there's a loud hiss, and the body is immediately pulled out through the hatch. It starts receding into space while slowly rotating along all three axes.", new $.anon2(this), [null, $.makeLiteralMap(["goto", "Recollections"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Leave body", $.EgbScripterPage$(["You withdraw your hand from the lever.", new $.anon3(this), [null, $.makeLiteralMap(["goto", "Recollections"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Recollections", $.EgbScripterPage$(["Captain Kay was a great man. He was confident and direct \u2013 important traits in a captain. He also had a knack for hands-on engineering, which made him especially dear to you. You enjoyed spending a time with him in the engine room, poking into machinery together and setting up circuits in ingenious and clever ways. It always worked in the end, largely thanks to him.", "While you reminisce the good times, the intercom on the wall starts ringing loudly and blinking with a red light. The ringtone and the color-coding means \"to all crew\" -- in other words, everyone in their ability should pick it up.", [null, $.makeLiteralMap(["string", new $.anon4(), "goto", "Ignore"]), $.makeLiteralMap(["string", new $.anon5(), "goto", "Pick it up"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Ignore", $.EgbScripterPage$(["You decide to ignore ", "TODO: ship computer speaks over speakers", [null, $.makeLiteralMap(["goto", "Ship says"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Pick it up", $.EgbScripterPage$(["The intercom, in this case, is an old school handset wired to the wall with a spiral cable. It's easier to maintain, less faulty, and it only picks up one person's voice, so it's easier to understand the other end. It also makes it possible to have conversations that are meant for a limited audience, as opposed to everyone in the room. Sometimes, it's needed to break news that are not intended for the whole crew.", "The cable is there mostly so that the handset stays put where it belongs (but it does conduct the audio signal to and from the handset).", "You pick the handset up. It's the ship computer.", [null, $.makeLiteralMap(["goto", "Ship says"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Ship says", $.EgbScripterPage$(["\"To all whom it may concern,\" she says. \"There is a gorilla on the bridge. I repeat, a gorilla. On the bridge.\" ", [new $.anon6(), $.makeLiteralMap(["string", new $.anon7(), "goto", "Coming"]), $.makeLiteralMap(["string", new $.anon8(), "goto", "Can't this wait?"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Can't this wait?", $.EgbScripterPage$(["\"Oh, I'm sorry,\" the ship says. \"I didn't want to ruin the moment by, you know, _trying to stop another disaster from happening!_ The bridge, you might recall, is a place with lots of electronics and, interestingly, also the control panel to _the whole goddamned ship._ In summary, this is no place for a stupid gorilla.\" ", [null, $.makeLiteralMap(["string", new $.anon9(), "goto", "Coming"])]], false, false));
    $.$$indexSet(this.pageMap, "Start: Coming", $.EgbScripterPage$([new $.anon10(this), [null, $.makeLiteralMap(["goto", "Bridge: Gorilla incident"])]], false, false));
    $.$$indexSet(this.pageMap, "Bridge: Gorilla incident", $.EgbScripterPage$(["## The Gorilla", "There really is a gorilla on the bridge. But it isn't touching any of the electronics, let alone the control panel. It just sits there on the floor, full of melancholy, looking out the window on the stars. When you enter, it slowly turns to you and pushes out its huge lower lip. ", "It's your Enhanced Gorilla. They are used throughout the system for hard manual labor. Their intelligence is improved artificially -- they can understand basic spoken commands and they even have the ability to communicate back via sign language. A very limited kind of sign language, of course, with their vocabulary consisting mainly of the words \"food\", \"sleep\" and \"want\". But people don't need Enhanced Gorillas to be eloquent. They need them to lift and push and sometimes smash. _Your_ gorilla mostly carries extremely heavy fuel cells back and forth. ", "Your gorilla doesn't have a name. You call it 'Gorilla', as is common with these creatures. They die a lot. Nobody wants to get too attached to them, and naming the animal is the surest way to do just that.", "Gorilla raises its arms to sign. First, it makes the sign for \"me\" and then it makes the sign for \"sleep\". It probably doesn't want to say that it is sleeping. More likely, it is trying to use its limited vocabulary to communicate that it is sad. But you can never say for sure.", "\"The gorilla stays,\" you say to the ship computer. \"It just sits there. And it definitely won't touch anything while I'm here.\" ", "The ship is silent for a while. Then she chooses to ignore the topic entirely and moves on.", "TODO: instead of move to space station, initiate engine power on sequence", "\"I don't want to unnerve you, but considering that you are likely contaminated with the same illness as everyone else, and that we have no data on the incubation period, I assume you want to make it to the nearest dock as soon as possible. The engine is now back online, and Station Unity is twenty to fourty hours from here. All available energy to the engines?\" ", new $.anon11(this), [null, $.makeLiteralMap(["string", new $.anon12(), "goto", "Full speed"]), $.makeLiteralMap(["string", new $.anon13(), "goto", "Shields on"])]], false, false));
    $.$$indexSet(this.pageMap, "Bridge: Full speed", $.EgbScripterPage$(["Usually, the ship would remark on the clich\u00e9, but not today. Without words, she immediately shuts off the radar and the shields, then powers on the engine at 100%. You are accelerating at at full capacity in a matter of minutes.", new $.anon14(this), [null, $.makeLiteralMap(["goto", "A nap"])]], false, false));
    $.$$indexSet(this.pageMap, "Bridge: Shields on", $.EgbScripterPage$(["\"That is... considerate,\" the ship replies. \"I will be using the radar just to periodically check for objects on collision course with us. In between, I'll divert the energy to the engine. That should shave two or three hours off the travel time.\" You hear and feel the engines accelerating.", new $.anon15(this), [null, $.makeLiteralMap(["goto", "A nap"])]], false, false));
    $.$$indexSet(this.pageMap, "Bridge: A nap", $.EgbScripterPage$([new $.anon16(this), "Meanwhile, the rest of the crew were busy dying. One by one.", "You slouch into the captain's chair and, almost immediately, your eye lids get heavy. You try to stay up, but there is no way you can fight this. Soon, the most comfortable embrace of sleep puts you under.", "-----------------", "## The Encounter", new $.anon17(this)], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Radar reading", $.EgbScripterPage$([new $.anon18(this), "You wake up to regular bleeps of the radar. ", "\"I repeat,\" the ship says, quite urgently. \"We have a radar contact.\" ", "You look at the radar screen. It seems some smaller vessel is matching your course and speed, and is nearing rapidly. It doesn't seem like a pirate (those tend to fire before they show up on the radar, especially when they're this small and alone), but the behaviour is highly unusual. Who would want to get this close to another ship while travelling in deep space, without any previous communication?", "The good news is that because of the radar, you know about them in advance. You check your shields: they're up. You also start charging the laser cannon mounted on the front side of the ship. Better safe than sorry, you think.", new $.anon19(this), "In 20 minutes, the vessel is in visual range. It's a Messenger class ship, a fast clipper about tenth of the size of The Bodega. If it's hostile, it could still pose a serious threat, but would probably run a big risk itself.", "The ship glides to a halt in front of the bridge, face to face with The Bodega. After a while, the communications panel lights up. There is an incoming call from the Messenger. ", [null, $.makeLiteralMap(["goto", "Encounter"])]], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Wake up", $.EgbScripterPage$([new $.anon20(this), "You open your eyes, look out the window, and immediately jump up. There is a small -- though potentially dangerous -- ship right in front of the window, facing the Bodega. It's armed, but likely not a pirate, judging from the class of the ship (a Messenger, ten times smaller than the Bodega) and by the fact you're still alive.", "Before you can act, the communications panel lights up. There is an incoming call from the Messenger. Before you take it, you can either command the ship to raise the shields or to power up the laser gun on the nose of the Bodega. Doing both would take too much time to have any effect.", new $.anon21(this), [null, $.makeLiteralMap(["string", new $.anon22(), "script", new $.anon23(this)]), $.makeLiteralMap(["string", new $.anon24(), "script", new $.anon25(this)]), $.makeLiteralMap(["string", new $.anon26(), "script", new $.anon27(this)])], [null, $.makeLiteralMap(["goto", "Encounter"])]], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Encounter", $.EgbScripterPage$(["The screen fills with a large, bored face of a pilot with a large jaw and short hair. He's not even looking at the console, being busy with some controls to his lower left. ", "\"Calling crew of the Bodega,\" he starts reciting, absently. \"This is...\" ", "Then he looks up, sees you on the screen, and stops abruptly.", "\"Oh!\" ", "Gorilla, which has been silently sitting on the ground to your left until now, starts hissing through clenched teeth, eyes wide open. It rocks back and forth, visibly disturbed. The pilot begins to frantically push some buttons on the panel in front of him.", new $.anon28(this), new $.anon29(this), "The communications panel goes blank as the pilot closes the connection. The Messenger starts moving to the side while raising shields.", [null, $.makeLiteralMap(["goto", "Fire loop"])]], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Fire loop", $.EgbScripterPage$([new $.anon30(this), [null, $.makeLiteralMap(["goto", "Specials"])]], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Specials", $.EgbScripterPage$([new $.anon31(), [null, $.makeLiteralMap(["goto", "Resolve win/lose"])]], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Resolve win/lose", $.EgbScripterPage$([new $.anon32(this), [null, $.makeLiteralMap(["goto", "Fire loop"])]], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Lose", $.EgbScripterPage$([], false, false));
    $.$$indexSet(this.pageMap, "Dogfight: Win", $.EgbScripterPage$(["This time, your laser must have drilled through to the core, because there is a violent explosion on the Messenger. Only the skeleton of the ship stays put, the rest is blown away from the inside, in all directions.", new $.anon33(this), "One of those outward flying parts is different from the others, though. It steers itself. Apparently, the Messenger's pilot (or the ship computer) managed to launch a small robotic probe just before the spectacular explosion. The thing beelines through the flying debris and hits hard somewhere into the Bodega's cargo bay. ", "\"Hull breach,\" the ship says, laconically. ", new $.anon34(this)], false, false));
    this.firstPage = $.$$index(this.pageMap, "Start: Funeral");
  }
};

$$.EgbScripterPage = {"": "EgbPage;blocks>,visitCount=,name,visitOnce,showOnce",
  get$visited: function() {
    return $.$$gt(this.visitCount, 0);
  }
};

$$.EgbScripterPageMap = {"": "Object;pages>",
  $index: function(key) {
    var t1 = this.pages;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout6(1, t1, key);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    return t1[key];
  },
  $$index$bailout6: function(state0, t1, key) {
    return $.$$index(t1, key);
  },
  getPage$2$currentGroupName: function(name, currentGroupName) {
    if (!(currentGroupName == null) && this.pages.containsKey$1($.S(currentGroupName) + ": " + $.S(name)) === true)
      return $.$$index(this.pages, $.S(currentGroupName) + ": " + $.S(name));
    else if (this.pages.containsKey$1(name) === true)
      return $.$$index(this.pages, name);
    else
      return;
  },
  $indexSet: function(key, newPage) {
    var t1 = this.pages;
    if (typeof t1 !== "object" || t1 === null || (t1.constructor !== Array || !!t1.immutable$list) && !t1.$isJavaScriptIndexingBehavior())
      return this.$$indexSet$bailout2(1, key, newPage, t1);
    if (key !== (key | 0))
      throw $.iae(key);
    if (key < 0 || key >= t1.length)
      throw $.ioore(key);
    t1[key] = newPage;
    newPage.set$name(key);
  },
  $$indexSet$bailout2: function(state0, key, newPage, t1) {
    $.$$indexSet(t1, key, newPage);
    newPage.set$name(key);
  },
  exportState$0: function() {
    var pageMapState = $.Map_Map();
    $.forEach(this.pages, new $.EgbScripterPageMap_exportState_anon(pageMapState));
    return pageMapState;
  },
  importState$1: function(pageMapState) {
    $.forEach(pageMapState, new $.EgbScripterPageMap_importState_anon(this));
  },
  clearState$0: function() {
    $.forEach(this.pages, new $.EgbScripterPageMap_clearState_anon());
  },
  EgbScripterPageMap$0: function() {
    this.pages = $.Map_Map();
  }
};

$$.EgbScripter = {"": "Object;choices>,vars>",
  echo$1: function(str) {
    if ($.$$gt($.length(this.textBuffer), 0) === true)
      $.add(this.textBuffer, " ");
    $.add(this.textBuffer, str);
  },
  goto$1: function(dest) {
    this._nextPage = this.pageMap.getPage$2$currentGroupName(dest, this.currentPage.get$groupName());
    if (this._nextPage == null)
      throw $.$$throw("Function goto() called with an invalid argument '" + $.S(dest) + "'. " + "No such page.");
  },
  get$$goto: function() {
    return new $.BoundClosure(this, "goto$1");
  },
  repeatBlock$0: function() {
    this._repeatBlockBit = true;
  },
  choice$4: function(string, $goto, script, showNow) {
    var choice = $.EgbChoice$(string, $goto, script, showNow);
    $.add(this.choices, choice);
    return choice;
  },
  choice$1: function(string) {
    return this.choice$4(string, null, null, true);
  },
  _messageReceiveCallback$2: function(messageJson, replyTo) {
    var message, t1, t2;
    message = $.EgbMessage$fromJson(messageJson);
    "Received message from interface: " + $.S(message.type) + ".";
    this._interfacePort = replyTo;
    if ($.$$eq(message.type, 0) === true) {
      if ($.lazyPort == null)
        $.lazyPort = $.ReceivePort_ReceivePort();
      $.lazyPort.close$0();
    } else {
      t1 = $.$$eq(message.type, 2048);
      t2 = this._interfacePort;
      if (t1 === true) {
        t1 = $.EgbMessage$BookUid("DEFAULT_BOOK_UID").toJson$0();
        if ($.lazyPort == null)
          $.lazyPort = $.ReceivePort_ReceivePort();
        t2.send$2(t1, $.lazyPort.toSendPort$0());
      } else {
        t1 = this._goOneStep$1(message).toJson$0();
        if ($.lazyPort == null)
          $.lazyPort = $.ReceivePort_ReceivePort();
        t2.send$2(t1, $.lazyPort.toSendPort$0());
      }
    }
  },
  get$_messageReceiveCallback: function() {
    return new $.BoundClosure2(this, "_messageReceiveCallback$2");
  },
  _goOneStep$1: function(incomingMessage) {
    var t1 = {};
    if ($.$$eq(incomingMessage.type, 16) === true || $.$$eq(incomingMessage.type, 1024) === true) {
      this.currentBlockIndex = null;
      $.clear(this._nextScriptStack);
      $.clear(this.choices);
      this._initScriptEnvironment$0();
      this.pageMap.clearState$0();
    }
    if ($.$$eq(incomingMessage.type, 16) === true)
      this.currentPage = this.firstPage;
    if ($.$$eq(incomingMessage.type, 1024) === true) {
      $.print("load message: " + $.S(incomingMessage.strContent));
      this._loadFromSaveGameMessage$1(incomingMessage);
    }
    if ($.$$eq(incomingMessage.type, 128) === true) {
      t1.message_0 = null;
      $.forEach(this.choices, new $.EgbScripter__goOneStep_anon(t1, this, incomingMessage));
      t1 = t1.message_0;
      if (!(t1 == null))
        return t1;
      else
        return $.EgbMessage$NoResult();
    }
    if ($.isEmpty(this._nextScriptStack) !== true)
      return this._runScriptBlock$1$script($.removeLast(this._nextScriptStack));
    t1 = this._nextPage;
    if (!(t1 == null)) {
      this.currentPage = t1;
      this.currentBlockIndex = null;
      this._nextPage = null;
      $.clear(this.choices);
      return $.EgbMessage$NoResult();
    }
    t1 = this.currentBlockIndex;
    if (t1 == null) {
      if ($.$$eq(incomingMessage.type, 1024) === true)
        this.currentBlockIndex = $.$$sub($.length(this.currentPage.get$blocks()), 1);
      else
        this.currentBlockIndex = 0;
      t1 = this.currentPage;
      t1.set$visitCount($.$$add(t1.get$visitCount(), 1));
    } else if (this._repeatBlockBit)
      this._repeatBlockBit = false;
    else
      this.currentBlockIndex = $.$$add(t1, 1);
    "currentPage = " + $.S(this.currentPage) + ", currentBlock = " + $.S(this.currentBlockIndex);
    if ($.$$ge(this.currentBlockIndex, $.length(this.currentPage.get$blocks())) === true)
      if ($.any(this.choices, new $.EgbScripter__goOneStep_anon0()) === true)
        return this.choices.toMessage$2$endOfPage$filterOut(true, this.get$_leadsToIllegalPage());
      else
        return $.EgbMessage$EndOfBook();
    else {
      t1 = $.$$index(this.currentPage.get$blocks(), this.currentBlockIndex);
      if (typeof t1 === "string")
        return $.EgbMessage$TextResult($.$$index(this.currentPage.get$blocks(), this.currentBlockIndex));
      else {
        t1 = $.$$index(this.currentPage.get$blocks(), this.currentBlockIndex);
        if (typeof t1 === "object" && t1 !== null && (t1.constructor === Array || t1.$isList())) {
          this.choices.addFromScripterList$1($.$$index(this.currentPage.get$blocks(), this.currentBlockIndex));
          if ($.$$eq(this.currentBlockIndex, $.$$sub($.length(this.currentPage.get$blocks()), 1)) === true && this.choices.get$areActionable() === true)
            return this._createSaveGame$0();
          else
            return this.choices.toMessage$2$endOfPage$filterOut(false, this.get$_leadsToIllegalPage());
        } else {
          t1 = $.$$index(this.currentPage.get$blocks(), this.currentBlockIndex);
          if (typeof t1 === "function" || typeof t1 === "object" && t1 !== null && !!t1.$isFunction)
            return this._runScriptBlock$1$script($.$$index(this.currentPage.get$blocks(), this.currentBlockIndex));
        }
      }
    }
  },
  _initScriptEnvironment$0: function() {
    this.choices = $.EgbChoiceList$();
    this.vars = $.Map_Map();
    this.initBlock$0();
  },
  noSuchMethod$1: function(invocation) {
    var t1, t2;
    if (invocation.get$isGetter() === true)
      return $.$$index(this.vars, invocation.memberName);
    else {
      t1 = invocation.get$isSetter();
      t2 = invocation.memberName;
      if (t1 === true) {
        t1 = $.replaceAll(t2, "=", "");
        $.$$indexSet(this.vars, t1, $.$$index(invocation.get$positionalArguments(), 0));
        return;
      } else
        throw $.$$throw($.NoSuchMethodError$(this, t2, invocation.get$positionalArguments(), invocation.get$namedArguments(), null));
    }
  },
  _runScriptBlock$1$script: function(script) {
    var t1, t2;
    this.textBuffer = $.StringBuffer_StringBuffer("");
    this.choices = $.EgbChoiceList$from($.where(this.choices, new $.EgbScripter__runScriptBlock_anon()));
    if (script == null)
      $.$$index(this.currentPage.get$blocks(), this.currentBlockIndex).call$0();
    else
      script.call$0();
    if ($.any(this.choices, new $.EgbScripter__runScriptBlock_anon0()) === true) {
      t1 = this.choices;
      t2 = $.toString(this.textBuffer);
      return t1.toMessage$2$filterOut$prependText(this.get$_leadsToIllegalPage(), t2);
    }
    return $.EgbMessage$TextResult($.toString(this.textBuffer));
  },
  _leadsToIllegalPage$1: function(choice) {
    var t1, targetPage;
    t1 = choice.get$$goto();
    if (t1 == null)
      return false;
    targetPage = this.pageMap.getPage$2$currentGroupName(t1, this.currentPage.get$groupName());
    if (targetPage == null)
      return true;
    if (targetPage.get$visitOnce() === true && targetPage.get$visited() === true)
      return true;
    else
      return false;
  },
  get$_leadsToIllegalPage: function() {
    return new $.BoundClosure(this, "_leadsToIllegalPage$1");
  },
  _createSaveGame$0: function() {
    return $.EgbSavegame$(this.currentPage.get$name(), this.vars, this.pageMap.exportState$0()).toMessage$1(512);
  },
  _loadFromSaveGameMessage$1: function(message) {
    var savegame, _constructors;
    savegame = $.EgbSavegame_EgbSavegame$fromMessage(message);
    if ($.$$index(this.pageMap, savegame.get$currentPageName()) == null)
      throw $.$$throw("Trying to load page '" + $.S(savegame.get$currentPageName()) + "' which doesn't " + "exist in current egamebook.");
    this.currentPage = $.$$index(this.pageMap, savegame.get$currentPageName());
    this.pageMap.importState$1(savegame.get$pageMapState());
    _constructors = $.makeLiteralMap([]);
    $.EgbSavegame_importSavegameToVars(savegame, this.vars, _constructors);
  },
  EgbScripter$0: function() {
    $.DEBUG_SCR("Scripter has been created.");
    this._nextScriptStack = $.List_List(0);
    this._initScriptEnvironment$0();
    $.port().receive$1(this.get$_messageReceiveCallback());
  }
};

$$.EgbMessage0 = {"": "Object;type>,listContent>,strContent,intContent>",
  toJson$0: function() {
    var data, t1, t2;
    data = $.Map_Map();
    t1 = $.getInterceptor$JSArray(data);
    t1.$indexSet(data, "type", this.type);
    t2 = this.strContent;
    if (!(t2 == null))
      t1.$indexSet(data, "strContent", t2);
    t2 = this.listContent;
    if (!(t2 == null))
      t1.$indexSet(data, "listContent", t2);
    t2 = this.intContent;
    if (!(t2 == null))
      t1.$indexSet(data, "intContent", t2);
    return $._JsonStringifier_stringify(data);
  },
  EgbMessage$TextResult$1: function(str) {
    this.strContent = $.trim(str);
  },
  EgbMessage$fromJson$1: function(json) {
    var data, t1;
    data = $.parse(json, null);
    t1 = $.getInterceptor$JSStringJSArray(data);
    this.type = t1.$index(data, "type");
    if (data.containsKey$1("strContent") === true)
      this.strContent = t1.$index(data, "strContent");
    if (data.containsKey$1("listContent") === true)
      this.listContent = t1.$index(data, "listContent");
    if (data.containsKey$1("intContent") === true)
      this.intContent = t1.$index(data, "intContent");
  }
};

$$.EgbUserInteraction0 = {"": "Object;shown=,waitForEndOfPage>,hash>"};

$$.EgbChoice = {"": "EgbUserInteraction0;string>,f>,$goto>,showNow,shown,waitForEndOfPage,hash",
  goto$1: function(arg0) {
    return this.$goto.call$1(arg0);
  },
  get$isAutomatic: function() {
    return $.isEmpty(this.string);
  },
  then$1: function(_f) {
    this.f = _f;
    return this;
  },
  toString$0: function() {
    return "Choice: " + $.S(this.string) + " [" + $.S(this.$goto) + "]";
  },
  EgbChoice$4$$goto$script$showNow: function(string, $goto, script, showNow) {
    var t1 = $.getInterceptor$JSString(string);
    this.string = t1.trim$0(string);
    this.hash = t1.get$hashCode(string);
    this.f = script;
    this.waitForEndOfPage = showNow !== true;
  },
  $isEgbChoice: true
};

$$.EgbChoiceList = {"": "Object;_choices,question",
  addFromScripterList$1: function(list) {
    var t1, t2, i, map, t3, t4, string;
    if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
      return this.addFromScripterList$1$bailout(1, list);
    if (0 >= list.length)
      throw $.ioore(0);
    t1 = list[0];
    if (!(t1 == null) && (typeof t1 === "function" || typeof t1 === "object" && t1 !== null && !!t1.$isFunction))
      this.question = t1.call$0();
    else
      this.question = null;
    for (t1 = this._choices, t2 = $.getInterceptor$JSArray(t1), i = 1; i < list.length; ++i) {
      map = list[i];
      t3 = $.getInterceptor$JSStringJSArray(map);
      if (!(t3.$index(map, "string") == null)) {
        t4 = t3.$index(map, "string");
        t4 = typeof t4 === "function" || typeof t4 === "object" && t4 !== null && !!t4.$isFunction;
      } else
        t4 = false;
      string = t4 ? t3.$index(map, "string").call$0() : "";
      t2.add$1(t1, $.EgbChoice$(string, t3.$index(map, "goto"), t3.$index(map, "script"), true));
    }
  },
  addFromScripterList$1$bailout: function(state0, list) {
    var t1, t2, t3, i, map, t4, t5, string;
    t1 = $.getInterceptor$JSStringJSArray(list);
    if (!(t1.$index(list, 0) == null)) {
      t2 = t1.$index(list, 0);
      t2 = typeof t2 === "function" || typeof t2 === "object" && t2 !== null && !!t2.$isFunction;
    } else
      t2 = false;
    if (t2)
      this.question = t1.$index(list, 0).call$0();
    else
      this.question = null;
    for (t2 = this._choices, t3 = $.getInterceptor$JSArray(t2), i = 1; $.CONSTANT2.$lt(i, t1.get$length(list)); ++i) {
      map = t1.$index(list, i);
      t4 = $.getInterceptor$JSStringJSArray(map);
      if (!(t4.$index(map, "string") == null)) {
        t5 = t4.$index(map, "string");
        t5 = typeof t5 === "function" || typeof t5 === "object" && t5 !== null && !!t5.$isFunction;
      } else
        t5 = false;
      string = t5 ? t4.$index(map, "string").call$0() : "";
      t3.add$1(t2, $.EgbChoice$(string, t4.$index(map, "goto"), t4.$index(map, "script"), true));
    }
  },
  add$3$$goto$script: function(element, $goto, script) {
    if (typeof element === "object" && element !== null && !!element.$isEgbChoice)
      $.add(this._choices, element);
    else if (typeof element === "string")
      $.EgbChoice$(element, $goto, script, false);
    else
      throw $.$$throw($.ArgumentError$("To add a choice to choices, one must provide either a new EgbChoice element or a String."));
  },
  add$1: function(element) {
    return this.add$3$$goto$script(element, null, null);
  },
  where$1: function(f) {
    return $.where(this._choices, f);
  },
  removeMatching$1: function(f) {
    return $.removeMatching(this._choices, f);
  },
  any$1: function(f) {
    return $.any(this._choices, f);
  },
  get$length: function() {
    return $.length(this._choices);
  },
  $index: function(index) {
    var t1 = this._choices;
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.$$index$bailout7(1, t1, index);
    if (index !== (index | 0))
      throw $.iae(index);
    if (index < 0 || index >= t1.length)
      throw $.ioore(index);
    return t1[index];
  },
  $$index$bailout7: function(state0, t1, index) {
    return $.$$index(t1, index);
  },
  forEach$1: function(f) {
    $.forEach(this._choices, f);
  },
  clear$0: function() {
    return $.clear(this._choices);
  },
  get$iterator: function() {
    return $.iterator(this._choices);
  },
  get$areActionable: function() {
    return $.any(this._choices, new $.EgbChoiceList_areActionable_anon());
  },
  toMessage$3$endOfPage$filterOut$prependText: function(endOfPage, filterOut, prependText) {
    var t1, m;
    t1 = $.toList($.where(this._choices, new $.EgbChoiceList_toMessage_anon(endOfPage, filterOut)));
    m = $.EgbMessage$(64);
    m.listContent = $.List_List(0);
    $.add(m.listContent, prependText);
    $.add(m.listContent, this.question);
    $.forEach(t1, new $.EgbChoiceList_toMessage_anon0(m));
    return m;
  },
  toMessage$2$endOfPage$filterOut: function(endOfPage, filterOut) {
    return this.toMessage$3$endOfPage$filterOut$prependText(endOfPage, filterOut, null);
  },
  toMessage$2$filterOut$prependText: function(filterOut, prependText) {
    return this.toMessage$3$endOfPage$filterOut$prependText(false, filterOut, prependText);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  }
};

$$.EgbSavegame = {"": "Object;currentPageName>,pageMapState>,vars>,textHistory,uid>,timestamp",
  toMessage$1: function(type) {
    var message;
    if (type !== 512 && type !== 1024)
      throw $.$$throw("Cannot create EgbMessage of type " + $.S(type) + ". Can only be MSG_SAVE_GAME " + "(" + $.S(512) + ") or MSG_LOAD_GAME " + "(" + $.S(1024) + ").");
    message = $.EgbMessage$(type);
    message.strContent = this.toJson$0();
    return message;
  },
  toJson$0: function() {
    var saveMap, t1, t2;
    saveMap = $.Map_Map();
    t1 = $.getInterceptor$JSArray(saveMap);
    t1.$indexSet(saveMap, "uid", this.uid);
    t1.$indexSet(saveMap, "currentPageName", this.currentPageName);
    t1.$indexSet(saveMap, "pageMapState", this.pageMapState);
    t1.$indexSet(saveMap, "vars", this.vars);
    t1.$indexSet(saveMap, "timestamp", this.timestamp);
    t2 = this.textHistory;
    if (!(t2 == null))
      t1.$indexSet(saveMap, "previousText", t2);
    return $._JsonStringifier_stringify(saveMap);
  },
  toString$0: function() {
    return this.toJson$0();
  },
  EgbSavegame$fromJson$1: function(json) {
    var saveMap, t1;
    saveMap = $.parse(json, null);
    if (saveMap.containsKey$1("currentPageName") !== true || saveMap.containsKey$1("vars") !== true)
      throw $.$$throw("Invalid JSON for EgbSavegame. Doesn't contain required fields 'currentPageName' or 'vars'. JSON='" + $.S(json) + "'.");
    t1 = $.getInterceptor$JSStringJSArray(saveMap);
    this.uid = t1.$index(saveMap, "uid");
    this.currentPageName = t1.$index(saveMap, "currentPageName");
    this.timestamp = t1.$index(saveMap, "timestamp");
    this.pageMapState = t1.$index(saveMap, "pageMapState");
    this.vars = t1.$index(saveMap, "vars");
    if (saveMap.containsKey$1("previousText") === true)
      this.textHistory = t1.$index(saveMap, "previousText");
  },
  EgbSavegame$3: function(currentPageName, _vars, pageMapState) {
    this.vars = $.EgbSavegame__dissolveToPrimitives(_vars);
    this.timestamp = $.Date_Date$now().get$millisecondsSinceEpoch();
    this.uid = $.toRadixString($.hashCode(this), 16);
  }
};

$$.EgbPage = {"": "Object;name=,visitOnce>",
  toString$0: function() {
    return this.name;
  },
  get$groupName: function() {
    var t1 = this.name;
    if (t1 == null)
      throw $.$$throw("Accessed groupName EgbPage has name = null.");
    t1 = $.indexOf0(t1, ": ");
    if ($.$$gt(t1, 0) === true)
      return $.substring(this.name, 0, t1);
    else
      return;
  }
};

$$.Maps__emitMap_anon = {"": "Closure;box_0,result_1,visiting_2",
  call$2: function(k, v) {
    var t1, t2;
    t1 = this.box_0;
    if (t1.first_0 !== true)
      $.add(this.result_1, ", ");
    t1.first_0 = false;
    t1 = this.result_1;
    t2 = this.visiting_2;
    $.Collections__emitObject(k, t1, t2);
    $.add(t1, ": ");
    $.Collections__emitObject(v, t1, t2);
  },
  $isFunction: true
};

$$._LinkedHashMapImpl_forEach_anon = {"": "Closure;f_0",
  call$1: function(entry) {
    this.f_0.call$2(entry.get$key(), entry.get$value());
  },
  $isFunction: true
};

$$.NoSuchMethodError_toString_anon = {"": "Closure;box_0",
  call$2: function(key, value) {
    var t1 = this.box_0;
    if ($.$$gt(t1.i_1, 0) === true)
      $.add(t1.sb_0, ", ");
    $.add(t1.sb_0, key);
    $.add(t1.sb_0, ": ");
    $.add(t1.sb_0, $.Error_safeToString(value));
    t1.i_1 = $.$$add(t1.i_1, 1);
  },
  $isFunction: true
};

$$._JsonStringifier_stringifyJsonValue_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, value) {
    var t1, t2, t3;
    t1 = this.box_0;
    t2 = t1.first_0;
    t3 = this.this_1;
    if (t2 !== true)
      $.add(t3.get$sb(), ",\"");
    else
      $.add(t3.get$sb(), "\"");
    t2 = this.this_1;
    $._JsonStringifier_escape(t2.get$sb(), key);
    $.add(t2.get$sb(), "\":");
    t2.stringifyValue$1(value);
    t1.first_0 = false;
  },
  $isFunction: true
};

$$.HtmlInterface_setup_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1 = this.this_0;
    $.add(t1.get$_streamController().get$sink(), $.RestartIntent$());
    t1.set$_currentSavegame(null);
    $.clear(t1.get$bookDiv().get$children());
  },
  $isFunction: true
};

$$.Stream_length_anon = {"": "Closure;box_0",
  call$1: function(_) {
    var t1 = this.box_0;
    t1.count_0 = $.$$add(t1.count_0, 1);
  },
  $isFunction: true
};

$$.Stream_length_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    this.future_1._setValue$1(this.box_0.count_0);
  },
  $isFunction: true
};

$$.invokeClosure_anon = {"": "Closure;closure_0",
  call$0: function() {
    return this.closure_0.call$0();
  },
  $isFunction: true
};

$$.invokeClosure_anon0 = {"": "Closure;closure_1,arg1_2",
  call$0: function() {
    return this.closure_1.call$1(this.arg1_2);
  },
  $isFunction: true
};

$$.invokeClosure_anon1 = {"": "Closure;closure_3,arg1_4,arg2_5",
  call$0: function() {
    return this.closure_3.call$2(this.arg1_4, this.arg2_5);
  },
  $isFunction: true
};

$$._FutureImpl__scheduleUnhandledError_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1, error;
    t1 = this.this_0;
    if (t1.get$_hasUnhandledError() === true) {
      t1._clearUnhandledError$0();
      error = t1.get$_resultOrListeners();
      $.print("Uncaught Error: " + $.S(error.get$error()));
      t1 = error.get$stackTrace();
      if (!(t1 == null))
        $.print("Stack Trace:\n" + $.S(t1) + "\n");
      throw $.$$throw(error.get$error());
    }
  },
  $isFunction: true
};

$$.anon = {"": "Closure;this_0,callback_1",
  call$0: function() {
    this.callback_1.call$1(this.this_0);
  },
  $isFunction: true
};

$$.internalCallback = {"": "Closure;this_2,callback_3",
  call$0: function() {
    var t1, t2;
    t1 = this.callback_3;
    t2 = this.this_2;
    t1.call$1(t2);
    t2.set$_handle(null);
    t2 = $globalState.get$topEventLoop();
    t2.set$activeTimerCount($.$$sub(t2.get$activeTimerCount(), 1));
  },
  $isFunction: true
};

$$.Collection_clear_anon = {"": "Closure;",
  call$1: function(e) {
    return true;
  },
  $isFunction: true
};

$$.Stream_contains_anon = {"": "Closure;box_0,match_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_contains__anon(this.match_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_contains__anon0(t2, t3, element), $._cancelAndError(t2.subscription_0, t3), null);
  },
  $isFunction: true
};

$$.Stream_contains__anon = {"": "Closure;match_3,element_4",
  call$0: function() {
    return this.match_3.call$1(this.element_4);
  },
  $isFunction: true
};

$$.Stream_contains__anon0 = {"": "Closure;box_0,future_5,element_6",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(this.element_6);
    }
  },
  $isFunction: true
};

$$.Stream_contains_anon0 = {"": "Closure;future_7",
  call$0: function() {
    this.future_7._setValue$1(false);
  },
  $isFunction: true
};

$$._cancelAndError_anon = {"": "Closure;subscription_0,future_1",
  call$1: function(error) {
    this.subscription_0.cancel$0();
    this.future_1._setError$1(error);
  },
  $isFunction: true
};

$$.HashSet_forEach_anon = {"": "Closure;f_0",
  call$2: function(key, value) {
    this.f_0.call$1(key);
  },
  $isFunction: true
};

$$.Stream_toSet_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  },
  $isFunction: true
};

$$.Stream_toSet_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  },
  $isFunction: true
};

$$.Stream_last_anon = {"": "Closure;box_0",
  call$1: function(value) {
    var t1 = this.box_0;
    t1.foundResult_1 = true;
    t1.result_0 = value;
  },
  $isFunction: true
};

$$.Stream_last_anon0 = {"": "Closure;box_0,future_1",
  call$0: function() {
    var t1 = this.box_0;
    if (t1.foundResult_1 === true) {
      this.future_1._setValue$1(t1.result_0);
      return;
    }
    this.future_1._setError$1($.AsyncError$($.StateError$("No elements"), null));
  },
  $isFunction: true
};

$$.FilteredElementList__filtered_anon = {"": "Closure;",
  call$1: function(n) {
    return typeof n === "object" && n !== null && n.$isElement();
  },
  $isFunction: true
};

$$._FutureImpl__handleError_anon = {"": "Closure;error_0,errorFuture_1",
  call$1: function(_) {
    this.errorFuture_1._sendError$1(this.error_0);
  },
  $isFunction: true
};

$$._FutureImpl__handleValue_anon = {"": "Closure;thenFuture_0,value_1",
  call$1: function(_) {
    this.thenFuture_0._sendValue$1(this.value_1);
  },
  $isFunction: true
};

$$.AsyncError_throwDelayed_reportError = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    $.print("Uncaught Error: " + $.S(t1.get$error()));
    t1 = t1.get$stackTrace();
    if (!(t1 == null))
      $.print("Stack Trace:\n" + $.S(t1) + "\n");
  },
  $isFunction: true
};

$$.AsyncError_throwDelayed_anon = {"": "Closure;this_1,reportError_2",
  call$1: function(_) {
    this.reportError_2.call$0();
    throw $.$$throw(this.this_1.get$error());
  },
  $isFunction: true
};

$$.FilteredElementList_removeRange_anon = {"": "Closure;",
  call$1: function(el) {
    return el.remove$0();
  },
  $isFunction: true
};

$$.EgbPlayerProfile__loadPreferences_anon = {"": "Closure;this_0,completer_1",
  call$1: function(json) {
    var t1, t2;
    t1 = json == null || $.$$eq(json, "") === true;
    t2 = this.this_0;
    if (t1)
      t2.set$preferences($.Map_Map());
    else
      t2.set$preferences($.parse(json, null));
    this.completer_1.complete$1(true);
  },
  $isFunction: true
};

$$.JsonParser_parseNumber_handleLiteral = {"": "Closure;box_0,this_1,start_2",
  call$1: function(position) {
    var t1, t2, value;
    t1 = this.this_1;
    t2 = $.substring(t1.get$source(), this.start_2, position);
    value = this.box_0.isDouble_0 === true ? $.double_parse(t2, null) : $.int_parse(t2, null, null);
    t1.get$listener().handleNumber$1(value);
    return position;
  },
  $isFunction: true
};

$$.Stream_isEmpty_anon = {"": "Closure;box_0,future_1",
  call$1: function(_) {
    this.box_0.subscription_0.cancel$0();
    this.future_1._setValue$1(false);
  },
  $isFunction: true
};

$$.Stream_isEmpty_anon0 = {"": "Closure;future_2",
  call$0: function() {
    this.future_2._setValue$1(true);
  },
  $isFunction: true
};

$$._StreamImpl__sendDone_anon = {"": "Closure;this_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    this.this_0._cancel$1(subscriber);
    try {
      subscriber._sendDone$0();
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  },
  $isFunction: true
};

$$._StreamImpl__sendError_anon = {"": "Closure;error_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendError$1(this.error_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$withCause(e0, s, this.error_0).throwDelayed$0();
      }
    }

  },
  $isFunction: true
};

$$._StreamImpl__sendData_anon = {"": "Closure;value_0",
  call$1: function(subscriber) {
    var e, e0, s, exception, t1;
    try {
      subscriber._sendData$1(this.value_0);
    } catch (exception) {
      t1 = $.unwrapException(exception);
      if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
        e = t1;
        e.throwDelayed$0();
      } else {
        e0 = t1;
        s = $.getTraceFromException(exception);
        $.AsyncError$(e0, s).throwDelayed$0();
      }
    }

  },
  $isFunction: true
};

$$._DoneSubscription__delayDone_anon = {"": "Closure;this_0",
  call$1: function(_) {
    var t1 = this.this_0;
    if (!(t1.get$_handler() == null))
      t1._handler$0();
  },
  $isFunction: true
};

$$._PendingEvents_schedule_anon = {"": "Closure;this_0,stream_1",
  call$1: function(_) {
    this.this_0.set$scheduleTimer(null);
    this.stream_1._handlePendingEvents$0();
  },
  $isFunction: true
};

$$.anon0 = {"": "Closure;",
  call$0: function() {
    return "Pull the lever";
  },
  $isFunction: true
};

$$.anon1 = {"": "Closure;",
  call$0: function() {
    return "Leave the body there";
  },
  $isFunction: true
};

$$.anon2 = {"": "Closure;this_0",
  call$0: function() {
    var t1 = this.this_0;
    t1.get$points().add$2(5, "playing by the book");
    t1.set$pulledLever(true);
  },
  $isFunction: true
};

$$.anon3 = {"": "Closure;this_1",
  call$0: function() {
    var t1 = this.this_1;
    t1.get$points().add$2(2, "humanity");
    t1.set$pulledLever(false);
  },
  $isFunction: true
};

$$.anon4 = {"": "Closure;",
  call$0: function() {
    return "Ignore it";
  },
  $isFunction: true
};

$$.anon5 = {"": "Closure;",
  call$0: function() {
    return "Pick it up";
  },
  $isFunction: true
};

$$.anon6 = {"": "Closure;",
  call$0: function() {
    return "What do you reply?";
  },
  $isFunction: true
};

$$.anon7 = {"": "Closure;",
  call$0: function() {
    return "\"I'm coming.\" ";
  },
  $isFunction: true
};

$$.anon8 = {"": "Closure;",
  call$0: function() {
    return "\"Can't this wait? There is a funeral going on, you know.\" ";
  },
  $isFunction: true
};

$$.anon9 = {"": "Closure;",
  call$0: function() {
    return "\"Okay, okay, I'm coming.\" ";
  },
  $isFunction: true
};

$$.anon10 = {"": "Closure;this_2",
  call$0: function() {
    var t1 = this.this_2;
    t1.echo$1("You give Captain Kay's " + (t1.get$pulledLever() === true ? "receding" : "") + " body the last glance, and run off in the direction of the bridge.");
  },
  $isFunction: true
};

$$.anon11 = {"": "Closure;this_3",
  call$0: function() {
    var t1 = $.makeLiteralMap(["hp", 100]);
    this.this_3.set$bodega(t1);
  },
  $isFunction: true
};

$$.anon12 = {"": "Closure;",
  call$0: function() {
    return "\"Yes. Full steam ahead!\" [20 hours]";
  },
  $isFunction: true
};

$$.anon13 = {"": "Closure;",
  call$0: function() {
    return "\"No. Keep the shields and the radar on.\" [40 hours]";
  },
  $isFunction: true
};

$$.anon14 = {"": "Closure;this_4",
  call$0: function() {
    var t1 = this.this_4;
    t1.set$eta(20);
    t1.set$shieldsUp(false);
    t1.set$radarUp(false);
  },
  $isFunction: true
};

$$.anon15 = {"": "Closure;this_5",
  call$0: function() {
    var t1 = this.this_5;
    t1.get$points().add$2(5, "upholding interplanetary travel safety standards");
    t1.get$points().add$2(10, "being genre savvy");
    t1.set$eta(38);
    t1.set$shieldsUp(true);
    t1.set$radarUp(true);
  },
  $isFunction: true
};

$$.anon16 = {"": "Closure;this_6",
  call$0: function() {
    var t1 = this.this_6;
    t1.echo$1("Station Unity is around " + $.S(t1.get$eta()) + " hours away and you are dog-tired. You spent the last couple of days slaving away \u2013 together with Gorilla and Captain Kay \u2013 to repair the engine. It had broken down in the middle of nowhere.");
  },
  $isFunction: true
};

$$.anon17 = {"": "Closure;this_7",
  call$0: function() {
    var t1 = this.this_7;
    if (t1.get$radarUp() === true)
      t1.goto$1("Dogfight: Radar reading");
    else
      t1.goto$1("Dogfight: Wake up");
  },
  $isFunction: true
};

$$.anon18 = {"": "Closure;this_8",
  call$0: function() {
    var t1 = this.this_8;
    t1.set$eta($.$$sub(t1.get$eta(), 15));
  },
  $isFunction: true
};

$$.anon19 = {"": "Closure;this_9",
  call$0: function() {
    $.$$indexSet(this.this_9.get$bodega(), "timeToFire", 0);
  },
  $isFunction: true
};

$$.anon20 = {"": "Closure;this_10",
  call$0: function() {
    var t1 = this.this_10;
    t1.set$eta($.$$sub(t1.get$eta(), 16));
  },
  $isFunction: true
};

$$.anon21 = {"": "Closure;this_11",
  call$0: function() {
    $.$$indexSet(this.this_11.get$bodega(), "timeToFire", 1);
  },
  $isFunction: true
};

$$.anon22 = {"": "Closure;",
  call$0: function() {
    return "Raise the shields";
  },
  $isFunction: true
};

$$.anon23 = {"": "Closure;this_12",
  call$0: function() {
    this.this_12.set$shieldsUp(true);
  },
  $isFunction: true
};

$$.anon24 = {"": "Closure;",
  call$0: function() {
    return "Power up the gun";
  },
  $isFunction: true
};

$$.anon25 = {"": "Closure;this_13",
  call$0: function() {
    $.$$indexSet(this.this_13.get$bodega(), "timeToFire", 0);
  },
  $isFunction: true
};

$$.anon26 = {"": "Closure;",
  call$0: function() {
    return "Do neither";
  },
  $isFunction: true
};

$$.anon27 = {"": "Closure;this_14",
  call$0: function() {
    this.this_14.set$nothing(null);
  },
  $isFunction: true
};

$$.anon28 = {"": "Closure;this_15",
  call$0: function() {
    var t1, t2;
    t1 = this.this_15;
    t1.set$time(0);
    t1.set$messenger($.makeLiteralMap(["hp", 15, "shields", 0, "timeToFire", 1]));
    t2 = t1.get$bodega();
    $.$$indexSet(t2, "shields", t1.get$shieldsUp() === true ? 10 : 0);
    $.$$indexSet(t1.get$bodega(), "evasive", false);
  },
  $isFunction: true
};

$$.anon29 = {"": "Closure;this_16",
  call$0: function() {
    var t1 = this.this_16;
    t1.choice$1("\"What are you doing? What is happening here?\"").then$1(new $._anon3(t1));
    t1.choice$1("Watch what he's doing with the controls").then$1(new $._anon4(t1));
    if ($.$$eq(t1.get$shieldsUp(), true) !== true)
      t1.choice$1("Shields up").then$1(new $._anon5(t1));
    if ($.$$le($.$$index(t1.get$bodega(), "timeToFire"), 0) === true)
      t1.choice$1("Fire").then$1(new $._anon6(t1));
  },
  $isFunction: true
};

$$._anon3 = {"": "Closure;this_17",
  call$0: function() {
    return this.this_17.echo$1("He doesn't respond.");
  },
  $isFunction: true
};

$$._anon4 = {"": "Closure;this_18",
  call$0: function() {
    return this.this_18.echo$1("It takes a while, but you realize he's putting his ship into combat mode.");
  },
  $isFunction: true
};

$$._anon5 = {"": "Closure;this_19",
  call$0: function() {
    var t1 = this.this_19;
    t1.set$shieldsUp(true);
    $.$$indexSet(t1.get$bodega(), "shields", 5);
  },
  $isFunction: true
};

$$._anon6 = {"": "Closure;this_20",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_20;
    t1.echo$1("You take the laser gun controls, quickly aim at the Messanger and fire. \n");
    if ($.$$lt($.Random_Random(null).nextDouble$0(), 0.6) === true) {
      t2 = t1.get$messenger();
      t3 = $.getInterceptor$JSStringJSArray(t2);
      t3.$indexSet(t2, "hp", $.$$sub(t3.$index(t2, "hp"), 3));
      t1.echo$1("Boom! It's a hit! The stream of energy hits the Messenger, right in the middle of its belly, and leaves a sizeable hole there. It looks like some serious damage has been dealt.\n");
      t1.get$points().add$2(7, "hitting early and hard");
    } else {
      t1.echo$1("The stream of energy misses the Messenger by a couple of meters. That was unlucky.\n");
      t1.get$points().add$2(5, "not wasting any time");
    }
  },
  $isFunction: true
};

$$.anon30 = {"": "Closure;this_21",
  call$0: function() {
    var t1, t2, t3;
    t1 = this.this_21;
    t1.set$time($.$$add(t1.get$time(), 1));
    t2 = t1.get$bodega();
    t3 = $.getInterceptor$JSStringJSArray(t2);
    t3.$indexSet(t2, "timeToFire", $.$$sub(t3.$index(t2, "timeToFire"), 1));
    t2 = t1.get$messenger();
    t3 = $.getInterceptor$JSStringJSArray(t2);
    t3.$indexSet(t2, "timeToFire", $.$$sub(t3.$index(t2, "timeToFire"), 1));
    if ($.$$lt($.$$index(t1.get$messenger(), "shields"), 5) === true) {
      t2 = t1.get$messenger();
      t3 = $.getInterceptor$JSStringJSArray(t2);
      t3.$indexSet(t2, "shields", $.$$add(t3.$index(t2, "shields"), 1));
      if ($.$$gt($.$$index(t1.get$messenger(), "shields"), 2) === true)
        t1.echo$1("The Messenger's shields are about half up.");
    } else
      t1.echo$1("The Messenger's shields are now fully up.");
    if ($.$$eq(t1.get$time(), 2) === true && $.$$eq(t1.get$pulledLever(), false) === true) {
      t1.echo$1("The Messenger manages to position itself to the right of the \n\n");
      t2 = t1.get$bodega();
      t3 = $.getInterceptor$JSStringJSArray(t2);
      t3.$indexSet(t2, "hp", $.$$sub(t3.$index(t2, "hp"), 7));
    }
    if ($.$$le($.$$index(t1.get$bodega(), "hp"), 0) === true)
      t1.goto$1("Lose");
    if ($.$$le($.$$index(t1.get$bodega(), "timeToFire"), 0) === true) {
      t1.get$choices().add$2("Fire at hull [~80% chance]", new $._anon());
      t1.get$choices().add$2("Fire at engines [~40% chance]", new $._anon0());
    }
    t1.get$choices().add$2("Evasive maneuvre [harder to get hit]", new $._anon1(t1));
    if ($.$$eq(t1.get$time(), 3) === true)
      t1.get$choices().add$2("Direct all halogen headlights on the Messenger and switch them on at once", new $._anon2(t1));
    if ($.$$le($.$$index(t1.get$messenger(), "hp"), 0) === true)
      t1.goto$1("Win");
    else
      t1.repeatBlock$0();
  },
  $isFunction: true
};

$$._anon = {"": "Closure;",
  call$0: function() {
  },
  $isFunction: true
};

$$._anon0 = {"": "Closure;",
  call$0: function() {
  },
  $isFunction: true
};

$$._anon1 = {"": "Closure;this_22",
  call$0: function() {
    $.$$indexSet(this.this_22.get$bodega(), "evasive", true);
  },
  $isFunction: true
};

$$._anon2 = {"": "Closure;this_23",
  call$0: function() {
    var t1, t2;
    t1 = this.this_23.get$messenger();
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t2.$indexSet(t1, "timeToFire", $.$$add(t2.$index(t1, "timeToFire"), 2));
  },
  $isFunction: true
};

$$.anon31 = {"": "Closure;",
  call$0: function() {
  },
  $isFunction: true
};

$$.anon32 = {"": "Closure;this_24",
  call$0: function() {
    var t1 = this.this_24;
    if ($.$$le($.$$index(t1.get$bodega(), "hp"), 0) === true)
      t1.goto$1("Lose");
    else if ($.$$le($.$$index(t1.get$messenger(), "hp"), 0) === true)
      t1.goto$1("Win");
  },
  $isFunction: true
};

$$.anon33 = {"": "Closure;this_25",
  call$0: function() {
    this.this_25.get$points().add$2(10, "space combat");
  },
  $isFunction: true
};

$$.anon34 = {"": "Closure;this_26",
  call$0: function() {
    var t1 = this.this_26;
    t1.echo$1("You look at the readings around you. The shields at " + $.S($.toStringAsFixed($.$$mul($.$$div($.$$index(t1.get$bodega(), "shields"), 10), 100), 0)) + "% and stable. The hull took ...");
  },
  $isFunction: true
};

$$._BaseSendPort_call_anon = {"": "Closure;completer_0,port_1",
  call$2: function(value, ignoreReplyTo) {
    var t1;
    this.port_1.close$0();
    t1 = this.completer_0;
    if (typeof value === "object" && value !== null && !!value.$isException)
      t1.completeError$1(value);
    else
      t1.complete$1(value);
  },
  $isFunction: true
};

$$._NativeJsSendPort_send_anon = {"": "Closure;this_1,message_2,replyTo_3",
  call$0: function() {
    var t1, t2, t3, t4, shouldSerialize, msg;
    t1 = {};
    t2 = this.this_1;
    t3 = this.replyTo_3;
    t2._checkReplyTo$1(t3);
    t4 = $.$$index($globalState.get$isolates(), t2.get$_isolateId());
    if (t4 == null)
      return;
    if (t2.get$_liblib3$_receivePort().get$_callback() == null)
      return;
    shouldSerialize = !($globalState.get$currentContext() == null) && $.$$eq($globalState.get$currentContext().get$id(), t2.get$_isolateId()) !== true;
    msg = this.message_2;
    t1.msg_0 = msg;
    t1.reply_1 = t3;
    if (shouldSerialize) {
      t1.msg_0 = $._serializeMessage(t1.msg_0);
      t1.reply_1 = $._serializeMessage(t1.reply_1);
    }
    $globalState.get$topEventLoop().enqueue$3(t4, new $._NativeJsSendPort_send__anon(t1, t2, shouldSerialize), "receive " + $.S(msg));
  },
  $isFunction: true
};

$$._NativeJsSendPort_send__anon = {"": "Closure;box_0,this_4,shouldSerialize_5",
  call$0: function() {
    var t1, t2;
    t1 = this.this_4;
    if (!(t1.get$_liblib3$_receivePort().get$_callback() == null)) {
      if (this.shouldSerialize_5 === true) {
        t2 = this.box_0;
        t2.msg_0 = $._deserializeMessage(t2.msg_0);
        t2.reply_1 = $._deserializeMessage(t2.reply_1);
      }
      t1 = t1.get$_liblib3$_receivePort();
      t2 = this.box_0;
      t1._callback$2(t2.msg_0, t2.reply_1);
    }
  },
  $isFunction: true
};

$$._waitForPendingPorts_anon = {"": "Closure;callback_0",
  call$1: function(_) {
    return this.callback_0.call$0();
  },
  $isFunction: true
};

$$._FutureImpl__FutureImpl$wait_anon = {"": "Closure;box_0,completer_1,values_2,pos_3",
  call$1: function(value) {
    var t1, t2, t3;
    t1 = this.values_2;
    $.$$indexSet(t1, this.pos_3, value);
    t2 = this.box_0;
    t3 = $.$$sub(t2.remaining_0, 1);
    t2.remaining_0 = t3;
    if ($.$$eq(t3, 0) === true)
      this.completer_1.complete$1(t1);
  },
  $isFunction: true
};

$$._FutureImpl__FutureImpl$wait_anon0 = {"": "Closure;box_0,completer_4",
  call$1: function(error) {
    var t1 = this.box_0;
    if (t1.completed_1 !== true)
      this.completer_4.completeError$2(error.get$error(), error.get$stackTrace());
    t1.completed_1 = true;
  },
  $isFunction: true
};

$$._PendingSendPortFinder_visitMap_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $isFunction: true
};

$$.Storage_values_anon = {"": "Closure;values_0",
  call$2: function(k, v) {
    return $.add(this.values_0, v);
  },
  $isFunction: true
};

$$._LinkedHashMapImpl_values_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$value();
  },
  $isFunction: true
};

$$._PendingSendPortFinder_visitList_anon = {"": "Closure;this_0",
  call$1: function(e) {
    return this.this_0._dispatch$1(e);
  },
  $isFunction: true
};

$$._Copier_visitMap_anon = {"": "Closure;box_0,this_1",
  call$2: function(key, val) {
    var t1, t2;
    t1 = this.box_0.copy_0;
    t2 = this.this_1;
    $.$$indexSet(t1, t2._dispatch$1(key), t2._dispatch$1(val));
  },
  $isFunction: true
};

$$._WorkerSendPort_send_anon = {"": "Closure;this_0,message_1,replyTo_2",
  call$0: function() {
    var t1, t2, workerMessage;
    t1 = this.this_0;
    t2 = this.replyTo_2;
    t1._checkReplyTo$1(t2);
    workerMessage = $._serializeMessage($.makeLiteralMap(["command", "message", "port", t1, "msg", this.message_1, "replyTo", t2]));
    if ($globalState.get$isWorker() === true)
      $globalState.get$mainManager().postMessage$1(workerMessage);
    else {
      t2 = $.$$index($globalState.get$managers(), t1.get$_workerId());
      if (!(t2 == null))
        t2.postMessage$1(workerMessage);
    }
  },
  $isFunction: true
};

$$.Stream_toList_anon = {"": "Closure;result_0",
  call$1: function(data) {
    $.add(this.result_0, data);
  },
  $isFunction: true
};

$$.Stream_toList_anon0 = {"": "Closure;result_1,future_2",
  call$0: function() {
    this.future_2._setValue$1(this.result_1);
  },
  $isFunction: true
};

$$.Storage_keys_anon = {"": "Closure;keys_0",
  call$2: function(k, v) {
    return $.add(this.keys_0, k);
  },
  $isFunction: true
};

$$._LinkedHashMapImpl_keys_anon = {"": "Closure;",
  call$1: function(entry) {
    return entry.get$key();
  },
  $isFunction: true
};

$$.EgbScripter__goOneStep_anon = {"": "Closure;box_0,this_1,incomingMessage_2",
  call$1: function(choice) {
    var t1, message;
    if ($.$$eq(choice.get$hash(), this.incomingMessage_2.get$intContent()) === true) {
      "Found choice that was selected: " + $.S(choice.get$string());
      t1 = choice.get$$goto();
      if (!(t1 == null))
        this.this_1.goto$1(t1);
      t1 = choice.get$f();
      if (!(t1 == null)) {
        message = this.this_1._runScriptBlock$1$script(t1);
        this.box_0.message_0 = message;
      }
    }
  },
  $isFunction: true
};

$$.EgbScripter__goOneStep_anon0 = {"": "Closure;",
  call$1: function(choice) {
    return choice.get$shown() !== true;
  },
  $isFunction: true
};

$$.EgbScripterPageMap_exportState_anon = {"": "Closure;pageMapState_0",
  call$2: function(name, page) {
    $.$$indexSet(this.pageMapState_0, name, $.makeLiteralMap(["visitCount", page.get$visitCount()]));
  },
  $isFunction: true
};

$$.DateTime_toString_fourDigits = {"": "Closure;",
  call$1: function(n) {
    var t1, absN, sign;
    t1 = $.getInterceptor$JSNumber(n);
    absN = t1.abs$0(n);
    sign = t1.$lt(n, 0) === true ? "-" : "";
    t1 = $.getInterceptor$JSNumber(absN);
    if (t1.$ge(absN, 1000) === true)
      return $.S(n);
    if (t1.$ge(absN, 100) === true)
      return sign + "0" + $.S(absN);
    if (t1.$ge(absN, 10) === true)
      return sign + "00" + $.S(absN);
    return sign + "000" + $.S(absN);
  },
  $isFunction: true
};

$$.DateTime_toString_threeDigits = {"": "Closure;",
  call$1: function(n) {
    var t1 = $.getInterceptor$JSNumber(n);
    if (t1.$ge(n, 100) === true)
      return $.S(n);
    if (t1.$ge(n, 10) === true)
      return "0" + $.S(n);
    return "00" + $.S(n);
  },
  $isFunction: true
};

$$.DateTime_toString_twoDigits = {"": "Closure;",
  call$1: function(n) {
    if ($.$$ge(n, 10) === true)
      return $.S(n);
    return "0" + $.S(n);
  },
  $isFunction: true
};

$$.EgbSavegame__dissolveToPrimitives_anon = {"": "Closure;input_0,outputMap_1",
  call$2: function(key, value) {
    if ($.EgbSavegame__isSaveable($.callTypeCast(this.input_0, "$isMap").$index(key)) === true)
      $.$$indexSet(this.outputMap_1, key, $.EgbSavegame__dissolveToPrimitives(value));
  },
  $isFunction: true
};

$$.Stream_any_anon = {"": "Closure;box_0,test_1,future_2",
  call$1: function(element) {
    var t1, t2, t3;
    t1 = new $.Stream_any__anon(this.test_1, element);
    t2 = this.box_0;
    t3 = this.future_2;
    $._runUserCode(t1, new $.Stream_any__anon0(t2, t3), $._cancelAndError(t2.subscription_0, t3), null);
  },
  $isFunction: true
};

$$.Stream_any__anon = {"": "Closure;test_3,element_4",
  call$0: function() {
    return this.test_3.call$1(this.element_4);
  },
  $isFunction: true
};

$$.Stream_any__anon0 = {"": "Closure;box_0,future_5",
  call$1: function(isMatch) {
    if (isMatch === true) {
      this.box_0.subscription_0.cancel$0();
      this.future_5._setValue$1(true);
    }
  },
  $isFunction: true
};

$$.Stream_any_anon0 = {"": "Closure;future_6",
  call$0: function() {
    this.future_6._setValue$1(false);
  },
  $isFunction: true
};

$$.EgbScripter__runScriptBlock_anon = {"": "Closure;",
  call$1: function(choice) {
    return choice.get$shown() !== true;
  },
  $isFunction: true
};

$$.EgbScripter__runScriptBlock_anon0 = {"": "Closure;",
  call$1: function(choice) {
    return choice.get$waitForEndOfPage() !== true;
  },
  $isFunction: true
};

$$.EgbChoiceList_toMessage_anon = {"": "Closure;endOfPage_0,filterOut_1",
  call$1: function(choice) {
    var t1;
    if (choice.get$shown() === true)
      return false;
    if (this.endOfPage_0 !== true && choice.get$waitForEndOfPage() === true)
      return false;
    t1 = this.filterOut_1;
    if (!(t1 == null) && t1.call$1(choice) === true)
      return false;
    return true;
  },
  $isFunction: true
};

$$.EgbChoiceList_toMessage_anon0 = {"": "Closure;m_2",
  call$1: function(choice) {
    $.add(this.m_2.get$listContent(), $.makeLiteralMap(["string", choice.get$string(), "hash", choice.get$hash()]));
    choice.set$shown(true);
  },
  $isFunction: true
};

$$.EgbChoiceList_areActionable_anon = {"": "Closure;",
  call$1: function(choice) {
    return choice.get$shown() !== true && choice.get$isAutomatic() !== true;
  },
  $isFunction: true
};

$$.EgbSavegame_importSavegameToVars_anon = {"": "Closure;vars_0,constructors_1",
  call$2: function(key, value) {
    var t1, t2, t3, t4, t5;
    t1 = this.vars_0;
    t2 = $.getInterceptor$JSStringJSArray(t1);
    t3 = t2.$index(t1, key);
    t4 = this.constructors_1;
    t5 = $.getInterceptor$JSArray(t1);
    if (t3 == null)
      t5.$indexSet(t1, key, $.EgbSavegame__assembleFromPrimitives(value, t4, null));
    else
      t5.$indexSet(t1, key, $.EgbSavegame__assembleFromPrimitives(value, t4, t2.$index(t1, key)));
  },
  $isFunction: true
};

$$.EgbSavegame__assembleFromPrimitives_anon = {"": "Closure;constructors_0,outputMap_1",
  call$2: function(key, value) {
    $.$$indexSet(this.outputMap_1, key, $.EgbSavegame__assembleFromPrimitives(value, this.constructors_0, null));
  },
  $isFunction: true
};

$$.EgbScripterPageMap_importState_anon = {"": "Closure;this_0",
  call$2: function(name, map) {
    var t1, t2;
    t1 = this.this_0;
    if (t1.get$pages().containsKey$1(name) === true) {
      t2 = $.$$index(map, "visitCount");
      $.$$index(t1.get$pages(), name).set$visitCount(t2);
    }
  },
  $isFunction: true
};

$$.EgbScripterPageMap_clearState_anon = {"": "Closure;",
  call$2: function(name, page) {
    page.set$visitCount(0);
  },
  $isFunction: true
};

$$.IsolateNatives_spawn_anon = {"": "Closure;completer_0,port_1",
  call$2: function(msg, replyPort) {
    this.port_1.close$0();
    this.completer_0.complete$1(replyPort);
  },
  $isFunction: true
};

$$.anon35 = {"": "Closure;this_0",
  call$1: function(p) {
    var t1, t2, t3, t4;
    t1 = this.this_0;
    t1.set$_port(p);
    for (t2 = $.iterator(t1.get$pending()); t2.moveNext$0() === true;) {
      t3 = t2.get$current();
      t4 = $.getInterceptor$JSStringJSArray(t3);
      p.send$2(t4.$index(t3, "message"), t4.$index(t3, "replyTo"));
    }
    t1.set$pending(null);
  },
  $isFunction: true
};

$$.IsolateNatives__startNonWorker_function = {"": "Closure;functionName_0,replyPort_1",
  call$0: function() {
    $.IsolateNatives__startIsolate($[this.functionName_0], this.replyPort_1);
  },
  $isFunction: true
};

$$.IsolateNatives__processWorkerMessage_function = {"": "Closure;entryPoint_0,replyTo_1",
  call$0: function() {
    $.IsolateNatives__startIsolate(this.entryPoint_0, this.replyTo_1);
  },
  $isFunction: true
};

$$.anon36 = {"": "Closure;this_0",
  call$1: function(playerIntent) {
    var t1;
    switch (playerIntent.get$type()) {
      case 8:
        t1 = this.this_0;
        t1.get$_scripterPort().send$2($.EgbMessage$Start().toJson$0(), t1.get$_receivePort().toSendPort$0());
        t1.set$started(true);
        break;
      case 2:
        this.this_0.stop$0();
        break;
      case 4:
        t1 = this.this_0;
        t1.get$_playerProfile().load$1($.propertyTypeCast(playerIntent, "$isLoadIntent").get$uid()).then$1(new $._anon7(t1));
        t1.set$started(true);
        break;
    }
  },
  $isFunction: true
};

$$._anon7 = {"": "Closure;this_1",
  call$1: function(savegame) {
    var t1 = this.this_1;
    if (savegame == null)
      t1.get$_scripterPort().send$2($.EgbMessage$Start().toJson$0(), t1.get$_receivePort().toSendPort$0());
    else
      t1.get$_scripterPort().send$2(savegame.toMessage$1(1024).toJson$0(), t1.get$_receivePort().toSendPort$0());
  },
  $isFunction: true
};

$$.EgbRunner_receiveFromScripter_anon = {"": "Closure;this_0",
  call$1: function(savegame) {
    var t1 = this.this_0;
    if (savegame == null)
      t1.get$_scripterPort().send$2($.EgbMessage$Start().toJson$0(), t1.get$_receivePort().toSendPort$0());
    else
      t1.get$_scripterPort().send$2(savegame.toMessage$1(1024).toJson$0(), t1.get$_receivePort().toSendPort$0());
  },
  $isFunction: true
};

$$.EgbRunner_receiveFromScripter_anon0 = {"": "Closure;this_1",
  call$1: function(hash) {
    var t1 = this.this_1;
    if (!(hash == null))
      t1.get$_scripterPort().send$2($.EgbMessage$OptionSelected(hash).toJson$0(), t1.get$_receivePort().toSendPort$0());
    else
      t1.stop$0();
  },
  $isFunction: true
};

$$.HtmlInterface_showChoices_anon = {"": "Closure;this_0,completer_1,choicesOl_2,choice_3,li_4",
  call$1: function(ev) {
    this.completer_1.complete$1(this.choice_3.get$hash());
    $.add(this.li_4.get$classes(), "chosen");
    this.this_0._makeIntoBookmark$1(this.choicesOl_2);
    ev.stopPropagation$0();
  },
  $isFunction: true
};

$$.HtmlInterface__makeIntoBookmark_anon = {"": "Closure;",
  call$1: function(el) {
    var string = el.query$1("a").get$innerHtml();
    $.clear(el.get$children());
    el.set$innerHtml(string);
  },
  $isFunction: true
};

$$.HtmlInterface__makeIntoBookmark_anon0 = {"": "Closure;this_0,choicesOl_1,uid_2",
  call$1: function(ev) {
    var t1, t2, prevEl, t3;
    t1 = window;
    t2 = this.uid_2;
    if (t1.confirm$1("Are you sure you want to come back to this decision (" + $.S(t2) + ") and lose your progress since?") === true) {
      t1 = this.choicesOl_1;
      prevEl = t1.get$previousElementSibling();
      if (!(prevEl == null) && $.contains0(prevEl.get$classes(), "choices-question") === true)
        prevEl.remove$0();
      for (; t3 = t1.get$nextElementSibling(), !(t3 == null);)
        t3.remove$0();
      t1.remove$0();
      $.add(this.this_0.get$_streamController().get$sink(), $.LoadIntent$(t2));
    }
  },
  $isFunction: true
};

$$._DataAttributeMap_keys_anon = {"": "Closure;this_0,keys_1",
  call$2: function(key, value) {
    var t1 = $.getInterceptor$JSString(key);
    if (t1.startsWith$1(key, "data-") === true)
      $.add(this.keys_1, t1.substring$1(key, 5));
  },
  $isFunction: true
};

$$._DataAttributeMap_values_anon = {"": "Closure;this_0,values_1",
  call$2: function(key, value) {
    if ($.startsWith(key, "data-") === true)
      $.add(this.values_1, value);
  },
  $isFunction: true
};

$$._DataAttributeMap_forEach_anon = {"": "Closure;this_0,f_1",
  call$2: function(key, value) {
    var t1 = $.getInterceptor$JSString(key);
    if (t1.startsWith$1(key, "data-") === true)
      this.f_1.call$2(t1.substring$1(key, 5), value);
  },
  $isFunction: true
};

$$.CssClassSet_clear_anon = {"": "Closure;",
  call$1: function(s) {
    return $.clear(s);
  },
  $isFunction: true
};

$$.CssClassSet_removeMatching_anon = {"": "Closure;test_0",
  call$1: function(s) {
    return $.removeMatching(s, this.test_0);
  },
  $isFunction: true
};

$$.CssClassSet_removeAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.removeAll(s, this.iterable_0);
  },
  $isFunction: true
};

$$.CssClassSet_addAll_anon = {"": "Closure;iterable_0",
  call$1: function(s) {
    return $.addAll(s, this.iterable_0);
  },
  $isFunction: true
};

$$.CssClassSet_add_anon = {"": "Closure;value_0",
  call$1: function(s) {
    return $.add(s, this.value_0);
  },
  $isFunction: true
};

$$.EgbChoiceList_toMessage_anon1 = {"": "Closure;endOfPage_0,filterOut_1",
  call$1: function(choice) {
    var t1;
    if (choice.get$shown() === true)
      return false;
    if (this.endOfPage_0 !== true && choice.get$waitForEndOfPage() === true)
      return false;
    t1 = this.filterOut_1;
    if (!(t1 == null) && t1.call$1(choice) === true)
      return false;
    return true;
  },
  $isFunction: true
};

$$.EgbChoiceList_toMessage_anon2 = {"": "Closure;m_2",
  call$1: function(choice) {
    $.add(this.m_2.get$listContent(), $.makeLiteralMap(["string", choice.get$string(), "hash", choice.get$hash()]));
    choice.set$shown(true);
  },
  $isFunction: true
};

$$.EgbChoiceList_areActionable_anon0 = {"": "Closure;",
  call$1: function(choice) {
    return choice.get$shown() !== true && choice.get$isAutomatic() !== true;
  },
  $isFunction: true
};

$$.EgbPlayerProfile_save_anon = {"": "Closure;this_0,savegame_1,completer_2",
  call$1: function(_) {
    return this.this_0.save$1(this.savegame_1).then$1(new $.EgbPlayerProfile_save__anon(this.completer_2));
  },
  $isFunction: true
};

$$.EgbPlayerProfile_save__anon = {"": "Closure;completer_3",
  call$1: function(value) {
    this.completer_3.complete$1(value);
  },
  $isFunction: true
};

$$.EgbPlayerProfile__loadChronology_anon = {"": "Closure;this_0",
  call$1: function(json) {
    var t1 = this.this_0;
    if (!(json == null))
      t1.set$savegamesChronology($.Queue_Queue$from($.parse(json, null)));
    else
      t1.set$savegamesChronology($.Queue_Queue());
    return true;
  },
  $isFunction: true
};

$$.EgbPlayerProfile_loadMostRecent_anon = {"": "Closure;this_0,completer_1",
  call$1: function(_) {
    return this.this_0.loadMostRecent$0().then$1(new $.EgbPlayerProfile_loadMostRecent__anon(this.completer_1));
  },
  $isFunction: true
};

$$.EgbPlayerProfile_loadMostRecent__anon = {"": "Closure;completer_2",
  call$1: function(value) {
    this.completer_2.complete$1(value);
  },
  $isFunction: true
};

$$.EgbPlayerProfile_load_anon = {"": "Closure;completer_0",
  call$1: function(json) {
    var t1 = this.completer_0;
    if (json == null)
      t1.complete$1(null);
    else
      t1.complete$1($.EgbSavegame$fromJson0(json));
  },
  $isFunction: true
};

$$._EventLoop__runHelper_next = {"": "Closure;this_0",
  call$0: function() {
    if (this.this_0.runIteration$0() !== true)
      return;
    $.Timer_Timer(0, new $._EventLoop__runHelper_next_anon(this));
  },
  $isFunction: true
};

$$._EventLoop__runHelper_next_anon = {"": "Closure;next_1",
  call$1: function(_) {
    return this.next_1.call$0();
  },
  $isFunction: true
};

$$.BoundClosure = {"": "Closure;self,target",
  call$1: function(p0) {
    return this.self[this.target](p0);
  }
};
$$.BoundClosure0 = {"": "Closure;self,target,receiver",
  call$1: function(p0) {
    return this.self[this.target](this.receiver, p0);
  }
};
$$.BoundClosure1 = {"": "Closure;self,target,receiver",
  call$2: function(p0, p1) {
    return this.self[this.target](this.receiver, p0, p1);
  },
  call$1: function($receiver, other) {
    return this.call$2($receiver, other, 0);
  }
};
$$.BoundClosure2 = {"": "Closure;self,target",
  call$2: function(p0, p1) {
    return this.self[this.target](p0, p1);
  }
};
$$.BoundClosure3 = {"": "Closure;self,target",
  call$0: function() {
    return this.self[this.target]();
  }
};
$.Strings__toJsStringArray = function(strings) {
  var length, i, string;
  $.checkNull(strings);
  if (!strings.constructor === Array)
    strings = $.List_List$from(strings);
  length = strings.length;
  for (i = 0; i < length; ++i) {
    string = strings[i];
    if (!(typeof string === "string"))
      throw $.$$throw($.ArgumentError$(string));
  }
  return strings;
};

$._callInIsolate = function(isolate, $function) {
  isolate.eval$1($function);
  $globalState.get$topEventLoop().run$0();
};

$._currentIsolate = function() {
  return $globalState.get$currentContext();
};

$.startRootIsolate = function(entry) {
  var t1, rootContext;
  t1 = $._Manager$();
  $._globalState0(t1);
  if ($globalState.get$isWorker() === true)
    return;
  rootContext = $._IsolateContext$();
  $globalState.set$rootContext(rootContext);
  $globalState.set$currentContext(rootContext);
  rootContext.eval$1(entry);
  $globalState.get$topEventLoop().run$0();
};

$._globalState = function() {
  return $globalState;
};

$._globalState0 = function(val) {
  $globalState = val;
};

$._Manager$ = function() {
  var t1 = new $._Manager(0, 0, 1, null, null, null, null, null, null, null, null, null);
  t1._Manager$0();
  return t1;
};

$._IsolateContext$ = function() {
  var t1 = new $._IsolateContext(null, null, null);
  t1._IsolateContext$0();
  return t1;
};

$._EventLoop$ = function() {
  return new $._EventLoop($.Queue_Queue(), 0);
};

$._IsolateEvent$ = function(isolate, fn, message) {
  return new $._IsolateEvent(isolate, fn, message);
};

$._MainManagerStub$ = function() {
  return new $._MainManagerStub();
};

$.IsolateNatives_computeThisScript = function() {
  var scripts, len, i, script, src, t1;
  scripts = document.getElementsByTagName('script');
  for (len = scripts.length, i = 0; i < len; ++i) {
    script = scripts[i];
    src = script && script.src;
    t1 = $.getInterceptor(src);
    if (!(src == null) && t1.endsWith$1(src, "test_controller.js") !== true && t1.endsWith$1(src, "dart.js") !== true)
      return src;
  }
  return;
};

$.IsolateNatives_computeGlobalThis = function() {
  return function() { return this; }();
};

$.IsolateNatives__processWorkerMessage = function(sender, e) {
  var msg, t1, t2, entryPoint, replyTo, context;
  msg = $._deserializeMessage(e.data);
  t1 = $.getInterceptor$JSStringJSArray(msg);
  switch (t1.$index(msg, "command")) {
    case "start":
      t2 = t1.$index(msg, "id");
      $globalState.set$currentManagerId(t2);
      entryPoint = $[t1.$index(msg, "functionName")];
      replyTo = $._deserializeMessage(t1.$index(msg, "replyTo"));
      context = $._IsolateContext$();
      $globalState.get$topEventLoop().enqueue$3(context, new $.IsolateNatives__processWorkerMessage_function(entryPoint, replyTo), "worker-start");
      $globalState.set$currentContext(context);
      $globalState.get$topEventLoop().run$0();
      break;
    case "spawn-worker":
      $.IsolateNatives__spawnWorker(t1.$index(msg, "functionName"), t1.$index(msg, "uri"), t1.$index(msg, "replyPort"));
      break;
    case "message":
      if (!(t1.$index(msg, "port") == null))
        t1.$index(msg, "port").send$2(t1.$index(msg, "msg"), t1.$index(msg, "replyTo"));
      $globalState.get$topEventLoop().run$0();
      break;
    case "close":
      $.IsolateNatives__log("Closing Worker");
      $.remove($globalState.get$managers(), sender.get$id());
      sender.terminate$0();
      $globalState.get$topEventLoop().run$0();
      break;
    case "log":
      $.IsolateNatives__log(t1.$index(msg, "msg"));
      break;
    case "print":
      if ($globalState.get$isWorker() === true)
        $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "print", "msg", msg])));
      else
        $.print(t1.$index(msg, "msg"));
      break;
    case "error":
      throw $.$$throw(t1.$index(msg, "msg"));
  }
};

$.IsolateNatives__log = function(msg) {
  var trace, exception;
  if ($globalState.get$isWorker() === true)
    $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "log", "msg", msg])));
  else
    try {
      $.get$globalThis().console.log(msg);
    } catch (exception) {
      $.unwrapException(exception);
      trace = $.getTraceFromException(exception);
      throw $.$$throw($.Exception_Exception(trace));
    }

};

$.IsolateNatives_spawnFunction = function(topLevelFunction) {
  var name = (topLevelFunction.$name || null);
  if (name == null)
    throw $.$$throw($.UnsupportedError$("only top-level functions can be spawned."));
  return $.IsolateNatives_spawn(name, null, false);
};

$.IsolateNatives_spawn = function(functionName, uri, isLight) {
  var completer, port, signalReply;
  completer = $.Completer_Completer();
  port = $.ReceivePort_ReceivePort();
  port.receive$1(new $.IsolateNatives_spawn_anon(completer, port));
  signalReply = port.toSendPort$0();
  if ($globalState.get$useWorkers() === true && !isLight)
    $.IsolateNatives__startWorker(functionName, uri, signalReply);
  else
    $.IsolateNatives__startNonWorker(functionName, uri, signalReply);
  return $._BufferingSendPort$($globalState.get$currentContext().get$id(), completer.get$future());
};

$.IsolateNatives__startWorker = function(functionName, uri, replyPort) {
  if ($globalState.get$isWorker() === true)
    $globalState.get$mainManager().postMessage$1($._serializeMessage($.makeLiteralMap(["command", "spawn-worker", "functionName", functionName, "uri", uri, "replyPort", replyPort])));
  else
    $.IsolateNatives__spawnWorker(functionName, uri, replyPort);
};

$.IsolateNatives__startNonWorker = function(functionName, uri, replyPort) {
  if (!(uri == null))
    throw $.$$throw($.UnsupportedError$("Currently spawnUri is not supported without web workers."));
  $globalState.get$topEventLoop().enqueue$3($._IsolateContext$(), new $.IsolateNatives__startNonWorker_function(functionName, replyPort), "nonworker start");
};

$.IsolateNatives__startIsolate = function(topLevel, replyTo) {
  $.lazyPort = $.ReceivePort_ReceivePort();
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  replyTo.send$2("spawned", $.lazyPort.toSendPort$0());
  topLevel.call$0();
};

$.IsolateNatives__spawnWorker = function(functionName, uri, replyPort) {
  var worker, t1, workerId;
  if (functionName == null)
    functionName = "main";
  if (uri == null)
    uri = $.get$IsolateNatives_thisScript();
  worker = new Worker(uri);
  worker.set$onmessage(function(e) { $.IsolateNatives__processWorkerMessage.call$2(worker, e); });
  t1 = $globalState;
  workerId = t1.get$nextManagerId();
  t1.set$nextManagerId($.$$add(workerId, 1));
  worker.set$id(workerId);
  $.$$indexSet($globalState.get$managers(), workerId, worker);
  worker.postMessage$1($._serializeMessage($.makeLiteralMap(["command", "start", "id", workerId, "replyTo", $._serializeMessage(replyPort), "functionName", functionName])));
};

$._NativeJsSendPort$ = function(_receivePort, isolateId) {
  return new $._NativeJsSendPort(_receivePort, isolateId);
};

$._WorkerSendPort$ = function(_workerId, isolateId, _receivePortId) {
  return new $._WorkerSendPort(_workerId, _receivePortId, isolateId);
};

$._BufferingSendPort$ = function(isolateId, _futurePort) {
  var t1 = new $._BufferingSendPort($._BufferingSendPort__idCount, null, _futurePort, [], isolateId);
  t1._BufferingSendPort$2(isolateId, _futurePort);
  return t1;
};

$.ReceivePortImpl$ = function() {
  var t1 = $.ReceivePortImpl__nextFreeId;
  $.ReceivePortImpl__nextFreeId = $.$$add(t1, 1);
  t1 = new $.ReceivePortImpl(t1, null);
  t1.ReceivePortImpl$0();
  return t1;
};

$._waitForPendingPorts = function(message, callback) {
  var finder = $._PendingSendPortFinder$();
  finder.traverse$1(message);
  $._FutureImpl__FutureImpl$wait(finder.ports).then$1(new $._waitForPendingPorts_anon(callback));
};

$._PendingSendPortFinder$ = function() {
  var t1 = new $._PendingSendPortFinder([], $._MessageTraverserVisitedMap$());
  t1._PendingSendPortFinder$0();
  return t1;
};

$._serializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsSerializer$().traverse$1(message);
  else
    return $._JsCopier$().traverse$1(message);
};

$._deserializeMessage = function(message) {
  if ($globalState.get$needSerialization() === true)
    return $._JsDeserializer$().deserialize$1(message);
  else
    return message;
};

$._JsSerializer$ = function() {
  var t1 = new $._JsSerializer(0, $._MessageTraverserVisitedMap$());
  t1._JsSerializer$0();
  return t1;
};

$._JsCopier$ = function() {
  var t1 = new $._JsCopier($._MessageTraverserVisitedMap$());
  t1._JsCopier$0();
  return t1;
};

$._JsDeserializer$ = function() {
  return new $._JsDeserializer(null);
};

$._JsVisitedMap$ = function() {
  return new $._JsVisitedMap(null);
};

$._MessageTraverserVisitedMap$ = function() {
  return new $._MessageTraverserVisitedMap();
};

$.TimerImpl$ = function(milliseconds, callback) {
  var t1 = new $.TimerImpl(true, false, null);
  t1.TimerImpl$2(milliseconds, callback);
  return t1;
};

$.hasTimer = function() {
  return !($.get$globalThis().setTimeout == null);
};

$.checkMutable = function(list, reason) {
  if (!!(list.immutable$list))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.checkGrowable = function(list, reason) {
  if (!!(list.fixed$length))
    throw $.$$throw($.UnsupportedError$(reason));
};

$.S = function(value) {
  var t1;
  if (typeof value === "string")
    return value;
  if (typeof value === "number" && !(value === 0) || typeof value === "boolean")
    return String(value);
  if (value == null)
    return "null";
  t1 = $.toString(value);
  if (!(typeof t1 === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return t1;
};

$.createInvocationMirror = function(name, internalName, type, arguments, argumentNames) {
  return $.JSInvocationMirror$(name, internalName, type, arguments, argumentNames);
};

$.JSInvocationMirror$ = function(memberName, _internalName, _kind, _arguments, _namedArgumentNames) {
  return new $.JSInvocationMirror(memberName, _internalName, _kind, _arguments, _namedArgumentNames, null);
};

$.Primitives_objectHashCode = function(object) {
  var hash = object.$identityHash;
  if (hash == null) {
    hash = $.$$add($.Primitives_hashCodeSeed, 1);
    $.Primitives_hashCodeSeed = hash;
    object.$identityHash = hash;
  }
  return hash;
};

$.Primitives_printString = function(string) {
  if (typeof dartPrint == "function") {
    dartPrint(string);
    return;
  }
  if (typeof window == "object") {
    if (typeof console == "object")
      console.log(string);
    return;
  }
  if (typeof print == "function") {
    print(string);
    return;
  }
  throw 'Unable to print message: ' + String(string);
};

$.Primitives__throwFormatException = function(string) {
  throw $.$$throw($.FormatException$(string));
};

$.Primitives_parseInt = function(source, radix, handleError) {
  var match, t1, maxCharCode, t2, i;
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  $.checkString(source);
  match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
  if (radix == null) {
    t1 = $.getInterceptor(match);
    if (!(match == null)) {
      if (!(t1.$index(match, 2) == null))
        return parseInt(source, 16);
      if (!(t1.$index(match, 3) == null))
        return parseInt(source, 10);
      return handleError.call$1(source);
    }
    radix = 10;
  } else {
    if (!(typeof radix === "number" && Math.floor(radix) === radix))
      throw $.$$throw($.ArgumentError$("Radix is not an integer"));
    if (radix < 2 || radix > 36)
      throw $.$$throw($.RangeError$("Radix " + $.S(radix) + " not in range 2..36"));
    t1 = $.getInterceptor(match);
    if (!(match == null)) {
      if (radix === 10 && !(t1.$index(match, 3) == null))
        return parseInt(source, 10);
      if (radix < 10 || t1.$index(match, 3) == null) {
        maxCharCode = radix <= 10 ? 48 + radix - 1 : 97 + radix - 10 - 1;
        t2 = $.toLowerCase(t1.$index(match, 1));
        for (t1 = $.getInterceptor$JSStringJSArray(t2), i = 0; $.CONSTANT2.$lt(i, t1.get$length(t2)); ++i)
          if ($.$$gt(t1.charCodeAt$1(t2, i), maxCharCode) === true)
            return handleError.call$1(source);
      }
    }
    radix = radix;
  }
  if (match == null)
    return handleError.call$1(source);
  return parseInt(source, radix);
};

$.Primitives_parseDouble = function(source, handleError) {
  var result;
  $.checkString(source);
  if (handleError == null)
    handleError = $.Primitives__throwFormatException;
  if (!/^\s*(?:NaN|[+-]?(?:Infinity|(?:\.\d+|\d+(?:\.\d+)?)(?:[eE][+-]?\d+)?))\s*$/.test(source))
    return handleError.call$1(source);
  result = parseFloat(source);
  if ($.CONSTANT4.get$isNaN(result) === true && $.$$eq(source, "NaN") !== true)
    return handleError.call$1(source);
  return result;
};

$.Primitives_objectTypeName = function(object) {
  var name, decompiled, t1;
  name = $.constructorNameFallback(object);
  if ($.$$eq(name, "Object") === true) {
    decompiled = String(object.constructor).match(/^\s*function\s*(\S*)\s*\(/)[1];
    if (typeof decompiled === "string")
      name = decompiled;
  }
  t1 = $.getInterceptor$JSString(name);
  return t1.charCodeAt$1(name, 0) === 36 ? t1.substring$1(name, 1) : name;
};

$.Primitives_newFixedList = function(length) {
  var result = new Array(length);
  result.fixed$length = true;
  return result;
};

$.Primitives_dateNow = function() {
  return Date.now();
};

$.Primitives__fromCharCodeApply = function(array) {
  var end, t1, i, result, subarray, t2;
  end = array.length;
  for (t1 = end <= 500, i = 0, result = ""; i < end; i += 500) {
    if (t1)
      subarray = array;
    else {
      t2 = i + 500;
      t2 = t2 < end ? t2 : end;
      subarray = array.slice(i, t2);
    }
    result = result + String.fromCharCode.apply(null, subarray);
  }
  return result;
};

$.Primitives_stringFromCodePoints = function(codePoints) {
  var a, t1, t2;
  a = [];
  for (t1 = $.CONSTANT1.get$iterator(codePoints); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 <= 65535)
      a.push(t2);
    else if (t2 <= 1114111) {
      a.push(55296 + ($.CONSTANT2.$shr(t2 - 65536, 10) & 1023));
      a.push(56320 + (t2 & 1023));
    } else
      throw $.$$throw($.ArgumentError$(t2));
  }
  return $.Primitives__fromCharCodeApply(a);
};

$.Primitives_stringFromCharCodes = function(charCodes) {
  var t1, t2;
  for (t1 = $.CONSTANT1.get$iterator(charCodes); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (!(typeof t2 === "number" && Math.floor(t2) === t2))
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 < 0)
      throw $.$$throw($.ArgumentError$(t2));
    if (t2 > 65535)
      return $.Primitives_stringFromCodePoints(charCodes);
  }
  return $.Primitives__fromCharCodeApply(charCodes);
};

$.Primitives_lazyAsJsDate = function(receiver) {
  if (receiver.date === (void 0))
    receiver.date = new Date(receiver.millisecondsSinceEpoch);
  return receiver.date;
};

$.Primitives_getYear = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0) : ($.Primitives_lazyAsJsDate(receiver).getFullYear() + 0);
};

$.Primitives_getMonth = function(receiver) {
  return receiver.isUtc === true ? $.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : $.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
};

$.Primitives_getDay = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0) : ($.Primitives_lazyAsJsDate(receiver).getDate() + 0);
};

$.Primitives_getHours = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0) : ($.Primitives_lazyAsJsDate(receiver).getHours() + 0);
};

$.Primitives_getMinutes = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMinutes() + 0);
};

$.Primitives_getSeconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getSeconds() + 0);
};

$.Primitives_getMilliseconds = function(receiver) {
  return receiver.isUtc === true ? ($.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0) : ($.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0);
};

$.iae = function(argument) {
  throw $.$$throw($.ArgumentError$(argument));
};

$.ioore = function(index) {
  throw $.$$throw($.RangeError$value(index));
};

$.checkNull = function(object) {
  if (object == null)
    throw $.$$throw($.ArgumentError$(null));
  return object;
};

$.checkNum = function(value) {
  if (!(typeof value === "number"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.checkString = function(value) {
  if (!(typeof value === "string"))
    throw $.$$throw($.ArgumentError$(value));
  return value;
};

$.$$throw = function(ex) {
  var wrapper;
  if (ex == null)
    ex = $.CONSTANT;
  wrapper = $.DartError$(ex);
  if (!!Error.captureStackTrace)
    Error.captureStackTrace(wrapper, $.$$throw);
  else
    wrapper.stack = new Error().stack;
  return wrapper;
};

$.DartError$ = function(dartException) {
  var t1 = new $.DartError();
  t1.DartError$1(dartException);
  return t1;
};

$.DartError_toStringWrapper = function() {
  return $.toString(this);
};

$.unwrapException = function(ex) {
  var message, type, name, t1, ieErrorCode, ieFacilityNumber, t2;
  if ("dartException" in ex)
    return ex.dartException;
  message = ex.message;
  if (ex instanceof TypeError) {
    type = ex.type;
    name = ex.arguments ? ex.arguments[0] : "";
    if (message.indexOf("JSNull") === -1) {
      t1 = $.getInterceptor(type);
      t1 = t1.$eq(type, "property_not_function") === true || t1.$eq(type, "called_non_callable") === true || t1.$eq(type, "non_object_property_call") === true || t1.$eq(type, "non_object_property_load") === true;
    } else
      t1 = true;
    if (t1)
      return $.NoSuchMethodError$(null, name, [], $.makeLiteralMap([]), null);
    else if ($.$$eq(type, "undefined_method") === true)
      return $.NoSuchMethodError$("", name, [], $.makeLiteralMap([]), null);
    ieErrorCode = ex.number & 0xffff;
    ieFacilityNumber = ex.number>>16 & 0x1FFF;
    t1 = typeof message === "string";
    if (t1)
      if ($.CONSTANT0.endsWith$1(message, "is null") === true || $.CONSTANT0.endsWith$1(message, "is undefined") === true || $.CONSTANT0.endsWith$1(message, "is null or undefined") === true || $.CONSTANT0.endsWith$1(message, "of undefined") === true || $.CONSTANT0.endsWith$1(message, "of null") === true)
        return $.NoSuchMethodError$(null, "<unknown>", [], $.makeLiteralMap([]), null);
      else {
        if (message.indexOf(" has no method ") === -1)
          if (message.indexOf(" is not a function") === -1)
            t2 = ieErrorCode === 438 && ieFacilityNumber === 10;
          else
            t2 = true;
        else
          t2 = true;
        if (t2)
          return $.NoSuchMethodError$("", "<unknown>", [], $.makeLiteralMap([]), null);
      }
    return $.Exception_Exception(t1 ? message : "");
  }
  if (ex instanceof RangeError) {
    if (typeof message === "string" && message.indexOf("call stack") !== -1)
      return $.StackOverflowError$();
    return $.ArgumentError$(null);
  }
  if (typeof InternalError == 'function' && ex instanceof InternalError)
    if (typeof message === "string" && message === "too much recursion")
      return $.StackOverflowError$();
  return ex;
};

$.getTraceFromException = function(exception) {
  return $.StackTrace$(exception.stack);
};

$.StackTrace$ = function(stack) {
  return new $.StackTrace(stack);
};

$.makeLiteralMap = function(keyValuePairs) {
  var iterator, result, t1, key;
  iterator = $.CONSTANT1.get$iterator(keyValuePairs);
  result = $.LinkedHashMap_LinkedHashMap();
  for (t1 = $.getInterceptor$JSArray(result); iterator.moveNext$0() === true;) {
    key = iterator.get$current();
    iterator.moveNext$0();
    t1.$indexSet(result, key, iterator.get$current());
  }
  return result;
};

$.invokeClosure = function(closure, isolate, numberOfArguments, arg1, arg2) {
  var t1 = $.getInterceptor(numberOfArguments);
  if (t1.$eq(numberOfArguments, 0) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon(closure));
  else if (t1.$eq(numberOfArguments, 1) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon0(closure, arg1));
  else if (t1.$eq(numberOfArguments, 2) === true)
    return $._callInIsolate(isolate, new $.invokeClosure_anon1(closure, arg1, arg2));
  else
    throw $.$$throw($.Exception_Exception("Unsupported number of arguments for wrapped closure"));
};

$.convertDartClosureToJS = function(closure, arity) {
  var $function;
  if (closure == null)
    return;
  $function = closure.$identity;
  if (!!$function)
    return $function;
  $._currentIsolate();
  $function = function($0, $1) { return $.invokeClosure.call$5(closure, $._currentIsolate(), arity, $0, $1); };
  closure.$identity = $function;
  return $function;
};

$.propertyTypeCastError = function(value, property) {
  var t1 = $.getInterceptor$JSStringJSArray(property);
  throw $.$$throw($.CastErrorImplementation$($.Primitives_objectTypeName(value), t1.substring$2(property, 3, t1.get$length(property))));
};

$.propertyTypeCast = function(value, property) {
  if (value == null || !!value[property])
    return value;
  $.propertyTypeCastError(value, property);
};

$.callTypeCast = function(value, property) {
  var t1;
  if (!(value == null))
    t1 = typeof value === "object" && value[property]();
  else
    t1 = true;
  if (t1)
    return value;
  $.propertyTypeCastError(value, property);
};

$.CastErrorImplementation$ = function(actualType, expectedType) {
  return new $.CastErrorImplementation(actualType, expectedType);
};

$.throwCyclicInit = function(staticName) {
  throw $.$$throw($.RuntimeError$("Cyclic initialization for static " + $.S(staticName)));
};

$.typeNameInChrome = function(obj) {
  return $.typeNameInWebKitCommon(obj.constructor.name);
};

$.typeNameInSafari = function(obj) {
  return $.typeNameInWebKitCommon($.constructorNameFallback(obj));
};

$.typeNameInWebKitCommon = function(tag) {
  var name = tag;
  if (name === "Window")
    return "DOMWindow";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "WebKitMutationObserver")
    return "MutationObserver";
  if (name === "AudioChannelMerger")
    return "ChannelMergerNode";
  if (name === "AudioChannelSplitter")
    return "ChannelSplitterNode";
  if (name === "AudioGainNode")
    return "GainNode";
  if (name === "AudioPannerNode")
    return "PannerNode";
  if (name === "JavaScriptAudioNode")
    return "ScriptProcessorNode";
  if (name === "Oscillator")
    return "OscillatorNode";
  if (name === "RealtimeAnalyserNode")
    return "AnalyserNode";
  return name;
};

$.typeNameInOpera = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  return name;
};

$.typeNameInFirefox = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "CSS2Properties")
    return "CSSStyleDeclaration";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "GeoGeolocation")
    return "Geolocation";
  if (name === "MouseScrollEvent")
    return "WheelEvent";
  if (name === "OfflineResourceList")
    return "DOMApplicationCache";
  if (name === "WorkerMessageEvent")
    return "MessageEvent";
  if (name === "XMLDocument")
    return "Document";
  return name;
};

$.typeNameInIE = function(obj) {
  var name = $.constructorNameFallback(obj);
  if (name === "Window")
    return "DOMWindow";
  if (name === "Document") {
    if (!!obj.xmlVersion)
      return "Document";
    return "HTMLDocument";
  }
  if (name === "ApplicationCache")
    return "DOMApplicationCache";
  if (name === "CanvasPixelArray")
    return "Uint8ClampedArray";
  if (name === "DataTransfer")
    return "Clipboard";
  if (name === "DragEvent")
    return "MouseEvent";
  if (name === "HTMLDDElement")
    return "HTMLElement";
  if (name === "HTMLDTElement")
    return "HTMLElement";
  if (name === "HTMLTableDataCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLTableHeaderCellElement")
    return "HTMLTableCellElement";
  if (name === "HTMLPhraseElement")
    return "HTMLElement";
  if (name === "MSStyleCSSProperties")
    return "CSSStyleDeclaration";
  if (name === "MouseWheelEvent")
    return "WheelEvent";
  if (name === "Position")
    return "Geoposition";
  if (name === "Object")
    if (window.DataView && (obj instanceof window.DataView))
      return "DataView";
  return name;
};

$.constructorNameFallback = function(object) {
  var $constructor, name, t1, string;
  if (object == null)
    return "Null";
  $constructor = object.constructor;
  if (typeof($constructor) === "function") {
    name = $constructor.name;
    if (typeof name === "string")
      t1 = !(name === "") && !(name === "Object") && !(name === "Function.prototype");
    else
      t1 = false;
    if (t1)
      return name;
  }
  string = Object.prototype.toString.call(object);
  return string.substring(8, string.length - 1);
};

$.alternateTag = function(object, tag) {
  if (!!/^HTML[A-Z].*Element$/.test(tag)) {
    if (Object.prototype.toString.call(object) === "[object Object]")
      return;
    return "HTMLElement";
  }
  return;
};

$.callHasOwnProperty = function($function, object, property) {
  return $function.call(object, property);
};

$.getFunctionForTypeNameOf = function() {
  if (!(typeof(navigator) === "object"))
    return $.typeNameInChrome;
  var userAgent = navigator.userAgent;
  if (userAgent.indexOf("Chrome") !== -1 || userAgent.indexOf("DumpRenderTree") !== -1)
    return $.typeNameInChrome;
  else if (userAgent.indexOf("Firefox") !== -1)
    return $.typeNameInFirefox;
  else if (userAgent.indexOf("MSIE") !== -1)
    return $.typeNameInIE;
  else if (userAgent.indexOf("Opera") !== -1)
    return $.typeNameInOpera;
  else if (userAgent.indexOf("AppleWebKit") !== -1)
    return $.typeNameInSafari;
  else
    return $.constructorNameFallback;
};

$.getTypeNameOf = function(obj) {
  if ($._getTypeNameOf == null)
    $._getTypeNameOf = $.getFunctionForTypeNameOf();
  return $._getTypeNameOf.call$1(obj);
};

$.toStringForNativeObject = function(obj) {
  return "Instance of " + $.getTypeNameOf(obj);
};

$.hashCodeForNativeObject = function(object) {
  return $.Primitives_objectHashCode(object);
};

$.defineProperty = function(obj, property, value) {
  Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
};

$.dynamicBind = function(obj, name, methods, arguments) {
  var tag, hasOwnPropertyFunction, method, secondTag, proto;
  tag = $.getTypeNameOf(obj);
  hasOwnPropertyFunction = Object.prototype.hasOwnProperty;
  method = $.dynamicBindLookup(hasOwnPropertyFunction, tag, methods);
  if (method == null) {
    secondTag = $.alternateTag(obj, tag);
    if (!(secondTag == null))
      method = $.dynamicBindLookup(hasOwnPropertyFunction, secondTag, methods);
  }
  if (method == null)
    method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, $.getTypeNameOf($.CONSTANT9));
  proto = Object.getPrototypeOf(obj);
  if (method == null)
    method = function () {if (Object.getPrototypeOf(this) === proto) {throw new TypeError(name + " is not a function");} else {return Object.prototype[name].apply(this, arguments);}};
  if ($.callHasOwnProperty(hasOwnPropertyFunction, proto, name) !== true)
    $.defineProperty(proto, name, method);
  return method.apply(obj, arguments);
};

$.dynamicBindLookup = function(hasOwnPropertyFunction, tag, methods) {
  var method, i, entry;
  method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, tag);
  if (method == null && !($._dynamicMetadata0() == null))
    for (i = 0; i < $._dynamicMetadata0().length; ++i) {
      entry = $._dynamicMetadata0()[i];
      if ($.callHasOwnProperty(hasOwnPropertyFunction, entry.get$_set(), tag)) {
        method = $.lookupDynamicClass(hasOwnPropertyFunction, methods, entry.get$_tag());
        if (!(method == null))
          break;
      }
    }
  return method;
};

$.lookupDynamicClass = function(hasOwnPropertyFunction, methods, className) {
  return $.callHasOwnProperty(hasOwnPropertyFunction, methods, className) ? methods[className] : null;
};

$.dynamicFunction = function(name) {
  var f, methods, dartMethod, bind;
  f = Object.prototype[name];
  if (!(f == null) && !!f.methods)
    return f.methods;
  methods = {};
  dartMethod = Object.getPrototypeOf($.CONSTANT9)[name];
  if (!(dartMethod == null))
    methods["Object"] = dartMethod;
  bind = function() {return $.dynamicBind.call$4(this, name, methods, Array.prototype.slice.call(arguments));};
  bind.methods = methods;
  $.defineProperty(Object.prototype, name, bind);
  return methods;
};

$.MetaInfo$ = function(_tag, _tags, _set) {
  return new $.MetaInfo(_tag, _tags, _set);
};

$._dynamicMetadata0 = function() {
  if (typeof($dynamicMetadata) === "undefined")
    $._dynamicMetadata([]);
  return $dynamicMetadata;
};

$._dynamicMetadata = function(table) {
  $dynamicMetadata = table;
};

$.buildDynamicMetadata = function(inputTable) {
  var result, i, tag, tags, set, tagNames, j;
  result = [];
  for (i = 0; i < inputTable.length; ++i) {
    tag = inputTable[i][0];
    tags = inputTable[i][1];
    set = {};
    tagNames = tags.split("|");
    for (j = 0; j < tagNames.length; ++j)
      set[tagNames[j]] = true;
    result.push($.MetaInfo$(tag, tags, set));
  }
  return result;
};

$.dynamicSetMetadata = function(inputTable) {
  var t1 = $.buildDynamicMetadata(inputTable);
  $._dynamicMetadata(t1);
};

$.regExpExec = function(regExp, str) {
  var result = $.regExpGetNative(regExp).exec(str);
  if (result == null)
    return;
  return result;
};

$.regExpTest = function(regExp, str) {
  return $.regExpGetNative(regExp).test(str);
};

$.regExpGetNative = function(regExp) {
  var r = regExp._re;
  return r == null ? regExp._re = $.regExpMakeNative(regExp, false) : r;
};

$.regExpMakeNative = function(regExp, global) {
  var pattern, sb, e, isMultiLine, isCaseSensitive, t1, exception;
  pattern = regExp.get$pattern();
  isMultiLine = regExp.get$isMultiLine();
  isCaseSensitive = regExp.get$isCaseSensitive();
  $.checkString(pattern);
  sb = $.StringBuffer_StringBuffer("");
  if (isMultiLine === true)
    $.add(sb, "m");
  if (isCaseSensitive !== true)
    $.add(sb, "i");
  if (global === true)
    $.add(sb, "g");
  try {
    t1 = new RegExp(pattern, $.toString(sb));
    return t1;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    e = t1;
    throw $.$$throw($.IllegalJSRegExpException$(pattern, String(e)));
  }

};

$.JSSyntaxRegExp$ = function(pattern, caseSensitive, multiLine) {
  return new $.JSSyntaxRegExp(pattern, multiLine, caseSensitive);
};

$.JSSyntaxRegExp__globalVersionOf = function(other) {
  var t1, t2, re;
  t1 = other.get$pattern();
  t2 = other.get$isMultiLine();
  re = $.JSSyntaxRegExp$(t1, other.get$isCaseSensitive(), t2);
  re._re = $.regExpMakeNative(re, true);
  return re;
};

$._MatchImplementation$ = function(pattern, str, start, end, _groups) {
  return new $._MatchImplementation(pattern, str, start, end, _groups);
};

$._AllMatchesIterable$ = function(_re, _str) {
  return new $._AllMatchesIterable(_re, _str);
};

$._AllMatchesIterator$ = function(re, _str) {
  return new $._AllMatchesIterator($.JSSyntaxRegExp__globalVersionOf(re), _str, null);
};

$.StringMatch$ = function(start, str, pattern) {
  return new $.StringMatch(start, str, pattern);
};

$.allMatchesInStringUnchecked = function(needle, haystack) {
  var result, t1, length, patternLength, startIndex, position, t2, endIndex;
  result = $.List_List(0);
  t1 = $.getInterceptor$JSStringJSArray(haystack);
  length = t1.get$length(haystack);
  patternLength = needle.length;
  for (startIndex = 0; true;) {
    position = t1.indexOf$2(haystack, needle, startIndex);
    t2 = $.getInterceptor(position);
    if (t2.$eq(position, -1) === true)
      break;
    result.push($.StringMatch$(position, haystack, needle));
    endIndex = t2.$add(position, patternLength);
    if ($.$$eq(endIndex, length) === true)
      break;
    else
      startIndex = t2.$eq(position, endIndex) === true ? $.$$add(startIndex, 1) : endIndex;
  }
  return result;
};

$.stringContainsUnchecked = function(receiver, other, startIndex) {
  if (typeof other === "string")
    return $.$$eq($.CONSTANT0.indexOf$2(receiver, other, startIndex), -1) !== true;
  else if (typeof other === "object" && other !== null && !!other.$isJSSyntaxRegExp)
    return other.hasMatch$1($.CONSTANT0.substring$1(receiver, startIndex));
  else
    return $.iterator($.allMatches(other, $.CONSTANT0.substring$1(receiver, startIndex))).moveNext$0();
};

$.stringReplaceJS = function(receiver, replacer, to) {
  return receiver.replace(replacer, to.replace('$', '$$$$'));
};

$.stringReplaceAllUnchecked = function(receiver, from, to) {
  var result, length, t1, i;
  $.checkString(to);
  if (from === "")
    if (receiver === "")
      return to;
    else {
      result = $.StringBuffer_StringBuffer("");
      length = receiver.length;
      t1 = $.getInterceptor$JSArray(result);
      t1.add$1(result, to);
      for (i = 0; i < length; ++i) {
        if (i >= receiver.length)
          throw $.ioore(i);
        t1.add$1(result, receiver[i]);
        t1.add$1(result, to);
      }
      return t1.toString$0(result);
    }
  else
    return $.stringReplaceJS(receiver, $.regExpMakeNative($.JSSyntaxRegExp$(from.replace($.regExpMakeNative($.get$quoteRegExp(), true), "\\$&"), true, false), true), to);
};

$.JsStringBuffer$ = function(content) {
  var t1 = typeof content === "string" ? content : $.S(content);
  return new $.JsStringBuffer(t1);
};

$.AsyncError$ = function(error, stackTrace) {
  return new $.AsyncError(error, stackTrace, null);
};

$.AsyncError$withCause = function(error, stackTrace, cause) {
  return new $.AsyncError(error, stackTrace, cause);
};

$.Future_Future$immediate = function(value) {
  return $._FutureImpl$immediate(value);
};

$.Completer_Completer = function() {
  return $._CompleterImpl$();
};

$._CompleterImpl$ = function() {
  return new $._CompleterImpl($._FutureImpl$(), false);
};

$._FutureListener__FutureListener$wrap = function(future) {
  return $._FutureListenerWrapper$(future);
};

$._FutureListenerWrapper$ = function(future) {
  return new $._FutureListenerWrapper(future, null);
};

$._FutureImpl$ = function() {
  return new $._FutureImpl(0, null);
};

$._FutureImpl$immediate = function(value) {
  var t1 = new $._FutureImpl(0, null);
  t1._FutureImpl$immediate$1(value);
  return t1;
};

$._FutureImpl__FutureImpl$wait = function(futures) {
  var t1, t2, completer, values, i, i0;
  t1 = {};
  t2 = $.getInterceptor$JSStringJSArray(futures);
  if (t2.get$isEmpty(futures) === true)
    return $.Future_Future$immediate($.CONSTANT7);
  completer = $.Completer_Completer();
  t1.remaining_0 = t2.get$length(futures);
  values = $.List_List$fixedLength(t2.get$length(futures), null);
  t1.completed_1 = false;
  for (t2 = t2.get$iterator(futures), i = 0; t2.moveNext$0() === true; i = i0) {
    i0 = i + 1;
    t2.get$current().then$1(new $._FutureImpl__FutureImpl$wait_anon(t1, completer, values, i)).catchError$1(new $._FutureImpl__FutureImpl$wait_anon0(t1, completer));
  }
  return completer.get$future();
};

$._ThenFuture$ = function(_onValue) {
  return new $._ThenFuture(_onValue, null, 0, null);
};

$._CatchErrorFuture$ = function(_onError, _test) {
  return new $._CatchErrorFuture(_test, _onError, null, 0, null);
};

$._SubscribeFuture$ = function(onValue, _onError) {
  return new $._SubscribeFuture(_onError, onValue, null, 0, null);
};

$._FutureWrapper$ = function(_future) {
  return new $._FutureWrapper(_future);
};

$.StreamSinkView$ = function(_sink) {
  return new $.StreamSinkView(_sink);
};

$.StreamController$ = function(onPauseStateChange, onSubscriptionStateChange) {
  return new $.StreamController($._SingleControllerStream$(onSubscriptionStateChange, onPauseStateChange));
};

$._SingleControllerStream$ = function(_subscriptionHandler, _pauseHandler) {
  return new $._SingleControllerStream(_subscriptionHandler, _pauseHandler, null, 0, null);
};

$._StreamSubscriptionImpl$ = function(source, _onData, _onError, _onDone, _unsubscribeOnError) {
  var t1 = new $._StreamSubscriptionImpl(_unsubscribeOnError, _onData, _onError, _onDone, source, 0, null, null);
  t1._InternalLink$0();
  return t1;
};

$._nullDataHandler = function(value) {
};

$._nullErrorHandler = function(error) {
  error.throwDelayed$0();
};

$._nullDoneHandler = function() {
};

$._DelayedData$ = function(value) {
  return new $._DelayedData(value, null);
};

$._StreamImplEvents$ = function() {
  return new $._StreamImplEvents(null, null, null);
};

$._DoneSubscription$ = function(_handler) {
  var t1 = new $._DoneSubscription(_handler, null, 0);
  t1._DoneSubscription$1(_handler);
  return t1;
};

$._asyncError = function(error, stackTrace, cause) {
  if (typeof error === "object" && error !== null && !!error.$isAsyncError)
    return error;
  if (cause == null)
    return $.AsyncError$(error, stackTrace);
  return $.AsyncError$withCause(error, stackTrace, cause);
};

$._runUserCode = function(userCode, onSuccess, onError, cause) {
  var result, e, e0, s, exception, t1;
  result = null;
  try {
    result = userCode.call$0();
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isAsyncError) {
      e = t1;
      return onError.call$1(e);
    } else {
      e0 = t1;
      s = $.getTraceFromException(exception);
      if (cause == null)
        onError.call$1($.AsyncError$(e0, s));
      else
        onError.call$1($.AsyncError$withCause(e0, s, cause));
    }
  }

  onSuccess.call$1(result);
};

$._cancelAndError = function(subscription, future) {
  return new $._cancelAndError_anon(subscription, future);
};

$._ForwardingStreamSubscription$ = function(_stream, _onData, _onError, _onDone, unsubscribeOnError) {
  var t1 = new $._ForwardingStreamSubscription(_stream, _onData, _onError, _onDone, null);
  t1._ForwardingStreamSubscription$5(_stream, _onData, _onError, _onDone, unsubscribeOnError);
  return t1;
};

$.WhereStream$ = function(source, test) {
  return new $.WhereStream(test, source);
};

$.Timer_Timer = function(milliseconds, callback) {
  return $.TimerImpl$(milliseconds, callback);
};

$.Arrays_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.IterableMixinWorkaround_contains = function(iterable, element) {
  var t1, t2;
  for (t1 = $.iterator(iterable), t2 = $.getInterceptor(element); t1.moveNext$0() === true;)
    if (t2.$eq(element, t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_any = function(iterable, f) {
  var t1;
  for (t1 = $.iterator(iterable); t1.moveNext$0() === true;)
    if (f.call$1(t1.get$current()) === true)
      return true;
  return false;
};

$.IterableMixinWorkaround_removeAll = function(collection, elementsToRemove) {
  var t1, t2;
  for (t1 = $.iterator(elementsToRemove), t2 = $.getInterceptor$JSArray(collection); t1.moveNext$0() === true;)
    t2.remove$1(collection, t1.get$current());
};

$.IterableMixinWorkaround_removeAllList = function(collection, elementsToRemove) {
  $.removeMatching(collection, $.contains(typeof elementsToRemove === "object" && elementsToRemove !== null && !!elementsToRemove.$isSet ? elementsToRemove : $.toSet(elementsToRemove)));
};

$.IterableMixinWorkaround_removeMatching = function(collection, test) {
  var elementsToRemove, t1, t2, t3;
  elementsToRemove = [];
  for (t1 = $.getInterceptor$JSArray(collection), t2 = t1.get$iterator(collection); t2.moveNext$0() === true;) {
    t3 = t2.get$current();
    if (test.call$1(t3) === true)
      elementsToRemove.push(t3);
  }
  t1.removeAll$1(collection, elementsToRemove);
};

$.IterableMixinWorkaround_removeMatchingList = function(list, test) {
  var retained, length, i, element, t1, t2, t3;
  if (typeof list !== "object" || list === null || (list.constructor !== Array || !!list.immutable$list) && !list.$isJavaScriptIndexingBehavior())
    return $.IterableMixinWorkaround_removeMatchingList$bailout(1, list, test);
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  t1 = retained.length;
  if (t1 === length)
    return;
  for (t2 = list.length, i = 0; i < t1; ++i) {
    t3 = retained[i];
    if (i >= t2)
      throw $.ioore(i);
    list[i] = t3;
  }
  $.CONSTANT1.set$length(list, t1);
};

$.IterableMixinWorkaround_removeMatchingList$bailout = function(state0, list, test) {
  var retained, length, i, element, t1;
  retained = [];
  length = list.length;
  for (i = 0; i < length; ++i) {
    if (i >= list.length)
      throw $.ioore(i);
    element = list[i];
    if (test.call$1(element) !== true)
      retained.push(element);
    if (length !== list.length)
      throw $.$$throw($.ConcurrentModificationError$(list));
  }
  if (retained.length === length)
    return;
  for (i = 0; t1 = retained.length, i < t1; ++i)
    $.CONSTANT1.$indexSet(list, i, retained[i]);
  $.CONSTANT1.set$length(list, t1);
};

$.IterableMixinWorkaround_joinList = function(list, separator) {
  var t1, buffer, i;
  if (typeof list !== "string" && (typeof list !== "object" || list === null || list.constructor !== Array && !list.$isJavaScriptIndexingBehavior()))
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if (typeof separator !== "string")
    return $.IterableMixinWorkaround_joinList$bailout(1, list, separator);
  if ($.isEmpty(list) === true)
    return "";
  t1 = list.length;
  if (t1 === 1) {
    if (0 >= t1)
      throw $.ioore(0);
    return $.S(list[0]);
  }
  buffer = $.StringBuffer_StringBuffer("");
  if (separator === "")
    for (t1 = $.getInterceptor$JSArray(buffer), i = 0; i < list.length; ++i)
      t1.add$1(buffer, $.S(list[i]));
  else {
    if (0 >= list.length)
      throw $.ioore(0);
    t1 = $.getInterceptor$JSArray(buffer);
    t1.add$1(buffer, $.S(list[0]));
    for (i = 1; i < list.length; ++i) {
      t1.add$1(buffer, separator);
      if (i >= list.length)
        throw $.ioore(i);
      t1.add$1(buffer, $.S(list[i]));
    }
  }
  return $.toString(buffer);
};

$.IterableMixinWorkaround_joinList$bailout = function(state0, list, separator) {
  var t1, buffer, t2, i;
  t1 = $.getInterceptor$JSStringJSArray(list);
  if (t1.get$isEmpty(list) === true)
    return "";
  if ($.$$eq(t1.get$length(list), 1) === true)
    return $.S(t1.$index(list, 0));
  buffer = $.StringBuffer_StringBuffer("");
  if (separator == null || $.$$eq(separator, "") === true)
    for (t2 = $.getInterceptor$JSArray(buffer), i = 0; $.CONSTANT2.$lt(i, t1.get$length(list)); ++i)
      t2.add$1(buffer, $.S(t1.$index(list, i)));
  else {
    t2 = $.getInterceptor$JSArray(buffer);
    t2.add$1(buffer, $.S(t1.$index(list, 0)));
    for (i = 1; $.CONSTANT2.$lt(i, t1.get$length(list)); ++i) {
      t2.add$1(buffer, separator);
      t2.add$1(buffer, $.S(t1.$index(list, i)));
    }
  }
  return $.toString(buffer);
};

$.Collections_collectionToString = function(c) {
  var result = $.StringBuffer_StringBuffer("");
  $.Collections__emitCollection(c, result, $.List_List(0));
  return $.toString(result);
};

$.Collections__emitCollection = function(c, result, visiting) {
  var t1, isList, t2, t3, first, t4;
  t1 = $.getInterceptor$JSArray(visiting);
  t1.add$1(visiting, c);
  isList = typeof c === "object" && c !== null && (c.constructor === Array || c.$isList());
  t2 = isList ? "[" : "{";
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, t2);
  for (t2 = $.iterator(c), first = true; t2.moveNext$0() === true; first = false) {
    t4 = t2.get$current();
    if (!first)
      t3.add$1(result, ", ");
    $.Collections__emitObject(t4, result, visiting);
  }
  t3.add$1(result, isList ? "]" : "}");
  t1.removeLast$0(visiting);
};

$.Collections__emitObject = function(o, result, visiting) {
  if (typeof o === "object" && o !== null && (o.constructor === Array || o.$isCollection()))
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, typeof o === "object" && o !== null && (o.constructor === Array || o.$isList()) ? "[...]" : "{...}");
    else
      $.Collections__emitCollection(o, result, visiting);
  else if (typeof o === "object" && o !== null && o.$isMap())
    if ($.Collections__containsRef(visiting, o) === true)
      $.add(result, "{...}");
    else
      $.Maps__emitMap(o, result, visiting);
  else
    $.add(result, o);
};

$.Collections__containsRef = function(c, ref) {
  var t1, t2;
  for (t1 = $.iterator(c); t1.moveNext$0() === true;) {
    t2 = t1.get$current();
    if (t2 == null ? ref == null : t2 === ref)
      return true;
  }
  return false;
};

$.HashMap_HashMap = function() {
  return $._HashMapImpl$();
};

$.LinkedHashMap_LinkedHashMap = function() {
  return $._LinkedHashMapImpl$();
};

$._HashMapImpl$ = function() {
  var t1 = new $._HashMapImpl(null, null, null, null, null);
  t1._HashMapImpl$0();
  return t1;
};

$._HashMapImpl__computeLoadLimit = function(capacity) {
  return $.CONSTANT2.$tdiv(capacity * 3, 4);
};

$._HashMapImpl__nextProbe = function(currentProbe, numberOfProbes, length) {
  return $.$$and($.$$add(currentProbe, numberOfProbes), $.$$sub(length, 1));
};

$._HashMapImplKeyIterable$ = function(_map) {
  return new $._HashMapImplKeyIterable(_map);
};

$._HashMapImplValueIterable$ = function(_map) {
  return new $._HashMapImplValueIterable(_map);
};

$._HashMapImplKeyIterator$ = function(map) {
  return new $._HashMapImplKeyIterator(map, -1, null);
};

$._HashMapImplValueIterator$ = function(map) {
  return new $._HashMapImplValueIterator(map, -1, null);
};

$._HashMapImplIndexIterator$ = function(map) {
  return new $._HashMapImplIndexIterator(map, -1, null);
};

$._KeyValuePair$ = function(key, value) {
  return new $._KeyValuePair(key, value);
};

$._LinkedHashMapImpl$ = function() {
  var t1 = new $._LinkedHashMapImpl(null, null);
  t1._LinkedHashMapImpl$0();
  return t1;
};

$.Maps_mapToString = function(m) {
  var result = $.StringBuffer_StringBuffer("");
  $.Maps__emitMap(m, result, $.List_List(0));
  return $.toString(result);
};

$.Maps__emitMap = function(m, result, visiting) {
  var t1, t2, t3;
  t1 = {};
  t2 = $.getInterceptor$JSArray(visiting);
  t2.add$1(visiting, m);
  t3 = $.getInterceptor$JSArray(result);
  t3.add$1(result, "{");
  t1.first_0 = true;
  $.forEach(m, new $.Maps__emitMap_anon(t1, result, visiting));
  t3.add$1(result, "}");
  t2.removeLast$0(visiting);
};

$.Queue_Queue = function() {
  return $.DoubleLinkedQueue$();
};

$.Queue_Queue$from = function(other) {
  return $.DoubleLinkedQueue_DoubleLinkedQueue$from(other);
};

$.DoubleLinkedQueueEntry$ = function(e) {
  var t1 = new $.DoubleLinkedQueueEntry(null, null, null);
  t1.DoubleLinkedQueueEntry$1(e);
  return t1;
};

$._DoubleLinkedQueueEntrySentinel$ = function() {
  var t1 = new $._DoubleLinkedQueueEntrySentinel(null, null, null);
  t1.DoubleLinkedQueueEntry$1(null);
  t1._DoubleLinkedQueueEntrySentinel$0();
  return t1;
};

$.DoubleLinkedQueue$ = function() {
  var t1 = new $.DoubleLinkedQueue(null);
  t1.DoubleLinkedQueue$0();
  return t1;
};

$.DoubleLinkedQueue_DoubleLinkedQueue$from = function(other) {
  var list, t1;
  list = $.DoubleLinkedQueue$();
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.addLast$1(t1.get$current());
  return list;
};

$._DoubleLinkedQueueIterator$ = function(sentinel) {
  return new $._DoubleLinkedQueueIterator(sentinel, sentinel, null);
};

$.HashSet$ = function() {
  return new $.HashSet($._HashMapImpl$());
};

$.HashSet_HashSet$from = function(other) {
  var set, t1;
  set = $.HashSet$();
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    set.add$1(t1.get$current());
  return set;
};

$._HashSetIterator$ = function(set) {
  return new $._HashSetIterator($.CONSTANT1.get$iterator(set._backingMap._keys));
};

$.MappedIterable$ = function(_iterable, _f) {
  return new $.MappedIterable(_iterable, _f);
};

$.MappedIterator$ = function(_iterator, _f) {
  return new $.MappedIterator(null, _iterator, _f);
};

$.WhereIterable$ = function(_iterable, _f) {
  return new $.WhereIterable(_iterable, _f);
};

$.WhereIterator$ = function(_iterator, _f) {
  return new $.WhereIterator(_iterator, _f);
};

$.ListIterator$ = function(list) {
  return new $.ListIterator(list, list.length, -1, null);
};

$.Date_Date$now = function() {
  return $.DateTime_DateTime$now();
};

$.DateTime_DateTime$now = function() {
  return $.DateTime$_now();
};

$.DateTime$fromMillisecondsSinceEpoch = function(millisecondsSinceEpoch, isUtc) {
  var t1 = new $.DateTime(millisecondsSinceEpoch, isUtc);
  t1.DateTime$fromMillisecondsSinceEpoch$2$isUtc(millisecondsSinceEpoch, isUtc);
  return t1;
};

$.DateTime$_now = function() {
  var t1 = new $.DateTime($.Primitives_dateNow(), false);
  t1.DateTime$_now$0();
  return t1;
};

$.double_parse = function(source, handleError) {
  return $.Primitives_parseDouble(source, handleError);
};

$.Error_safeToString = function(object) {
  if (typeof object === "number" && Math.floor(object) === object || typeof object === "number" || typeof object === "boolean" || null == object)
    return $.toString(object);
  if (typeof object === "string")
    return "\"" + $.S($.replaceAll($.replaceAll($.replaceAll($.CONSTANT0.replaceAll$2(object, "\\", "\\\\"), "\n", "\\n"), "\r", "\\r"), "\"", "\\\"")) + "\"";
  return "Instance of '" + $.S($.Primitives_objectTypeName(object)) + "'";
};

$.ArgumentError$ = function(message) {
  return new $.ArgumentError(message);
};

$.RangeError$ = function(message) {
  return new $.RangeError(message);
};

$.RangeError$value = function(value) {
  return new $.RangeError("value " + $.S(value));
};

$.NoSuchMethodError$ = function(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames) {
  return new $.NoSuchMethodError(_receiver, _memberName, _arguments, _namedArguments, existingArgumentNames);
};

$.UnsupportedError$ = function(message) {
  return new $.UnsupportedError(message);
};

$.UnimplementedError$ = function(message) {
  return new $.UnimplementedError(message);
};

$.StateError$ = function(message) {
  return new $.StateError(message);
};

$.ConcurrentModificationError$ = function(modifiedObject) {
  return new $.ConcurrentModificationError(modifiedObject);
};

$.StackOverflowError$ = function() {
  return new $.StackOverflowError();
};

$.RuntimeError$ = function(message) {
  return new $.RuntimeError(message);
};

$.Exception_Exception = function(message) {
  return $._ExceptionImplementation$(message);
};

$._ExceptionImplementation$ = function(message) {
  return new $._ExceptionImplementation(message);
};

$.FormatException$ = function(message) {
  return new $.FormatException(message);
};

$.IllegalJSRegExpException$ = function(_pattern, _errmsg) {
  return new $.IllegalJSRegExpException(_pattern, _errmsg);
};

$.int_parse = function(source, onError, radix) {
  return $.Primitives_parseInt(source, radix, onError);
};

$.List_List = function(length) {
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  return new Array(length);
};

$.List_List$fixedLength = function(length, fill) {
  var result, t1, i;
  if (!(typeof length === "number" && Math.floor(length) === length) || length < 0)
    throw $.$$throw($.ArgumentError$("Length must be a positive integer: " + $.S(length) + "."));
  result = $.Primitives_newFixedList(length);
  if (typeof result !== "object" || result === null || (result.constructor !== Array || !!result.immutable$list) && !result.$isJavaScriptIndexingBehavior())
    return $.List_List$fixedLength$bailout(1, length, fill, result);
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = result.length, i = 0; i < t1; ++i)
      result[i] = fill;
  return result;
};

$.List_List$fixedLength$bailout = function(state0, length, fill, result) {
  var t1, i;
  if ($.$$eq(length, 0) !== true && !(fill == null))
    for (t1 = $.getInterceptor$JSStringJSArray(result), i = 0; $.CONSTANT2.$lt(i, t1.get$length(result)); ++i)
      t1.$indexSet(result, i, fill);
  return result;
};

$.List_List$from = function(other) {
  var list, t1;
  list = $.List_List(0);
  for (t1 = $.iterator(other); t1.moveNext$0() === true;)
    list.push(t1.get$current());
  return list;
};

$.Map_Map = function() {
  return $.HashMap_HashMap();
};

$.print = function(object) {
  if (typeof object === "string")
    $.Primitives_printString(object);
  else
    $.Primitives_printString($.toString(object));
};

$.RegExp_RegExp = function(pattern, caseSensitive, multiLine) {
  return $.JSSyntaxRegExp$(pattern, caseSensitive, multiLine);
};

$.Set_Set = function() {
  return $.HashSet$();
};

$.Set_Set$from = function(other) {
  return $.HashSet_HashSet$from(other);
};

$.String_String$fromCharCodes = function(charCodes) {
  if (!charCodes.constructor === Array)
    charCodes = $.List_List$from(charCodes);
  return $.Primitives_stringFromCharCodes(charCodes);
};

$.StringBuffer_StringBuffer = function(content) {
  return $.JsStringBuffer$(content);
};

$.Strings_join = function(strings, separator) {
  $.checkNull(strings);
  return $.Strings__toJsStringArray(strings).join(separator);
};

$.window = function() {
  return window;
};

$._ChildrenElementList$_wrap = function(element) {
  return new $._ChildrenElementList(element, element.get$$$dom_children());
};

$._FrozenElementList$_wrap = function(_nodeList) {
  return new $._FrozenElementList(_nodeList);
};

$._FrozenElementListIterator$ = function(_list) {
  return new $._FrozenElementListIterator(_list, -1, null);
};

$._ElementCssClassSet$ = function(_element) {
  return new $._ElementCssClassSet(_element);
};

$.Element_Element$tag = function(tag) {
  return document.createElement(tag);
};

$._ChildNodeListLazy$ = function(_this) {
  return new $._ChildNodeListLazy(_this);
};

$.OListElement_OListElement = function() {
  return document.$$dom_createElement$1("ol");
};

$.ParagraphElement_ParagraphElement = function() {
  return document.$$dom_createElement$1("p");
};

$._ElementAttributeMap$ = function(element) {
  return new $._ElementAttributeMap(element);
};

$._DataAttributeMap$ = function($$dom_attributes) {
  return new $._DataAttributeMap($$dom_attributes);
};

$._Device_userAgent = function() {
  return $.window().get$navigator().get$userAgent();
};

$._Device_isOpera = function() {
  return $.contains1($._Device_userAgent(), "Opera", 0);
};

$._Device_isWebKit = function() {
  return $._Device_isOpera() !== true && $.contains1($._Device_userAgent(), "WebKit", 0) === true;
};

$._EventStream$ = function(_target, _eventType, _useCapture) {
  return new $._EventStream(_target, _eventType, _useCapture);
};

$._EventStreamSubscription$ = function(_target, _eventType, _onData, _useCapture) {
  var t1 = new $._EventStreamSubscription(0, _target, _eventType, _onData, _useCapture);
  t1._EventStreamSubscription$4(_target, _eventType, _onData, _useCapture);
  return t1;
};

$._convertNativeToDart_Window = function(win) {
  return $._DOMWindowCrossFrame__createSafe(win);
};

$._DOMWindowCrossFrame$ = function(_window) {
  return new $._DOMWindowCrossFrame(_window);
};

$._DOMWindowCrossFrame__createSafe = function(w) {
  var t1 = window;
  if (w == null ? t1 == null : w === t1)
    return w;
  else
    return $._DOMWindowCrossFrame$(w);
};

$.FixedSizeListIterator$ = function(array) {
  return new $.FixedSizeListIterator(array, $.length(array), -1, null);
};

$.FilteredElementList$ = function(node) {
  return new $.FilteredElementList(node, node.get$nodes());
};

$.Lists_indexOf = function(a, element, startIndex, endIndex) {
  var i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof startIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (typeof endIndex !== "number")
    return $.Lists_indexOf$bailout(1, a, element, startIndex, endIndex);
  if (startIndex >= a.length)
    return -1;
  if (startIndex < 0)
    startIndex = 0;
  for (i = startIndex; i < endIndex; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    if ($.$$eq(a[i], element) === true)
      return i;
  }
  return -1;
};

$.Lists_indexOf$bailout = function(state0, a, element, startIndex, endIndex) {
  var t1, t2, i;
  t1 = $.getInterceptor$JSStringJSArray(a);
  t2 = $.getInterceptor$JSNumber(startIndex);
  if (t2.$ge(startIndex, t1.get$length(a)) === true)
    return -1;
  if (t2.$lt(startIndex, 0) === true)
    startIndex = 0;
  for (i = startIndex; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, endIndex) === true; i = t2.$add(i, 1))
    if ($.$$eq(t1.$index(a, i), element) === true)
      return i;
  return -1;
};

$.Lists_getRange = function(a, start, length, accumulator) {
  var end, i;
  if (typeof a !== "string" && (typeof a !== "object" || a === null || a.constructor !== Array && !a.$isJavaScriptIndexingBehavior()))
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if (typeof start !== "number")
    return $.Lists_getRange$bailout(1, a, start, length, accumulator);
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  if (start < 0)
    throw $.$$throw($.RangeError$value(start));
  if (typeof length !== "number")
    throw $.iae(length);
  end = start + length;
  if (end > a.length)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; i < end; ++i) {
    if (i !== (i | 0))
      throw $.iae(i);
    if (i < 0 || i >= a.length)
      throw $.ioore(i);
    accumulator.push(a[i]);
  }
  return accumulator;
};

$.Lists_getRange$bailout = function(state0, a, start, length, accumulator) {
  var t1, end, i, t2;
  if ($.$$lt(length, 0) === true)
    throw $.$$throw($.ArgumentError$("length"));
  t1 = $.getInterceptor$JSNumber(start);
  if (t1.$lt(start, 0) === true)
    throw $.$$throw($.RangeError$value(start));
  end = t1.$add(start, length);
  t1 = $.getInterceptor$JSStringJSArray(a);
  if ($.$$gt(end, t1.get$length(a)) === true)
    throw $.$$throw($.RangeError$value(end));
  for (i = start; t2 = $.getInterceptor$JSNumber(i), t2.$lt(i, end) === true; i = t2.$add(i, 1))
    accumulator.push(t1.$index(a, i));
  return accumulator;
};

$.port = function() {
  return $._Isolate_port();
};

$.spawnFunction = function(topLevelFunction, UnhandledExceptionCallback) {
  return $._Isolate_spawnFunction(topLevelFunction, UnhandledExceptionCallback);
};

$.ReceivePort_ReceivePort = function() {
  return $.ReceivePortImpl$();
};

$._Isolate_port = function() {
  if ($.lazyPort == null)
    $.lazyPort = $.ReceivePort_ReceivePort();
  return $.lazyPort;
};

$._Isolate_spawnFunction = function(topLevelFunction, UnhandledExceptionCallback) {
  return $.IsolateNatives_spawnFunction(topLevelFunction);
};

$.JsonUnsupportedObjectError$ = function(unsupportedObject) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, null);
};

$.JsonUnsupportedObjectError$withCause = function(unsupportedObject, cause) {
  return new $.JsonUnsupportedObjectError(unsupportedObject, cause);
};

$.parse = function(json, reviver) {
  var listener = reviver == null ? $.BuildJsonListener$() : $.ReviverJsonListener$(reviver);
  $.JsonParser$(json, listener).parse$0();
  return listener.get$result();
};

$.BuildJsonListener$ = function() {
  return new $.BuildJsonListener([], null, null, null);
};

$.ReviverJsonListener$ = function(reviver) {
  return new $.ReviverJsonListener(reviver, [], null, null, null);
};

$.JsonParser$ = function(source, listener) {
  return new $.JsonParser(source, listener);
};

$._JsonStringifier$ = function(sb) {
  return new $._JsonStringifier(sb, []);
};

$._JsonStringifier_stringify = function(object) {
  var output = $.StringBuffer_StringBuffer("");
  $._JsonStringifier$(output).stringifyValue$1(object);
  return $.toString(output);
};

$._JsonStringifier_escape = function(sb, s) {
  var t1, length, charCodes, needsEscape, i, charCode, t2, t3;
  t1 = $.getInterceptor$JSStringJSArray(s);
  length = t1.get$length(s);
  charCodes = $.List_List(0);
  for (needsEscape = false, i = 0; $.CONSTANT2.$lt(i, length); ++i) {
    charCode = t1.charCodeAt$1(s, i);
    t2 = $.getInterceptor$JSNumber(charCode);
    if (t2.$lt(charCode, 32) === true) {
      charCodes.push(92);
      switch (charCode) {
        case 8:
          charCodes.push(98);
          break;
        case 9:
          charCodes.push(116);
          break;
        case 10:
          charCodes.push(110);
          break;
        case 12:
          charCodes.push(102);
          break;
        case 13:
          charCodes.push(114);
          break;
        default:
          charCodes.push(117);
          t3 = $.$$and(t2.$shr(charCode, 12), 15);
          if ($.$$lt(t3, 10) === true) {
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t3 = 48 + t3;
          } else {
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t3 = 87 + t3;
          }
          charCodes.push(t3);
          t3 = $.$$and(t2.$shr(charCode, 8), 15);
          if ($.$$lt(t3, 10) === true) {
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t3 = 48 + t3;
          } else {
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t3 = 87 + t3;
          }
          charCodes.push(t3);
          t3 = $.$$and(t2.$shr(charCode, 4), 15);
          if ($.$$lt(t3, 10) === true) {
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t3 = 48 + t3;
          } else {
            if (typeof t3 !== "number")
              throw $.iae(t3);
            t3 = 87 + t3;
          }
          charCodes.push(t3);
          t2 = t2.$and(charCode, 15);
          if ($.$$lt(t2, 10) === true) {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 48 + t2;
          } else {
            if (typeof t2 !== "number")
              throw $.iae(t2);
            t2 = 87 + t2;
          }
          charCodes.push(t2);
          break;
      }
      needsEscape = true;
    } else if (t2.$eq(charCode, 34) === true || t2.$eq(charCode, 92) === true) {
      charCodes.push(92);
      charCodes.push(charCode);
      needsEscape = true;
    } else
      charCodes.push(charCode);
  }
  $.add(sb, needsEscape ? $.String_String$fromCharCodes(charCodes) : s);
};

$.Random_Random = function(seed) {
  return $.CONSTANT6;
};

$._AttributeClassSet$ = function(_element) {
  return new $._AttributeClassSet(_element);
};

$.Points$ = function() {
  return new $.Points(0);
};

$.ScripterImpl$ = function() {
  var t1 = new $.ScripterImpl(null, null, null, null, null, null, null, null, null, null, null, false, null);
  t1.EgbScripter$0();
  t1.ScripterImpl$0();
  return t1;
};

$.EgbScripterPage$ = function(blocks, showOnce, visitOnce) {
  return new $.EgbScripterPage(blocks, 0, null, visitOnce, showOnce);
};

$.EgbScripterPageMap$ = function() {
  var t1 = new $.EgbScripterPageMap(null);
  t1.EgbScripterPageMap$0();
  return t1;
};

$.EgbMessage$ = function(type) {
  return new $.EgbMessage0(type, null, null, null);
};

$.EgbMessage$TextResult = function(str) {
  var t1 = new $.EgbMessage0(4, null, null, null);
  t1.EgbMessage$TextResult$1(str);
  return t1;
};

$.EgbMessage$BookUid = function(strContent) {
  return new $.EgbMessage0(4096, null, strContent, null);
};

$.EgbMessage$EndOfBook = function() {
  return new $.EgbMessage0(32, null, null, null);
};

$.EgbMessage$NoResult = function() {
  return new $.EgbMessage0(256, null, null, null);
};

$.EgbMessage$fromJson = function(json) {
  var t1 = new $.EgbMessage0(null, null, null, null);
  t1.EgbMessage$fromJson$1(json);
  return t1;
};

$.EgbSavegame$ = function(currentPageName, _vars, pageMapState) {
  var t1 = new $.EgbSavegame(currentPageName, pageMapState, null, null, null, null);
  t1.EgbSavegame$3(currentPageName, _vars, pageMapState);
  return t1;
};

$.EgbSavegame$fromJson = function(json) {
  var t1 = new $.EgbSavegame(null, null, null, null, null, null);
  t1.EgbSavegame$fromJson$1(json);
  return t1;
};

$.EgbSavegame_EgbSavegame$fromMessage = function(message) {
  return $.EgbSavegame$fromJson(message.strContent);
};

$.EgbSavegame__isSaveable = function(variable) {
  var primitivelySaveable = variable == null || typeof variable === "string" || typeof variable === "number" && Math.floor(variable) === variable || typeof variable === "number" || typeof variable === "boolean" || typeof variable === "object" && variable !== null && (variable.constructor === Array || variable.$isList()) || typeof variable === "object" && variable !== null && variable.$isMap();
  if (primitivelySaveable)
    return true;
  return $.EgbSavegame__isCustomSaveableClass(variable);
};

$.EgbSavegame__isCustomSaveableClass = function(variable) {
  var customClassSaveable, exception, t1;
  customClassSaveable = null;
  try {
    variable.toMap$0();
    customClassSaveable = true;
  } catch (exception) {
    t1 = $.unwrapException(exception);
    if (typeof t1 === "object" && t1 !== null && !!t1.$isNoSuchMethodError)
      customClassSaveable = false;
    else
      throw exception;
  }

  return $.$$eq(customClassSaveable, true);
};

$.EgbSavegame__dissolveToPrimitives = function(input) {
  var outputList, i, outputMap;
  if (input == null || typeof input === "string" || typeof input === "number" && Math.floor(input) === input || typeof input === "number" || typeof input === "boolean")
    return input;
  else if (typeof input === "object" && input !== null && (input.constructor === Array || input.$isList())) {
    if (typeof input !== "object" || input === null || input.constructor !== Array && !input.$isJavaScriptIndexingBehavior())
      return $.EgbSavegame__dissolveToPrimitives$bailout(1, input);
    outputList = $.List_List(0);
    for (i = 0; i < input.length; ++i)
      if ($.EgbSavegame__isSaveable(input[i]) === true) {
        if (i >= input.length)
          throw $.ioore(i);
        outputList.push($.EgbSavegame__dissolveToPrimitives(input[i]));
      }
    return outputList;
  } else if (typeof input === "object" && input !== null && input.$isMap()) {
    outputMap = $.Map_Map();
    input.forEach$1(new $.EgbSavegame__dissolveToPrimitives_anon(input, outputMap));
    return outputMap;
  } else if ($.EgbSavegame__isCustomSaveableClass(input) === true)
    return $.EgbSavegame__dissolveToPrimitives(input.toMap$0());
  else
    throw $.$$throw("Function _dissolveToPrimitivess called with a non-saveable argument type.");
};

$.EgbSavegame__dissolveToPrimitives$bailout = function(state0, input, t2, outputList, i, t1) {
  switch (state0) {
    case 0:
    default:
      var outputMap;
      if (state0 === 0 && (input == null || typeof input === "string" || typeof input === "number" && Math.floor(input) === input || typeof input === "number" || typeof input === "boolean"))
        return input;
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 2 || state0 === 1 || state0 === 0 && typeof input === "object" && input !== null && (input.constructor === Array || input.$isList()))
              switch (state0) {
                case 0:
                case 1:
                  state0 = 0;
                  outputList = $.List_List(0);
                  t1 = $.getInterceptor$JSStringJSArray(input);
                  i = 0;
                case 2:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          t2 = t1.get$length(input);
                        case 2:
                          state0 = 0;
                          if (!$.CONSTANT2.$lt(i, t2))
                            break L0;
                          if ($.EgbSavegame__isSaveable(t1.$index(input, i)) === true)
                            outputList.push($.EgbSavegame__dissolveToPrimitives(t1.$index(input, i)));
                          ++i;
                      }
                  return outputList;
              }
            else if (typeof input === "object" && input !== null && input.$isMap()) {
              outputMap = $.Map_Map();
              input.forEach$1(new $.EgbSavegame__dissolveToPrimitives_anon(input, outputMap));
              return outputMap;
            } else if ($.EgbSavegame__isCustomSaveableClass(input) === true)
              return $.EgbSavegame__dissolveToPrimitives(input.toMap$0());
            else
              throw $.$$throw("Function _dissolveToPrimitivess called with a non-saveable argument type.");
        }
  }
};

$.EgbSavegame__assembleFromPrimitives = function(input, constructors, updateExisting) {
  var outputList, i, t1, outputMap;
  if (typeof constructors !== "string" && (typeof constructors !== "object" || constructors === null || constructors.constructor !== Array && !constructors.$isJavaScriptIndexingBehavior()))
    return $.EgbSavegame__assembleFromPrimitives$bailout(1, input, constructors, updateExisting);
  if (input == null || typeof input === "string" || typeof input === "number" && Math.floor(input) === input || typeof input === "number" || typeof input === "boolean")
    return input;
  else if (typeof input === "object" && input !== null && (input.constructor === Array || input.$isList())) {
    if (typeof input !== "object" || input === null || input.constructor !== Array && !input.$isJavaScriptIndexingBehavior())
      return $.EgbSavegame__assembleFromPrimitives$bailout(2, input, constructors);
    outputList = $.List_List(0);
    for (i = 0; i < input.length; ++i)
      outputList.push($.EgbSavegame__assembleFromPrimitives(input[i], constructors, null));
    return outputList;
  } else {
    t1 = typeof input === "object" && input !== null && input.$isMap();
    if (t1 && input.containsKey$1("_class") !== true) {
      outputMap = $.Map_Map();
      $.callTypeCast(input, "$isMap").forEach$1(new $.EgbSavegame__assembleFromPrimitives_anon(constructors, outputMap));
      return outputMap;
    } else if (t1 && input.containsKey$1("_class") === true)
      if (!(updateExisting == null)) {
        updateExisting.updateFromMap$1(input);
        return updateExisting;
      } else {
        t1 = $.$$index(input, "_class");
        if (constructors.containsKey$1(t1) !== true)
          throw $.$$throw("Constructor for " + $.S(t1) + " not set. Cannot assemble a new " + "instance.");
        if (t1 !== (t1 | 0))
          throw $.iae(t1);
        if (t1 < 0 || t1 >= constructors.length)
          throw $.ioore(t1);
        return constructors[t1].call$1(input);
      }
    else
      throw $.$$throw("Function _assembleFromPrimitives called with a non-primitive argument type.");
  }
};

$.EgbSavegame__assembleFromPrimitives$bailout = function(state0, input, constructors, updateExisting, t2, outputList, t1, i) {
  switch (state0) {
    case 0:
    case 1:
      state0 = 0;
    default:
      var outputMap;
      if (state0 === 0 && (input == null || typeof input === "string" || typeof input === "number" && Math.floor(input) === input || typeof input === "number" || typeof input === "boolean"))
        return input;
      else
        switch (state0) {
          case 0:
          default:
            if (state0 === 3 || state0 === 2 || state0 === 0 && typeof input === "object" && input !== null && (input.constructor === Array || input.$isList()))
              switch (state0) {
                case 0:
                case 2:
                  state0 = 0;
                  outputList = $.List_List(0);
                  t1 = $.getInterceptor$JSStringJSArray(input);
                  i = 0;
                case 3:
                  L0:
                    while (true)
                      switch (state0) {
                        case 0:
                          t2 = t1.get$length(input);
                        case 3:
                          state0 = 0;
                          if (!$.CONSTANT2.$lt(i, t2))
                            break L0;
                          outputList.push($.EgbSavegame__assembleFromPrimitives(t1.$index(input, i), constructors, null));
                          ++i;
                      }
                  return outputList;
              }
            else {
              t1 = typeof input === "object" && input !== null && input.$isMap();
              if (t1 && input.containsKey$1("_class") !== true) {
                outputMap = $.Map_Map();
                $.callTypeCast(input, "$isMap").forEach$1(new $.EgbSavegame__assembleFromPrimitives_anon(constructors, outputMap));
                return outputMap;
              } else if (t1 && input.containsKey$1("_class") === true)
                if (!(updateExisting == null)) {
                  updateExisting.updateFromMap$1(input);
                  return updateExisting;
                } else {
                  t1 = $.$$index(input, "_class");
                  if (constructors == null || constructors.containsKey$1(t1) !== true)
                    throw $.$$throw("Constructor for " + $.S(t1) + " not set. Cannot assemble a new " + "instance.");
                  return $.$$index(constructors, t1).call$1(input);
                }
              else
                throw $.$$throw("Function _assembleFromPrimitives called with a non-primitive argument type.");
            }
        }
  }
};

$.EgbSavegame_importSavegameToVars = function(savegame, vars, constructors) {
  $.forEach(savegame.get$vars(), new $.EgbSavegame_importSavegameToVars_anon(vars, constructors));
};

$.EgbChoice$ = function(string, $goto, script, showNow) {
  var t1 = new $.EgbChoice(null, null, $goto, null, false, null, null);
  t1.EgbChoice$4$$goto$script$showNow(string, $goto, script, showNow);
  return t1;
};

$.EgbChoiceList$ = function() {
  return new $.EgbChoiceList($.List_List(0), null);
};

$.EgbChoiceList$from = function(iterable) {
  return new $.EgbChoiceList($.List_List$from(iterable), null);
};

$.DEBUG_SCR = function(str) {
};

$.main = function() {
  $.EgbRunner$($.ReceivePort_ReceivePort(), $.spawnFunction($.createScripter, null), $.HtmlInterface$(), $.LocalStorage$().getDefaultPlayerProfile$0()).run$0();
};

$.createScripter = function() {
  $.ScripterImpl$();
};

$.EgbRunner$ = function(_receivePort, _scripterPort, _interface, _playerProfile) {
  var t1 = new $.EgbRunner(_receivePort, _scripterPort, _interface, _playerProfile, false, false, null);
  t1.EgbRunner$4(_receivePort, _scripterPort, _interface, _playerProfile);
  return t1;
};

$.HtmlInterface$ = function() {
  var t1 = new $.HtmlInterface(null, null, null, null, null);
  t1.HtmlInterface$0();
  return t1;
};

$.LocalStorage$ = function() {
  return new $.LocalStorage();
};

$.EgbPlayerProfile$ = function(playerUid, _storage) {
  var t1 = new $.EgbPlayerProfile("prefs", playerUid, null, null, null, _storage, 10);
  t1.EgbPlayerProfile$2(playerUid, _storage);
  return t1;
};

$.EgbMessage$0 = function(type) {
  return new $.EgbMessage(type, null, null, null);
};

$.EgbMessage$Quit = function() {
  return new $.EgbMessage(0, null, null, null);
};

$.EgbMessage$Continue = function() {
  return new $.EgbMessage(1, null, null, null);
};

$.EgbMessage$Start = function() {
  return new $.EgbMessage(16, null, null, null);
};

$.EgbMessage$GetBookUid = function() {
  return new $.EgbMessage(2048, null, null, null);
};

$.EgbMessage$OptionSelected = function(hash) {
  var t1 = new $.EgbMessage(128, null, null, null);
  t1.EgbMessage$OptionSelected$1(hash);
  return t1;
};

$.EgbMessage$fromJson0 = function(json) {
  var t1 = new $.EgbMessage(null, null, null, null);
  t1.EgbMessage$fromJson$1(json);
  return t1;
};

$.EgbSavegame$fromJson0 = function(json) {
  var t1 = new $.EgbSavegame0(null, null, null, null, null, null);
  t1.EgbSavegame$fromJson$1(json);
  return t1;
};

$.EgbSavegame_EgbSavegame$fromMessage0 = function(message) {
  return $.EgbSavegame$fromJson0(message.strContent);
};

$.EgbChoice$0 = function(string, $goto, script, showNow) {
  var t1 = new $.EgbChoice0(null, null, $goto, null, false, null, null);
  t1.EgbChoice$4$$goto$script$showNow(string, $goto, script, showNow);
  return t1;
};

$.EgbChoice$fromMap = function(map) {
  var t1 = new $.EgbChoice0(null, null, null, null, false, null, null);
  t1.EgbChoice$fromMap$1(map);
  return t1;
};

$.EgbChoiceList$fromMessage = function(m) {
  var t1 = new $.EgbChoiceList0($.List_List(0), null);
  t1.EgbChoiceList$fromMessage$1(m);
  return t1;
};

$.RestartIntent$ = function() {
  return new $.RestartIntent(8);
};

$.LoadIntent$ = function(uid) {
  return new $.LoadIntent(uid, 4);
};

$.IsolateNatives__processWorkerMessage.call$2 = $.IsolateNatives__processWorkerMessage;
$.IsolateNatives__processWorkerMessage.$name = "IsolateNatives__processWorkerMessage";
$.Primitives__throwFormatException.call$1 = $.Primitives__throwFormatException;
$.Primitives__throwFormatException.$name = "Primitives__throwFormatException";
$.$$throw.call$1 = $.$$throw;
$.$$throw.$name = "$$throw";
$.DartError_toStringWrapper.call$0 = $.DartError_toStringWrapper;
$.DartError_toStringWrapper.$name = "DartError_toStringWrapper";
$.invokeClosure.call$5 = $.invokeClosure;
$.invokeClosure.$name = "invokeClosure";
$.typeNameInChrome.call$1 = $.typeNameInChrome;
$.typeNameInChrome.$name = "typeNameInChrome";
$.typeNameInSafari.call$1 = $.typeNameInSafari;
$.typeNameInSafari.$name = "typeNameInSafari";
$.typeNameInOpera.call$1 = $.typeNameInOpera;
$.typeNameInOpera.$name = "typeNameInOpera";
$.typeNameInFirefox.call$1 = $.typeNameInFirefox;
$.typeNameInFirefox.$name = "typeNameInFirefox";
$.typeNameInIE.call$1 = $.typeNameInIE;
$.typeNameInIE.$name = "typeNameInIE";
$.constructorNameFallback.call$1 = $.constructorNameFallback;
$.constructorNameFallback.$name = "constructorNameFallback";
$.dynamicBind.call$4 = $.dynamicBind;
$.dynamicBind.$name = "dynamicBind";
$._nullDataHandler.call$1 = $._nullDataHandler;
$._nullDataHandler.$name = "_nullDataHandler";
$._nullErrorHandler.call$1 = $._nullErrorHandler;
$._nullErrorHandler.$name = "_nullErrorHandler";
$._nullDoneHandler.call$0 = $._nullDoneHandler;
$._nullDoneHandler.$name = "_nullDoneHandler";
$.createScripter.call$0 = $.createScripter;
$.createScripter.$name = "createScripter";
Isolate.$finishClasses($$);
$$ = {};
$.List = {builtin$cls: 'List'};
$.Match = {builtin$cls: 'Match'};
$.Set = {builtin$cls: 'Set'};
$.String = {builtin$cls: 'String'};
$.ReceivePort = {builtin$cls: 'ReceivePort'};
$.Element = {builtin$cls: 'Element'};
$.SendPort = {builtin$cls: 'SendPort'};
$.Node = {builtin$cls: 'Node'};
$.Function = {builtin$cls: 'Function'};
$.$int = {builtin$cls: '$int'};
$.bool = {builtin$cls: 'bool'};
$._ManagerStub = {builtin$cls: '_ManagerStub'};
Isolate.makeConstantList = function(list) {
  list.immutable$list = true;
  list.fixed$length = true;
  return list;
};
$.CONSTANT7 = Isolate.makeConstantList([]);
$.CONSTANT1 = new Isolate.$isolateProperties.JSArray();
$.CONSTANT = new Isolate.$isolateProperties.NullThrownError();
$.CONSTANT2 = new Isolate.$isolateProperties.JSInt();
$.CONSTANT9 = new Isolate.$isolateProperties.Object();
$.CONSTANT0 = new Isolate.$isolateProperties.JSString();
$.CONSTANT6 = new Isolate.$isolateProperties._Random();
$.CONSTANT4 = new Isolate.$isolateProperties.JSNumber();
$.CONSTANT5 = new Isolate.$isolateProperties.EventStreamProvider("click");
$.CONSTANT3 = new Isolate.$isolateProperties._DeletedKeySentinel();
$.CONSTANT8 = new Isolate.$isolateProperties._DelayedDone();
$.lazyPort = null;
$._SPAWNED_SIGNAL = "spawned";
$._BufferingSendPort__idCount = 0;
$.ReceivePortImpl__nextFreeId = 1;
$.JSInvocationMirror_METHOD = 0;
$.JSInvocationMirror_GETTER = 1;
$.JSInvocationMirror_SETTER = 2;
$.Primitives_hashCodeSeed = 0;
$.Primitives_DOLLAR_CHAR_VALUE = 36;
$._getTypeNameOf = null;
$._FutureImpl__INCOMPLETE = 0;
$._FutureImpl__VALUE = 1;
$._FutureImpl__ERROR = 2;
$._FutureImpl__UNHANDLED_ERROR = 4;
$._STREAM_OPEN = 0;
$._STREAM_CLOSED = 1;
$._STREAM_COMPLETE = 2;
$._STREAM_EVENT_ID = 4;
$._STREAM_FIRING = 8;
$._STREAM_PAUSE_COUNT_SHIFT = 4;
$._LISTENER_UNSUBSCRIBED = 0;
$._LISTENER_SUBSCRIBED = 1;
$._LISTENER_EVENT_ID_SHIFT = 2;
$._LISTENER_PAUSE_COUNT_SHIFT = 3;
$._HashMapImpl__DELETED_KEY = Isolate.$isolateProperties.CONSTANT3;
$._HashMapImpl__INITIAL_CAPACITY = 8;
$.DateTime__MAX_MILLISECONDS_SINCE_EPOCH = 8640000000000000;
$.Element_clickEvent = Isolate.$isolateProperties.CONSTANT5;
$.JsonParser_INSIDE_ARRAY = 1;
$.JsonParser_INSIDE_OBJECT = 2;
$.JsonParser_AFTER_COLON = 3;
$.JsonParser_ALLOW_STRING_MASK = 8;
$.JsonParser_ALLOW_VALUE_MASK = 4;
$.JsonParser_ALLOW_VALUE = 0;
$.JsonParser_STRING_ONLY = 4;
$.JsonParser_NO_VALUES = 12;
$.JsonParser_EMPTY = 0;
$.JsonParser_NON_EMPTY = 16;
$.JsonParser_VALUE_READ_BITS = 28;
$.JsonParser_STATE_INITIAL = 0;
$.JsonParser_STATE_END = 28;
$.JsonParser_STATE_ARRAY_EMPTY = 1;
$.JsonParser_STATE_ARRAY_VALUE = 29;
$.JsonParser_STATE_ARRAY_COMMA = 17;
$.JsonParser_STATE_OBJECT_EMPTY = 6;
$.JsonParser_STATE_OBJECT_KEY = 30;
$.JsonParser_STATE_OBJECT_COLON = 19;
$.JsonParser_STATE_OBJECT_VALUE = 31;
$.JsonParser_STATE_OBJECT_COMMA = 22;
$.JsonParser_BACKSPACE = 8;
$.JsonParser_TAB = 9;
$.JsonParser_NEWLINE = 10;
$.JsonParser_CARRIAGE_RETURN = 13;
$.JsonParser_FORM_FEED = 12;
$.JsonParser_SPACE = 32;
$.JsonParser_QUOTE = 34;
$.JsonParser_PLUS = 43;
$.JsonParser_COMMA = 44;
$.JsonParser_MINUS = 45;
$.JsonParser_DECIMALPOINT = 46;
$.JsonParser_SLASH = 47;
$.JsonParser_CHAR_0 = 48;
$.JsonParser_CHAR_9 = 57;
$.JsonParser_COLON = 58;
$.JsonParser_CHAR_E = 69;
$.JsonParser_LBRACKET = 91;
$.JsonParser_BACKSLASH = 92;
$.JsonParser_RBRACKET = 93;
$.JsonParser_CHAR_a = 97;
$.JsonParser_CHAR_b = 98;
$.JsonParser_CHAR_e = 101;
$.JsonParser_CHAR_f = 102;
$.JsonParser_CHAR_l = 108;
$.JsonParser_CHAR_n = 110;
$.JsonParser_CHAR_r = 114;
$.JsonParser_CHAR_s = 115;
$.JsonParser_CHAR_t = 116;
$.JsonParser_CHAR_u = 117;
$.JsonParser_LBRACE = 123;
$.JsonParser_RBRACE = 125;
$.EgbStorage_DEFAULT_PLAYER_UID = "default";
$.PlayerIntent_QUIT = 2;
$.PlayerIntent_LOAD = 4;
$.PlayerIntent_RESTART = 8;
$.toString = function(receiver) {
  return $.getInterceptor(receiver).toString$0(receiver);
};
$.$$eq = function(receiver, a0) {
  return $.getInterceptor(receiver).$eq(receiver, a0);
};
$.$$gt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$gt(receiver, a0);
};
$.removeLast = function(receiver) {
  return $.getInterceptor$JSArray(receiver).removeLast$0(receiver);
};
$.forEach = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).forEach$1(receiver, a0);
};
$.$$indexSet = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).$indexSet(receiver, a0, a1);
};
$.iterator = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$iterator(receiver);
};
$.add = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).add$1(receiver, a0);
};
$.replaceAll = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).replaceAll$2(receiver, a0, a1);
};
$.where = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).where$1(receiver, a0);
};
$.length = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$length(receiver);
};
$.$$and = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$and(receiver, a0);
};
$.indexOf = function(receiver, a0, a1) {
  return $.getInterceptor$JSStringJSArray(receiver).indexOf$2(receiver, a0, a1);
};
$.isEmpty = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$isEmpty(receiver);
};
$.$$tdiv = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$tdiv(receiver, a0);
};
$.getRange = function(receiver, a0, a1) {
  return $.getInterceptor$JSArray(receiver).getRange$2(receiver, a0, a1);
};
$.contains = function(receiver) {
  return $.getInterceptor$JSStringJSArray(receiver).get$contains(receiver);
};
$.$$index = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).$index(receiver, a0);
};
$.substring = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).substring$2(receiver, a0, a1);
};
$.$$or = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$or(receiver, a0);
};
$.join = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).join$1(receiver, a0);
};
$.hashCode = function(receiver) {
  return $.getInterceptor(receiver).get$hashCode(receiver);
};
$.$$shr = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shr(receiver, a0);
};
$.contains1 = function(receiver, a0, a1) {
  return $.getInterceptor$JSString(receiver).contains$2(receiver, a0, a1);
};
$.toList = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toList$0(receiver);
};
$.contains0 = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).contains$1(receiver, a0);
};
$.remove = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).remove$1(receiver, a0);
};
$.clear = function(receiver) {
  return $.getInterceptor$JSArray(receiver).clear$0(receiver);
};
$.indexOf0 = function(receiver, a0) {
  return $.getInterceptor$JSStringJSArray(receiver).indexOf$1(receiver, a0);
};
$.any = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).any$1(receiver, a0);
};
$.$$xor = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$xor(receiver, a0);
};
$.last = function(receiver) {
  return $.getInterceptor$JSArray(receiver).get$last(receiver);
};
$.$$add = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$add(receiver, a0);
};
$.charCodeAt = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).charCodeAt$1(receiver, a0);
};
$.split = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).split$1(receiver, a0);
};
$.trim = function(receiver) {
  return $.getInterceptor$JSString(receiver).trim$0(receiver);
};
$.allMatches = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).allMatches$1(receiver, a0);
};
$.$$shl = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$shl(receiver, a0);
};
$.toLowerCase = function(receiver) {
  return $.getInterceptor$JSString(receiver).toLowerCase$0(receiver);
};
$.addLast = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addLast$1(receiver, a0);
};
$.length0 = function(receiver, value) {
  return $.getInterceptor$JSArray(receiver).set$length(receiver, value);
};
$.$$lt = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$lt(receiver, a0);
};
$.addAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).addAll$1(receiver, a0);
};
$.abs = function(receiver) {
  return $.getInterceptor$JSNumber(receiver).abs$0(receiver);
};
$.$$le = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$le(receiver, a0);
};
$.$$mul = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$mul(receiver, a0);
};
$.removeAll = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeAll$1(receiver, a0);
};
$.$$div = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$div(receiver, a0);
};
$.toSet = function(receiver) {
  return $.getInterceptor$JSArray(receiver).toSet$0(receiver);
};
$.$$sub = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$sub(receiver, a0);
};
$.removeMatching = function(receiver, a0) {
  return $.getInterceptor$JSArray(receiver).removeMatching$1(receiver, a0);
};
$.startsWith = function(receiver, a0) {
  return $.getInterceptor$JSString(receiver).startsWith$1(receiver, a0);
};
$.toRadixString = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).toRadixString$1(receiver, a0);
};
$.$$ge = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).$ge(receiver, a0);
};
$.toStringAsFixed = function(receiver, a0) {
  return $.getInterceptor$JSNumber(receiver).toStringAsFixed$1(receiver, a0);
};
$.getInterceptor$JSStringJSArray = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSString = function(receiver) {
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSNumber = function(receiver) {
  if (typeof receiver == "number")
    return $.JSNumber.prototype;
  if (receiver == null)
    return void 0;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor = function(receiver) {
  if (typeof receiver == "number") {
    if (Math.floor(receiver) == receiver)
      return $.JSInt.prototype;
    return $.JSDouble.prototype;
  }
  if (typeof receiver == "string")
    return $.JSString.prototype;
  if (receiver == null)
    return $.JSNull.prototype;
  if (typeof receiver == "function")
    return $.JSFunction.prototype;
  if (typeof receiver == "boolean")
    return $.JSBool.prototype;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
$.getInterceptor$JSArray = function(receiver) {
  if (receiver == null)
    return void 0;
  if (receiver.constructor == Array)
    return $.JSArray.prototype;
  return $.ObjectInterceptor.prototype;
};
Isolate.$lazy($, "globalThis", "globalThis", "get$globalThis", function() {
  return $.IsolateNatives_computeGlobalThis();
});
Isolate.$lazy($, "globalWindow", "globalWindow", "get$globalWindow", function() {
  return $.get$globalThis().window;
});
Isolate.$lazy($, "globalWorker", "globalWorker", "get$globalWorker", function() {
  return $.get$globalThis().Worker;
});
Isolate.$lazy($, "globalPostMessageDefined", "globalPostMessageDefined", "get$globalPostMessageDefined", function() {
  return $.get$globalThis().postMessage !== (void 0);
});
Isolate.$lazy($, "thisScript", "IsolateNatives_thisScript", "get$IsolateNatives_thisScript", function() {
  return $.IsolateNatives_computeThisScript();
});
Isolate.$lazy($, "quoteRegExp", "quoteRegExp", "get$quoteRegExp", function() {
  return $.JSSyntaxRegExp$("[-[\\]{}()*+?.,\\\\^$|#\\s]", true, false);
});
var $ = null;
Isolate.$finishClasses($$);
$$ = {};
Isolate = Isolate.$finishIsolateConstructor(Isolate);
var $ = new Isolate();
$.$defineNativeClass = function(cls, desc) {
  var fields = desc[''];
  var fields_array = fields ? fields.split(',') : [];
  for (var i = 0; i < fields_array.length; i++) {
    $.$generateAccessor(fields_array[i], desc);
  }
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var method in desc) {
    if (method) {
      if (hasOwnProperty.call(desc, method)) {
        $.dynamicFunction(method)[cls] = desc[method];
      }
    }
  }
};

(function(table) {
  for (var key in table)
    $.defineProperty(Object.prototype, key, table[key]);
})({
  $isJavaScriptIndexingBehavior: function() {
    return false;
  },
  $isCollection: function() {
    return false;
  },
  $isList: function() {
    return false;
  },
  $isMap: function() {
    return false;
  },
  $isElement: function() {
    return false;
  },
  $isNode: function() {
    return false;
  },
  toString$0: function() {
    return $.toStringForNativeObject(this);
  },
  get$hashCode: function() {
    return $.hashCodeForNativeObject(this);
  },
  $eq: function(a) {
    return this === a;
  }
});

$.$defineNativeClass("Worker", {
  get$id: function() {
    return this.id;
  },
  set$id: function(i) {
    this.id = i;
  },
  set$onmessage: function(f) {
    this.onmessage = f;
  },
  postMessage$1: function(msg) {
    this.postMessage(msg);
  },
  terminate$0: function() {
    this.terminate();
  }
});

$.$defineNativeClass("HTMLAnchorElement", {"": "hash>,name=,type>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLAreaElement", {"": "hash>"});

$.$defineNativeClass("HTMLButtonElement", {"": "name=,type>,value="});

$.$defineNativeClass("CharacterData", {"": "length>",
  remove$0: function() {
    return this.remove();
  }
});

$.$defineNativeClass("CSSStyleDeclaration", {"": "length>",
  _getPropertyValue$1: function(propertyName) {
    return this.getPropertyValue(propertyName);
  },
  getPropertyValue$1: function(propertyName) {
    var propValue = this._getPropertyValue$1(propertyName);
    return !(propValue == null) ? propValue : "";
  },
  get$clear: function() {
    return this.getPropertyValue$1("clear");
  },
  clear$0: function() {
    return this.get$clear().call$0();
  }
});

$.$defineNativeClass("Document", {
  $$dom_createElement$1: function(tagName) {
    return this.createElement(tagName);
  },
  $$dom_getElementById$1: function(elementId) {
    return this.getElementById(elementId);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  get$onClick: function() {
    return $.CONSTANT5.forTarget$1(this);
  },
  query$1: function(selectors) {
    if ($.RegExp_RegExp("^#[_a-zA-Z]\\w*$", true, false).hasMatch$1(selectors) === true)
      return this.$$dom_getElementById$1($.CONSTANT0.substring$1(selectors, 1));
    return this.$$dom_querySelector$1(selectors);
  }
});

$.$defineNativeClass("DocumentFragment", {
  get$children: function() {
    if (this._children == null)
      this._children = $.FilteredElementList$(this);
    return this._children;
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  get$innerHtml: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$innerHtml")) {
      var e = $.Element_Element$tag("div");
      $.add(e.get$nodes(), this.clone$1(true));
      return e.get$innerHtml();
    } else
      return Object.prototype.get$innerHtml.call(this);
  },
  set$innerHtml: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$innerHtml")) {
      var e, nodes;
      $.clear(this.get$nodes());
      e = $.Element_Element$tag("div");
      e.set$innerHtml(value);
      nodes = $.List_List$from(e.get$nodes());
      $.addAll(this.get$nodes(), nodes);
    } else
      return Object.prototype.set$innerHtml.call(this, value);
  },
  append$1: function(element) {
    $.add(this.get$children(), element);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  }
});

$.$defineNativeClass("DOMError", {"": "name>"});

$.$defineNativeClass("DOMException", {
  get$name: function() {
    var errorName = this.name;
    if ($._Device_isWebKit() === true && errorName === "SECURITY_ERR")
      return "SecurityError";
    if ($._Device_isWebKit() === true && errorName === "SYNTAX_ERR")
      return "SyntaxError";
    return errorName;
  },
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("Element", {"": "$$dom_children:children~,id=,innerHtml:innerHTML},$$dom_className:className},$$dom_lastElementChild:lastElementChild~,nextElementSibling>,previousElementSibling>",
  get$attributes: function() {
    return $._ElementAttributeMap$(this);
  },
  get$children: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$children")) {
      return $._ChildrenElementList$_wrap(this);
    } else
      return Object.prototype.get$children.call(this);
  },
  set$children: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$children")) {
      var copy, children, t1;
      copy = $.List_List$from(value);
      children = this.get$children();
      t1 = $.getInterceptor$JSArray(children);
      t1.clear$0(children);
      t1.addAll$1(children, copy);
    } else
      return Object.prototype.set$children.call(this, value);
  },
  query$1: function(selectors) {
    return this.$$dom_querySelector$1(selectors);
  },
  get$classes: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$classes")) {
      return $._ElementCssClassSet$(this);
    } else
      return Object.prototype.get$classes.call(this);
  },
  get$dataAttributes: function() {
    return $._DataAttributeMap$(this.get$attributes());
  },
  append$1: function(e) {
    $.add(this.get$children(), e);
  },
  $$dom_getAttribute$1: function(name) {
    return this.getAttribute(name);
  },
  $$dom_hasAttribute$1: function(name) {
    return this.hasAttribute(name);
  },
  $$dom_querySelector$1: function(selectors) {
    return this.querySelector(selectors);
  },
  $$dom_removeAttribute$1: function(name) {
    return this.removeAttribute(name);
  },
  $$dom_setAttribute$2: function(name, value) {
    return this.setAttribute(name,value);
  },
  get$onClick: function() {
    return $.CONSTANT5.forTarget$1(this);
  },
  $isElement: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLEmbedElement", {"": "name=,type>"});

$.$defineNativeClass("Event", {"": "type>",
  stopPropagation$0: function() {
    return this.stopPropagation();
  }
});

$.$defineNativeClass("EventException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("EventTarget", {
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_addEventListener$3")) {
      return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_addEventListener$3.call(this, type, listener, useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$$dom_removeEventListener$3")) {
      return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
    } else
      return Object.prototype.$$dom_removeEventListener$3.call(this, type, listener, useCapture);
  }
});

$.$defineNativeClass("HTMLFieldSetElement", {"": "name=,type>"});

$.$defineNativeClass("FileException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLFormElement", {"": "length>,name=",
  reset$0: function() {
    return this.reset();
  }
});

$.$defineNativeClass("HTMLCollection", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout2(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout2: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("XMLHttpRequestException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLIFrameElement", {"": "name="});

$.$defineNativeClass("HTMLImageElement", {
  complete$1: function(arg0) {
    return this.complete.call$1(arg0);
  }
});

$.$defineNativeClass("HTMLInputElement", {"": "name=,pattern>,type>,value=",
  $isElement: function() {
    return true;
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLKeygenElement", {"": "name=,type>"});

$.$defineNativeClass("HTMLLIElement", {"": "type>,value="});

$.$defineNativeClass("HTMLLinkElement", {"": "type>"});

$.$defineNativeClass("LocalMediaStream", {
  stop$0: function() {
    return this.stop();
  }
});

$.$defineNativeClass("HTMLMapElement", {"": "name="});

$.$defineNativeClass("HTMLMediaElement", {"": "error>"});

$.$defineNativeClass("MediaStream", {"": "id>",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  }
});

$.$defineNativeClass("MessageEvent", {"": "ports>",
  get$source: function() {
    return $._convertNativeToDart_Window(this.source);
  }
});

$.$defineNativeClass("HTMLMetaElement", {"": "name="});

$.$defineNativeClass("HTMLMeterElement", {"": "value="});

$.$defineNativeClass("NamedNodeMap", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout3(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout3: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Navigator", {"": "userAgent>"});

$.$defineNativeClass("Node", {"": "$$dom_attributes:attributes~,$$dom_childNodes:childNodes~,$$dom_localName:localName~,$$dom_namespaceUri:namespaceURI~,text:textContent|",
  get$nodes: function() {
    return $._ChildNodeListLazy$(this);
  },
  remove$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$0")) {
      var t1 = this.parentNode;
      if (!(t1 == null))
        t1.$$dom_removeChild$1(this);
    } else
      return Object.prototype.remove$0.call(this);
  },
  replaceWith$1: function(otherNode) {
    var parent, exception;
    try {
      parent = this.parentNode;
      parent.$$dom_replaceChild$2(otherNode, this);
    } catch (exception) {
      $.unwrapException(exception);
    }

    return this;
  },
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_appendChild$1: function(newChild) {
    return this.appendChild(newChild);
  },
  clone$1: function(deep) {
    if (Object.getPrototypeOf(this).hasOwnProperty("clone$1")) {
      return this.cloneNode(deep);
    } else
      return Object.prototype.clone$1.call(this, deep);
  },
  contains$1: function(other) {
    return this.contains(other);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  $$dom_removeChild$1: function(oldChild) {
    return this.removeChild(oldChild);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  $$dom_replaceChild$2: function(newChild, oldChild) {
    return this.replaceChild(newChild,oldChild);
  },
  $isNode: function() {
    return true;
  }
});

$.$defineNativeClass("NodeList", {
  get$length: function() {
    return this.length;
  },
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    throw $.$$throw($.UnsupportedError$("Cannot assign element of immutable List."));
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("HTMLOListElement", {"": "type>"});

$.$defineNativeClass("HTMLObjectElement", {"": "name=,type>"});

$.$defineNativeClass("HTMLOptionElement", {"": "value="});

$.$defineNativeClass("HTMLOutputElement", {"": "name=,type>,value="});

$.$defineNativeClass("HTMLParamElement", {"": "name=,value="});

$.$defineNativeClass("HTMLProgressElement", {"": "value="});

$.$defineNativeClass("RadioNodeList", {"": "value="});

$.$defineNativeClass("RangeException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("HTMLScriptElement", {"": "type>"});

$.$defineNativeClass("HTMLSelectElement", {"": "length=,name=,type>,value="});

$.$defineNativeClass("ShadowRoot", {"": "innerHtml:innerHTML}",
  clone$1: function(deep) {
    return this.cloneNode(deep);
  }
});

$.$defineNativeClass("HTMLSourceElement", {"": "type>"});

$.$defineNativeClass("SpeechRecognitionError", {"": "error>"});

$.$defineNativeClass("SpeechRecognitionEvent", {"": "result>"});

$.$defineNativeClass("SpeechRecognitionResult", {"": "length>"});

$.$defineNativeClass("Storage", {
  containsKey$1: function(key) {
    return !(this.$$dom_getItem$1(key) == null);
  },
  $index: function(key) {
    return this.$$dom_getItem$1(key);
  },
  $indexSet: function(key, value) {
    this.$$dom_setItem$2(key, value);
  },
  remove$1: function(key) {
    var value = this.$index(key);
    this.$$dom_removeItem$1(key);
    return value;
  },
  clear$0: function() {
    return this.$$dom_clear$0();
  },
  forEach$1: function(f) {
    var i, key;
    for (i = 0; true; ++i) {
      key = this.$$dom_key$1(i);
      if (key == null)
        return;
      f.call$2(key, this.$index(key));
    }
  },
  get$keys: function() {
    var keys = [];
    this.forEach$1(new $.Storage_keys_anon(keys));
    return keys;
  },
  get$values: function() {
    var values = [];
    this.forEach$1(new $.Storage_values_anon(values));
    return values;
  },
  get$length: function() {
    return this.length;
  },
  get$isEmpty: function() {
    return this.$$dom_key$1(0) == null;
  },
  $$dom_clear$0: function() {
    return this.clear();
  },
  $$dom_getItem$1: function(key) {
    return this.getItem(key);
  },
  $$dom_key$1: function(index) {
    return this.key(index);
  },
  $$dom_removeItem$1: function(key) {
    return this.removeItem(key);
  },
  $$dom_setItem$2: function(key, data) {
    return this.setItem(key,data);
  },
  $isMap: function() {
    return true;
  }
});

$.$defineNativeClass("StorageEvent", {"": "key>"});

$.$defineNativeClass("HTMLStyleElement", {"": "type>"});

$.$defineNativeClass("HTMLTextAreaElement", {"": "name=,type>,value="});

$.$defineNativeClass("WebKitTransitionEvent", {
  propertyName$0: function() {
    return this.propertyName.call$0();
  }
});

$.$defineNativeClass("Uint8Array", {
  get$length: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$length")) {
      return this.length;
    } else
      return Object.prototype.get$length.call(this);
  },
  $index: function(index) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$index")) {
      return this[index];
    } else
      return Object.prototype.$index.call(this, index);
  },
  $indexSet: function(index, value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("$indexSet")) {
      this[index] = value;
    } else
      return Object.prototype.$indexSet.call(this, index, value);
  },
  get$iterator: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$iterator")) {
      return $.FixedSizeListIterator$(this);
    } else
      return Object.prototype.get$iterator.call(this);
  },
  contains$1: function(element) {
    if (Object.getPrototypeOf(this).hasOwnProperty("contains$1")) {
      return $.IterableMixinWorkaround_contains(this, element);
    } else
      return Object.prototype.contains$1.call(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("forEach$1")) {
      var t1;
      for (t1 = $.iterator(this); t1.moveNext$0() === true;)
        f.call$1(t1.get$current());
      return;
    } else
      return Object.prototype.forEach$1.call(this, f);
  },
  join$1: function(separator) {
    if (Object.getPrototypeOf(this).hasOwnProperty("join$1")) {
      return $.IterableMixinWorkaround_joinList(this, separator);
    } else
      return Object.prototype.join$1.call(this, separator);
  },
  where$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("where$1")) {
      return $.WhereIterable$(this, f);
    } else
      return Object.prototype.where$1.call(this, f);
  },
  any$1: function(f) {
    if (Object.getPrototypeOf(this).hasOwnProperty("any$1")) {
      return $.IterableMixinWorkaround_any(this, f);
    } else
      return Object.prototype.any$1.call(this, f);
  },
  toList$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toList$0")) {
      return $.List_List$from(this);
    } else
      return Object.prototype.toList$0.call(this);
  },
  toSet$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("toSet$0")) {
      return $.Set_Set$from(this);
    } else
      return Object.prototype.toSet$0.call(this);
  },
  get$isEmpty: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$isEmpty")) {
      var t1 = $.length(this);
      if (typeof t1 !== "number")
        return this.get$isEmpty$bailout0(1, t1);
      return t1 === 0;
    } else
      return Object.prototype.get$isEmpty.call(this);
  },
  get$isEmpty$bailout0: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("add$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.add$1.call(this, value);
  },
  addLast$1: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addLast$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addLast$1.call(this, value);
  },
  addAll$1: function(iterable) {
    if (Object.getPrototypeOf(this).hasOwnProperty("addAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
    } else
      return Object.prototype.addAll$1.call(this, iterable);
  },
  set$length: function(value) {
    if (Object.getPrototypeOf(this).hasOwnProperty("set$length")) {
      throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
    } else
      return Object.prototype.set$length.call(this, value);
  },
  clear$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("clear$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
    } else
      return Object.prototype.clear$0.call(this);
  },
  indexOf$2: function(element, start) {
    if (Object.getPrototypeOf(this).hasOwnProperty("indexOf$2")) {
      return $.Lists_indexOf(this, element, start, $.length(this));
    } else
      return Object.prototype.indexOf$2.call(this, element, start);
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("get$last")) {
      var t1 = $.getInterceptor$JSStringJSArray(this);
      if ($.$$gt(t1.get$length(this), 0) === true)
        return this.$index($.$$sub(t1.get$length(this), 1));
      throw $.$$throw($.StateError$("No elements"));
    } else
      return Object.prototype.get$last.call(this);
  },
  removeLast$0: function() {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeLast$0")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeLast$0.call(this);
  },
  remove$1: function(object) {
    if (Object.getPrototypeOf(this).hasOwnProperty("remove$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.remove$1.call(this, object);
  },
  removeAll$1: function(elements) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeAll$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeAll$1.call(this, elements);
  },
  removeMatching$1: function(test) {
    if (Object.getPrototypeOf(this).hasOwnProperty("removeMatching$1")) {
      throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
    } else
      return Object.prototype.removeMatching$1.call(this, test);
  },
  getRange$2: function(start, rangeLength) {
    if (Object.getPrototypeOf(this).hasOwnProperty("getRange$2")) {
      return $.Lists_getRange(this, start, rangeLength, []);
    } else
      return Object.prototype.getRange$2.call(this, start, rangeLength);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("Uint8ClampedArray", {
  $index: function(index) {
    return this[index];
  },
  $indexSet: function(index, value) {
    this[index] = value;
  },
  get$iterator: function() {
    return $.FixedSizeListIterator$(this);
  },
  contains$1: function(element) {
    return $.IterableMixinWorkaround_contains(this, element);
  },
  get$contains: function() {
    return new $.BoundClosure(this, "contains$1");
  },
  forEach$1: function(f) {
    var t1;
    for (t1 = $.iterator(this); t1.moveNext$0() === true;)
      f.call$1(t1.get$current());
    return;
  },
  join$1: function(separator) {
    return $.IterableMixinWorkaround_joinList(this, separator);
  },
  where$1: function(f) {
    return $.WhereIterable$(this, f);
  },
  any$1: function(f) {
    return $.IterableMixinWorkaround_any(this, f);
  },
  toList$0: function() {
    return $.List_List$from(this);
  },
  toSet$0: function() {
    return $.Set_Set$from(this);
  },
  get$isEmpty: function() {
    var t1 = $.length(this);
    if (typeof t1 !== "number")
      return this.get$isEmpty$bailout1(1, t1);
    return t1 === 0;
  },
  get$isEmpty$bailout1: function(state0, t1) {
    return $.$$eq(t1, 0);
  },
  add$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addLast$1: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  addAll$1: function(iterable) {
    throw $.$$throw($.UnsupportedError$("Cannot add to immutable List."));
  },
  set$length: function(value) {
    throw $.$$throw($.UnsupportedError$("Cannot resize immutable List."));
  },
  clear$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot clear immutable List."));
  },
  indexOf$2: function(element, start) {
    return $.Lists_indexOf(this, element, start, $.length(this));
  },
  indexOf$1: function(element) {
    return this.indexOf$2(element, 0);
  },
  get$last: function() {
    var t1 = $.getInterceptor$JSStringJSArray(this);
    if ($.$$gt(t1.get$length(this), 0) === true)
      return this.$index($.$$sub(t1.get$length(this), 1));
    throw $.$$throw($.StateError$("No elements"));
  },
  removeLast$0: function() {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  remove$1: function(object) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeAll$1: function(elements) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  removeMatching$1: function(test) {
    throw $.$$throw($.UnsupportedError$("Cannot remove from immutable List."));
  },
  getRange$2: function(start, rangeLength) {
    return $.Lists_getRange(this, start, rangeLength, []);
  },
  $isList: function() {
    return true;
  },
  $isCollection: function() {
    return true;
  },
  $isJavaScriptIndexingBehavior: function() {
    return true;
  }
});

$.$defineNativeClass("DOMWindow", {"": "localStorage>,name=,navigator>",
  $$dom_addEventListener$3: function(type, listener, useCapture) {
    return this.addEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  close$0: function() {
    return this.close();
  },
  confirm$1: function(message) {
    return this.confirm(message);
  },
  $$dom_removeEventListener$3: function(type, listener, useCapture) {
    return this.removeEventListener(type,$.convertDartClosureToJS(listener, 1),useCapture);
  },
  stop$0: function() {
    return this.stop();
  },
  get$onClick: function() {
    return $.CONSTANT5.forTarget$1(this);
  }
});

$.$defineNativeClass("XPathException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

$.$defineNativeClass("SVGComponentTransferFunctionElement", {"": "type>"});

$.$defineNativeClass("SVGFEBlendElement", {"": "result>"});

$.$defineNativeClass("SVGFEColorMatrixElement", {"": "type>,result>"});

$.$defineNativeClass("SVGFEComponentTransferElement", {"": "result>"});

$.$defineNativeClass("SVGFECompositeElement", {"": "result>"});

$.$defineNativeClass("SVGFEConvolveMatrixElement", {"": "result>"});

$.$defineNativeClass("SVGFEDiffuseLightingElement", {"": "result>"});

$.$defineNativeClass("SVGFEDisplacementMapElement", {"": "result>"});

$.$defineNativeClass("SVGFEDropShadowElement", {"": "result>"});

$.$defineNativeClass("SVGFEFloodElement", {"": "result>"});

$.$defineNativeClass("SVGFEGaussianBlurElement", {"": "result>"});

$.$defineNativeClass("SVGFEImageElement", {"": "result>"});

$.$defineNativeClass("SVGFEMergeElement", {"": "result>"});

$.$defineNativeClass("SVGFEMorphologyElement", {"": "result>"});

$.$defineNativeClass("SVGFEOffsetElement", {"": "result>"});

$.$defineNativeClass("SVGFESpecularLightingElement", {"": "result>"});

$.$defineNativeClass("SVGFETileElement", {"": "result>"});

$.$defineNativeClass("SVGFETurbulenceElement", {"": "type>,result>"});

$.$defineNativeClass("SVGPointList", {
  clear$0: function() {
    return this.clear();
  }
});

$.$defineNativeClass("SVGPolygonElement", {"": "points>"});

$.$defineNativeClass("SVGPolylineElement", {"": "points>"});

$.$defineNativeClass("SVGScriptElement", {"": "type>"});

$.$defineNativeClass("SVGStyleElement", {"": "type>"});

$.$defineNativeClass("SVGElement", {
  get$classes: function() {
    if (this._cssClassSet == null)
      this._cssClassSet = $._AttributeClassSet$(this);
    return this._cssClassSet;
  },
  get$children: function() {
    return $.FilteredElementList$(this);
  },
  set$children: function(value) {
    var children, t1;
    children = this.get$children();
    t1 = $.getInterceptor$JSArray(children);
    t1.clear$0(children);
    t1.addAll$1(children, value);
  },
  get$innerHtml: function() {
    var container, cloned;
    container = $.Element_Element$tag("div");
    cloned = this.clone$1(true);
    $.addAll(container.get$children(), cloned.get$children());
    return container.get$innerHtml();
  },
  set$innerHtml: function(svg) {
    var container, t1;
    container = $.Element_Element$tag("div");
    container.set$innerHtml("<svg version=\"1.1\">" + $.S(svg) + "</svg>");
    t1 = container.get$children();
    if (typeof t1 !== "string" && (typeof t1 !== "object" || t1 === null || t1.constructor !== Array && !t1.$isJavaScriptIndexingBehavior()))
      return this.set$innerHtml$bailout(1, t1);
    if (0 >= t1.length)
      throw $.ioore(0);
    this.set$children(t1[0].get$children());
  },
  set$innerHtml$bailout: function(state0, t1) {
    this.set$children($.$$index(t1, 0).get$children());
  },
  get$$$dom_children: function() {
    throw $.$$throw($.UnsupportedError$("Cannot get dom_children on SVG."));
  },
  get$id: function() {
    return this.id;
  },
  set$id: function(value) {
    this.id = value;
  }
});

$.$defineNativeClass("SVGException", {"": "name>",
  toString$0: function() {
    return this.toString();
  }
});

// 86 dynamic classes.
// 238 classes
// 22 !leaf
(function() {
  var v0_ComponentTransferFunctionElement = "SVGComponentTransferFunctionElement|SVGFEFuncBElement|SVGFEFuncRElement|SVGFEFuncGElement|SVGFEFuncAElement", v1_MediaElement = "HTMLMediaElement|HTMLVideoElement|HTMLAudioElement", v2_SvgElement = [v0_ComponentTransferFunctionElement, "SVGElement|SVGAElement|SVGAltGlyphDefElement|SVGTextContentElement|SVGTextPositioningElement|SVGAltGlyphElement|SVGTRefElement|SVGTSpanElement|SVGTextElement|SVGTextPathElement|SVGAltGlyphItemElement|SVGAnimationElement|SVGAnimateColorElement|SVGAnimateElement|SVGAnimateMotionElement|SVGAnimateTransformElement|SVGSetElement|SVGCircleElement|SVGClipPathElement|SVGCursorElement|SVGDefsElement|SVGDescElement|SVGEllipseElement|SVGFEColorMatrixElement|SVGFEComponentTransferElement|SVGFEBlendElement|SVGFEConvolveMatrixElement|SVGFEDisplacementMapElement|SVGFEDistantLightElement|SVGFEFloodElement|SVGFECompositeElement|SVGFEDropShadowElement|SVGFEDiffuseLightingElement|SVGFEMergeElement|SVGFEMorphologyElement|SVGFETileElement|SVGFEGaussianBlurElement|SVGFilterElement|SVGFETurbulenceElement|SVGFESpotLightElement|SVGFEOffsetElement|SVGFEImageElement|SVGFontElement|SVGFontFaceSrcElement|SVGFontFaceNameElement|SVGFontFaceElement|SVGFESpecularLightingElement|SVGGlyphRefElement|SVGFEMergeNodeElement|SVGGlyphElement|SVGFontFaceFormatElement|SVGFEPointLightElement|SVGHKernElement|SVGImageElement|SVGLineElement|SVGGElement|SVGGradientElement|SVGLinearGradientElement|SVGRadialGradientElement|SVGMPathElement|SVGMaskElement|SVGMetadataElement|SVGMissingGlyphElement|SVGForeignObjectElement|SVGPathElement|SVGMarkerElement|SVGFontFaceUriElement|SVGPatternElement|SVGPolygonElement|SVGPolylineElement|SVGRectElement|SVGScriptElement|SVGStopElement|SVGStyleElement|SVGSVGElement|SVGSwitchElement|SVGSymbolElement|SVGTitleElement|SVGUseElement|SVGVKernElement|SVGViewElement"].join("|"), v3_Element = [v1_MediaElement, v2_SvgElement, "Element|HTMLOListElement|HTMLObjectElement|HTMLOptGroupElement|HTMLOptionElement|HTMLOutputElement|HTMLParagraphElement|HTMLParamElement|HTMLPreElement|HTMLProgressElement|HTMLQuoteElement|HTMLScriptElement|HTMLSelectElement|HTMLShadowElement|HTMLSourceElement|HTMLSpanElement|HTMLStyleElement|HTMLTableCaptionElement|HTMLTableCellElement|HTMLTableColElement|HTMLTableElement|HTMLTableRowElement|HTMLTableSectionElement|HTMLTextAreaElement|HTMLTitleElement|HTMLTrackElement|HTMLUListElement|HTMLUnknownElement|HTMLAppletElement|HTMLBaseFontElement|HTMLDirectoryElement|HTMLFontElement|HTMLFrameElement|HTMLFrameSetElement|HTMLMarqueeElement|HTMLElement|HTMLAnchorElement|HTMLAreaElement|HTMLBRElement|HTMLBaseElement|HTMLBodyElement|HTMLButtonElement|HTMLCanvasElement|HTMLContentElement|HTMLDListElement|HTMLDataListElement|HTMLDetailsElement|HTMLDivElement|HTMLEmbedElement|HTMLFieldSetElement|HTMLFormElement|HTMLHRElement|HTMLHeadElement|HTMLHeadingElement|HTMLHtmlElement|HTMLIFrameElement|HTMLImageElement|HTMLInputElement|HTMLKeygenElement|HTMLLIElement|HTMLLabelElement|HTMLLegendElement|HTMLLinkElement|HTMLMapElement|HTMLMenuElement|HTMLMetaElement|HTMLMeterElement|HTMLModElement"].join("|"), v4_DocumentFragment = "DocumentFragment|ShadowRoot", v5_CharacterData = "CharacterData|Text|CDATASection|Comment", v6_Document = "Document|SVGDocument|HTMLDocument", v7_Node = [v3_Element, v4_DocumentFragment, v5_CharacterData, v6_Document, "Node|ProcessingInstruction|DocumentType|Attr|EntityReference|Notation"].join("|"), v8_MediaStream = "MediaStream|LocalMediaStream";
  $.dynamicSetMetadata([["HTMLMediaElement", v1_MediaElement], ["SVGComponentTransferFunctionElement", v0_ComponentTransferFunctionElement], ["SVGElement", v2_SvgElement], ["Element", v3_Element], ["DocumentFragment", v4_DocumentFragment], ["CharacterData", v5_CharacterData], ["Document", v6_Document], ["Node", v7_Node], ["MediaStream", v8_MediaStream], ["EventTarget", [v7_Node, v8_MediaStream, "EventTarget|DOMWindow"].join("|")], ["HTMLCollection", "HTMLCollection|HTMLFormControlsCollection|HTMLOptionsCollection"], ["Uint8Array", "Uint8Array|Uint8ClampedArray"], ["NodeList", "NodeList|RadioNodeList"], ["Event", "Event|OverflowEvent|PageTransitionEvent|PopStateEvent|ProgressEvent|XMLHttpRequestProgressEvent|RTCDataChannelEvent|RTCIceCandidateEvent|SpeechInputEvent|SpeechRecognitionError|SpeechRecognitionEvent|StorageEvent|UIEvent|TextEvent|TouchEvent|MouseEvent|WheelEvent|CompositionEvent|SVGZoomEvent|KeyboardEvent|TrackEvent|WebKitTransitionEvent|WebGLContextEvent|IDBVersionChangeEvent|IDBVersionChangeEvent|BeforeLoadEvent|DeviceMotionEvent|DeviceOrientationEvent|WebKitAnimationEvent|CloseEvent|ErrorEvent|CustomEvent|HashChangeEvent|AudioProcessingEvent|OfflineAudioCompletionEvent|MediaKeyEvent|MediaStreamEvent|MediaStreamTrackEvent|MessageEvent|MutationEvent"]]);
})();

$.main.call$0 = $.main;

//
// BEGIN invoke [main].
//
if (typeof document !== 'undefined' && document.readyState !== 'complete') {
  document.addEventListener('readystatechange', function () {
    if (document.readyState == 'complete') {
      if (typeof dartMainRunner === 'function') {
        dartMainRunner(function() { $.startRootIsolate($.main); });
      } else {
        $.startRootIsolate($.main);
      }
    }
  }, false);
} else {
  if (typeof dartMainRunner === 'function') {
    dartMainRunner(function() { $.startRootIsolate($.main); });
  } else {
    $.startRootIsolate($.main);
  }
}
//
// END invoke [main].
//

function init() {
Isolate.$isolateProperties = {};
function generateAccessor(field, prototype) {
  var len = field.length;
  var lastCharCode = field.charCodeAt(len - 1);
  var needsAccessor = (lastCharCode & 63) >= 60;
  if (needsAccessor) {
    var needsGetter = (lastCharCode & 3) > 0;
    var needsSetter = (lastCharCode & 2) == 0;
    var renaming = (lastCharCode & 64) != 0;
    var accessorName = field = field.substring(0, len - 1);
    if (renaming) {
      var divider = field.indexOf(":");
      accessorName = field.substring(0, divider);
      field = field.substring(divider + 1);
    }
    if (needsGetter) {
      var getterString = "return this." + field + ";";
      prototype["get$" + accessorName] = new Function(getterString);
    }
    if (needsSetter) {
      var setterString = "this." + field + " = v;";
      prototype["set$" + accessorName] = new Function("v", setterString);
    }
  }
  return field;
};
Isolate.$isolateProperties.$generateAccessor = generateAccessor;
Isolate.$defineClass = function(cls, fields, prototype) {
  var constructor;
  if (typeof fields == 'function') {
    constructor = fields;
  } else {
    var str = "function " + cls + "(";
    var body = "";
    for (var i = 0; i < fields.length; i++) {
      if (i != 0) str += ", ";
      var field = fields[i];
      field = generateAccessor(field, prototype);
      str += field;
      body += "this." + field + " = " + field + ";\n";
    }
    str += ") {" + body + "}\n";
    str += "return " + cls + ";";
    constructor = new Function(str)();
  }
  constructor.prototype = prototype;
  constructor.builtin$cls = cls;
  return constructor;
};
var supportsProto = false;
var tmp = Isolate.$defineClass('c', ['f?'], {}).prototype;
if (tmp.__proto__) {
  tmp.__proto__ = {};
  if (typeof tmp.get$f !== 'undefined') supportsProto = true;
}
Isolate.$pendingClasses = {};
Isolate.$finishClasses = function(collectedClasses) {
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  for (var cls in collectedClasses) {
    if (hasOwnProperty.call(collectedClasses, cls)) {
      var desc = collectedClasses[cls];
      var fields = desc[''], supr;
      if (typeof fields == 'string') {
        var s = fields.split(';'); supr = s[0];
        fields = s[1] == '' ? [] : s[1].split(',');
      } else {
        supr = desc['super'];
      }
      Isolate.$isolateProperties[cls] = Isolate.$defineClass(cls, fields, desc);
      if (supr) Isolate.$pendingClasses[cls] = supr;
    }
  }
  var pendingClasses = Isolate.$pendingClasses;
  Isolate.$pendingClasses = {};
  var finishedClasses = {};
  function finishClass(cls) {
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    if (hasOwnProperty.call(finishedClasses, cls)) return;
    finishedClasses[cls] = true;
    var superclass = pendingClasses[cls];
    if (!superclass) return;
    finishClass(superclass);
    var constructor = Isolate.$isolateProperties[cls];
    var superConstructor = Isolate.$isolateProperties[superclass];
    var prototype = constructor.prototype;
    if (supportsProto) {
      prototype.__proto__ = superConstructor.prototype;
      prototype.constructor = constructor;
    } else {
      function tmp() {};
      tmp.prototype = superConstructor.prototype;
      var newPrototype = new tmp();
      constructor.prototype = newPrototype;
      newPrototype.constructor = constructor;
      for (var member in prototype) {
        if (!member) continue;          if (hasOwnProperty.call(prototype, member)) {
          newPrototype[member] = prototype[member];
        }
      }
    }
  }
  for (var cls in pendingClasses) finishClass(cls);
};
Isolate.$lazy = function(prototype, staticName, fieldName, getterName, lazyValue) {
  var getter = new Function("{ return $." + fieldName + ";}");
  var sentinelUndefined = {};
  var sentinelInProgress = {};
  prototype[fieldName] = sentinelUndefined;
  prototype[getterName] = function() {
    var result = $[fieldName];
    try {
      if (result === sentinelUndefined) {
        $[fieldName] = sentinelInProgress;
        try {
          result = $[fieldName] = lazyValue();
        } finally {
          if (result === sentinelUndefined) {
            if ($[fieldName] === sentinelInProgress) {
              $[fieldName] = null;
            }
          }
        }
      } else if (result === sentinelInProgress) {
        $.throwCyclicInit(staticName);
      }
      return result;
    } finally {
      $[getterName] = getter;
    }
  };
};
Isolate.$finishIsolateConstructor = function(oldIsolate) {
  var isolateProperties = oldIsolate.$isolateProperties;
  var isolatePrototype = oldIsolate.prototype;
  var str = "{\n";
  str += "var properties = Isolate.$isolateProperties;\n";
  for (var staticName in isolateProperties) {
    if (Object.prototype.hasOwnProperty.call(isolateProperties, staticName)) {
      str += "this." + staticName + "= properties." + staticName + ";\n";
    }
  }
  str += "}\n";
  var newIsolate = new Function(str);
  newIsolate.prototype = isolatePrototype;
  isolatePrototype.constructor = newIsolate;
  newIsolate.$isolateProperties = isolateProperties;
  return newIsolate;
};
}

//@ sourceMappingURL=test.html.dart.js.map