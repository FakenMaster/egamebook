library egb_form_proxy;

import "../shared/form.dart";
import 'package:html5lib/dom.dart' as html5lib;
import "package:jsonml/jsonml2html5lib.dart";

/**
 * Library that takes the Map generated by [Form.toMap()] and parses it. The
 * [EgbInterface] is then responsible for creating the actual form (for example,
 * by adding DOM elements to page) and listening to user input.
 */

class FormProxy extends FormBase {
  FormProxy.fromMap(Map<String,Object> map) {
    assert((map["jsonml"] as List)[0] == "Form");
    submitText = (map["jsonml"] as List)[1]["submitText"];
    createElementsFromJsonML(map["jsonml"]);
    allFormElements.forEach((FormElement element) {
      Map<String,Object> values = (map["values"] as Map)[element.id];
      if (values != null) {
        (element as UpdatableByMap).updateFromMap(values);
      }
    });
  }
  
  void createElementsFromJsonML(List<Object> jsonml) {
    html5lib.Node node = decodeToHtml5Lib(jsonml, customTags: customTagHandlers,
        unsafe: true);
    children.addAll(node.children);
  }
  
  // TODO: Listens to user actions, sends for updates to scripter
}


Map<String,CustomTagHandler> customTagHandlers = {
  BaseRangeInput.elementClass: (Object jsonObject) {
    print("customTag for $jsonObject");
    Map attributes = _getAttributesFromJsonML(jsonObject);
    return new InterfaceRangeInput(attributes["name"], attributes["id"]);
  }
};

Map<String,Object> _getAttributesFromJsonML(Object jsonObject) {
  return (jsonObject as List)[1] as Map<String,Object>;
}

class InterfaceRangeInput extends BaseRangeInput {
  InterfaceRangeInput(String name, String id) : super(name) {
    this.id = id;
  }
}